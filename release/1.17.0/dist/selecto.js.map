{"version":3,"file":"selecto.js","sources":["../src/utils.ts","../src/consts.ts","../src/SelectoManager.tsx","../src/Selecto.tsx","../src/index.umd.ts"],"sourcesContent":["import { Hypertext, Rect } from \"./types\";\nimport { IObject, addClass, hasClass, calculateBoundSize } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport { getMinMaxs } from \"overlap-area\";\n\nexport function getClient(e: MouseEvent | TouchEvent) {\n    if (\"touches\" in e) {\n        const touch = e.touches[0] || e.changedTouches[0];\n\n        return {\n            clientX: touch.clientX,\n            clientY: touch.clientY,\n        };\n    } else {\n        return {\n            clientX: e.clientX,\n            clientY: e.clientY,\n        };\n    }\n}\n\nexport function elementFromPoint(clientX: number, clientY: number): HTMLElement | SVGElement | null {\n    return (document.elementFromPoint && document.elementFromPoint(clientX, clientY)) as any || null;\n}\nexport function createElement(\n    jsx: Hypertext,\n    prevTarget?: HTMLElement | SVGElement,\n    container?: HTMLElement | SVGElement,\n) {\n    const { tag, children, attributes, className, style } = jsx;\n    const el = prevTarget || document.createElement(tag) as HTMLElement | SVGElement;\n\n    for (const name in attributes) {\n        el.setAttribute(name, attributes[name]);\n    }\n    const elChildren = el.children;\n    children.forEach((child, i) => {\n        createElement(child, elChildren[i] as HTMLElement | SVGElement, el);\n    });\n    if (className) {\n        className.split(\" \").forEach(name => {\n            if (!hasClass(el, name)) {\n                addClass(el, name);\n            }\n        });\n    }\n    if (style) {\n        const elStyle = el.style;\n        for (const name in style) {\n            elStyle[name] = style[name];\n        }\n    }\n    if (!prevTarget && container) {\n        container.appendChild(el);\n    }\n    return el;\n}\nexport function h(\n    tag: string,\n    attrs: IObject<any>,\n    ...children: Hypertext[]\n): Hypertext {\n    const {\n        className = \"\",\n        style = {},\n        ...attributes\n    } = attrs || {};\n    return {\n        tag,\n        className,\n        style,\n        attributes,\n        children,\n    };\n}\n\nexport function diffValue<T>(prev: T, cur: T, func: (prev: T, cur: T) => void) {\n    if (prev !== cur) {\n        func(prev, cur);\n    }\n}\nexport function isFastInside(point: number[], points: number[][]) {\n    const { minX, minY, maxX, maxY } = getMinMaxs(points);\n    const [x, y] = point;\n\n    return minX <= x && x <= maxX && minY <= y && y <= maxY;\n}\nexport function getFastOverlapPoints(points1: number[][], points2: number[][]) {\n    const {\n        minX: minX1,\n        minY: minY1,\n        maxX: maxX1,\n        maxY: maxY1,\n    } = getMinMaxs(points1);\n    const {\n        minX: minX2,\n        minY: minY2,\n        maxX: maxX2,\n        maxY: maxY2,\n    } = getMinMaxs(points2);\n\n    if (maxX2 < minX1 || maxX1 < minX2 || maxY2 < minY1 || maxY1 < minY2) {\n        return [];\n    }\n    const width = Math.min(maxX2 - minX1, maxX1 - minX2);\n    const height = Math.min(maxY2 - minY1, maxY1 - minY2);\n\n    return [\n        [0, 0],\n        [width, 0],\n        [width, height],\n        [0, height],\n    ];\n}\nexport function getRect(\n    e: any, ratio: number,\n    boundArea = e.datas.boundArea,\n): Rect {\n    let {\n        distX = 0,\n        distY = 0,\n    } = e;\n    const { startX, startY } = e.datas;\n\n    if (ratio > 0) {\n        const nextHeight = Math.sqrt((distX * distX + distY * distY) / (1 + ratio * ratio));\n        const nextWidth = ratio * nextHeight;\n\n        distX = (distX >= 0 ? 1 : -1) * nextWidth;\n        distY = (distY >= 0 ? 1 : -1) * nextHeight;\n    }\n    let width = Math.abs(distX);\n    let height = Math.abs(distY);\n\n    const maxWidth = distX < 0 ? startX - boundArea.left : boundArea.right - startX;\n    const maxHeight = distY < 0 ? startY - boundArea.top : boundArea.bottom - startY;\n\n    [width, height] = calculateBoundSize([width, height], [0, 0], [maxWidth, maxHeight], !!ratio);\n    distX = (distX >= 0 ? 1 : -1) * width;\n    distY = (distY >= 0 ? 1 : -1) * height;\n\n    const tx = Math.min(0, distX);\n    const ty = Math.min(0, distY);\n    const left = startX + tx;\n    const top = startY + ty;\n\n    return {\n        left,\n        top,\n        right: left + width,\n        bottom: top + height,\n        width,\n        height,\n    };\n}\n\nexport function getDefaultElementRect(el: HTMLElement | SVGElement) {\n    const rect = el.getBoundingClientRect();\n    const { left, top, width, height } = rect;\n\n    return {\n        pos1: [left, top],\n        pos2: [left + width, top],\n        pos3: [left, top + height],\n        pos4: [left + width, top + height],\n    };\n}\n\nexport function passTargets(\n    beforeTargets: Array<HTMLElement | SVGElement>,\n    afterTargets: Array<HTMLElement | SVGElement>,\n    continueSelectWithoutDeselect: boolean,\n) {\n    const {\n        list,\n        prevList,\n        added,\n        removed,\n        maintained,\n    } = diff(beforeTargets, afterTargets);\n\n    return [\n        ...added.map(index => list[index]),\n        ...removed.map(index => prevList[index]),\n        ...continueSelectWithoutDeselect ? maintained.map(([, nextIndex]) => list[nextIndex]) : [],\n    ];\n}\n","import styled from \"css-styled\";\nimport { SelectoOptions } from \"./types\";\n\nexport const injector = styled(`\n:host {\n    position: fixed;\n    display: none;\n    border: 1px solid #4af;\n    background: rgba(68, 170, 255, 0.5);\n    pointer-events: none;\n    will-change: transform;\n    z-index: 100;\n}\n`);\n\n/**\n * @memberof Selecto\n */\nexport const CLASS_NAME = `selecto-selection ${injector.className}`;\n\nexport const PROPERTIES = [\n    \"boundContainer\",\n    \"selectableTargets\",\n    \"selectByClick\",\n    \"selectFromInside\",\n    \"continueSelect\",\n    \"continueSelectWithoutDeselect\",\n    \"toggleContinueSelect\",\n    \"toggleContinueSelectWithoutDeselect\",\n    \"keyContainer\",\n    \"hitRate\",\n    \"scrollOptions\",\n    \"checkInput\",\n    \"preventDefault\",\n    \"ratio\",\n    \"getElementRect\",\n    \"preventDragFromInside\",\n    \"rootContainer\",\n    \"dragCondition\",\n    \"clickBySelectEnd\",\n] as const;\n/**\n * @memberof Selecto\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    \"dragContainer\",\n    \"cspNonce\",\n    ...PROPERTIES,\n] as const;\n\nexport const OPTION_TYPES: { [key in keyof SelectoOptions]: any } = {\n    boundContainer: null,\n    portalContainer: null,\n    container: null,\n    dragContainer: null,\n    selectableTargets: Array,\n    selectByClick: Boolean,\n    selectFromInside: Boolean,\n    continueSelect: Boolean,\n    toggleContinueSelect: Array,\n    toggleContinueSelectWithoutDeselect: Array,\n    keyContainer: null,\n    hitRate: Number,\n    scrollOptions: Object,\n    checkInput: Boolean,\n    preventDefault: Boolean,\n    cspNonce: String,\n    ratio: Number,\n    getElementRect: Function,\n    preventDragFromInside: Boolean,\n    rootContainer: Object,\n    dragCondition: Function,\n    clickBySelectEnd: Boolean,\n    continueSelectWithoutDeselect: Boolean,\n};\n\n/**\n * @memberof Selecto\n */\nexport const EVENTS = [\n    \"dragStart\",\n    \"drag\",\n    \"dragEnd\",\n    \"selectStart\",\n    \"select\",\n    \"selectEnd\",\n    \"keydown\",\n    \"keyup\",\n    \"scroll\",\n] as const;\n\n/**\n * @memberof Selecto\n */\nexport const METHODS = [\n    \"clickTarget\",\n    \"getSelectableElements\",\n    \"setSelectedTargets\",\n    \"getElementPoints\",\n    \"getSelectedTargets\",\n    \"findSelectableTargets\",\n    \"triggerDragStart\",\n    \"checkScroll\",\n] as const;\n","import EventEmitter from \"@scena/event-emitter\";\nimport Gesto, { OnDrag, OnDragStart } from \"gesto\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport {\n    isObject,\n    camelize,\n    IObject,\n    addEvent,\n    removeEvent,\n    isArray,\n    isString,\n    between,\n    splitUnit,\n} from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport DragScroll from \"@scena/dragscroll\";\nimport KeyController, { getCombi } from \"keycon\";\nimport {\n    getAreaSize,\n    getOverlapPoints,\n    isInside,\n    fitPoints,\n} from \"overlap-area\";\nimport { getDistElementMatrix, calculateMatrixDist, createMatrix } from \"css-to-mat\";\nimport {\n    createElement,\n    h,\n    getClient,\n    diffValue,\n    getRect,\n    getDefaultElementRect,\n    passTargets,\n    elementFromPoint,\n} from \"./utils\";\nimport {\n    SelectoOptions,\n    SelectoProperties,\n    OnDragEvent,\n    SelectoEvents,\n    Rect,\n    BoundContainer,\n    InnerGroup,\n} from \"./types\";\nimport { PROPERTIES, injector, CLASS_NAME } from \"./consts\";\n\n/**\n * Selecto.js is a component that allows you to select elements in the drag area using the mouse or touch.\n * @sort 1\n * @extends EventEmitter\n */\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const getter = camelize(`get ${property}`);\n    if (prototype[getter]) {\n        attributes.get = function get() {\n            return this[getter]();\n        };\n    } else {\n        attributes.get = function get() {\n            return this.options[property];\n        };\n    }\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function set(value) {\n            this[setter](value);\n        };\n    } else {\n        attributes.set = function set(value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\nclass Selecto extends EventEmitter<SelectoEvents> {\n    public options: SelectoOptions;\n    private target!: HTMLElement | SVGElement;\n    private dragContainer!: Element | Window | Element[];\n    private container!: HTMLElement;\n    private gesto!: Gesto;\n    private injectResult!: InjectResult;\n    private selectedTargets: Array<HTMLElement | SVGElement> = [];\n    private dragScroll: DragScroll = new DragScroll();\n    private keycon!: KeyController;\n    private _keydownContinueSelect: boolean;\n    private _keydownContinueSelectWithoutDeselection: boolean;\n    /**\n     *\n     */\n    constructor(options: Partial<SelectoOptions> = {}) {\n        super();\n        this.target = options.portalContainer;\n        this.container = options.container || document.body;\n        this.options = {\n            portalContainer: null,\n            container: null,\n            dragContainer: null,\n            selectableTargets: [],\n            selectByClick: true,\n            selectFromInside: true,\n            clickBySelectEnd: false,\n            hitRate: 100,\n            continueSelect: false,\n            continueSelectWithoutDeselect: false,\n            toggleContinueSelect: null,\n            toggleContinueSelectWithoutDeselect: null,\n            keyContainer: null,\n            scrollOptions: undefined,\n            checkInput: false,\n            preventDefault: false,\n            boundContainer: false,\n            preventDragFromInside: true,\n            dragCondition: null,\n            rootContainer: null,\n            getElementRect: getDefaultElementRect,\n            cspNonce: \"\",\n            ratio: 0,\n            ...options,\n        };\n        this.initElement();\n        this.initDragScroll();\n        this.setKeyController();\n    }\n    /**\n     * You can set the currently selected targets.\n     *\n     */\n    public setSelectedTargets(\n        selectedTargets: Array<HTMLElement | SVGElement>\n    ): this {\n        this.selectedTargets = selectedTargets;\n\n        return this;\n    }\n    /**\n     * You can get the currently selected targets.\n     */\n    public getSelectedTargets(): Array<HTMLElement | SVGElement> {\n        return this.selectedTargets;\n    }\n    /**\n     * `OnDragStart` is triggered by an external event.\n     * @param - external event\n     * @example\n     * import Selecto from \"selecto\";\n     *\n     * const selecto = new Selecto();\n     *\n     * window.addEventListener(\"mousedown\", e => {\n     *   selecto.triggerDragStart(e);\n     * });\n     */\n    public triggerDragStart(e: MouseEvent | TouchEvent) {\n        this.gesto.triggerDragStart(e);\n        return this;\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.keycon && this.keycon.destroy();\n        this.gesto.unset();\n        this.injectResult.destroy();\n        removeEvent(document, \"selectstart\", this._onDocumentSelectStart);\n\n        this.keycon = null;\n        this.gesto = null;\n        this.injectResult = null;\n        this.target = null;\n        this.container = null;\n        this.options = null;\n    }\n    public getElementPoints(target: HTMLElement | SVGElement) {\n        const getElementRect = this.getElementRect || getDefaultElementRect;\n        const info = getElementRect(target);\n        const points = [info.pos1, info.pos2, info.pos4, info.pos3];\n\n        if (getElementRect !== getDefaultElementRect) {\n            const rect = target.getBoundingClientRect();\n\n            return fitPoints(points, rect);\n        }\n        return points;\n    }\n    /**\n     * Get all elements set in `selectableTargets`.\n     */\n    public getSelectableElements() {\n        const selectableElements: Array<HTMLElement | SVGElement> = [];\n\n        this.options.selectableTargets.forEach((target) => {\n            if (isObject(target)) {\n                selectableElements.push(target);\n            } else {\n                const elements = [].slice.call(\n                    document.querySelectorAll(target)\n                );\n\n                elements.forEach((el) => {\n                    selectableElements.push(el);\n                });\n            }\n        });\n\n        return selectableElements;\n    }\n    /**\n     * If scroll occurs during dragging, you can manually call this method to check the position again.\n     */\n    public checkScroll() {\n        if (!this.gesto.isFlag()) {\n            return;\n        }\n        const scrollOptions = this.scrollOptions;\n\n        // If it is a scrolling position, pass drag\n        scrollOptions?.container && this.dragScroll.checkScroll({\n            inputEvent: this.gesto.getCurrentEvent(),\n            ...scrollOptions,\n        });\n    }\n    /**\n     * Find for selectableTargets again during drag event\n     */\n    public findSelectableTargets(datas: any = this.gesto.getEventDatas()) {\n        const selectableTargets = this.getSelectableElements();\n        const selectablePoints = selectableTargets.map(\n            (target) => this.getElementPoints(target),\n        );\n        datas.selectableTargets = selectableTargets;\n        datas.selectablePoints = selectablePoints;\n        this._refreshGroups(datas);\n    }\n    /**\n     * External click or mouse events can be applied to the selecto.\n     * @params - Extenal click or mouse event\n     * @params - Specify the clicked target directly.\n     */\n    public clickTarget(\n        e: MouseEvent | TouchEvent,\n        clickedTarget?: Element\n    ): this {\n        const { clientX, clientY } = getClient(e);\n        const dragEvent = {\n            datas: {\n                selectFlag: false,\n            },\n            clientX,\n            clientY,\n            inputEvent: e,\n            isClick: true,\n            stop: () => {\n                return false;\n            },\n        } as any;\n        if (this._onDragStart(dragEvent, clickedTarget)) {\n            this._onDragEnd(dragEvent);\n        }\n        return this;\n    }\n    private setKeyController() {\n        const { keyContainer, toggleContinueSelect, toggleContinueSelectWithoutDeselect } = this.options;\n\n        if (this.keycon) {\n            this.keycon.destroy();\n            this.keycon = null;\n        }\n        if (toggleContinueSelect || toggleContinueSelectWithoutDeselect) {\n            this.keycon = new KeyController(keyContainer || window);\n            this.keycon\n                .keydown(this._onKeyDown)\n                .keyup(this._onKeyUp)\n                .on(\"blur\", this._onBlur);\n        }\n    }\n    private setKeyEvent() {\n        const { toggleContinueSelect, toggleContinueSelectWithoutDeselect } = this.options;\n        if ((!toggleContinueSelect && !toggleContinueSelectWithoutDeselect) || this.keycon) {\n            return;\n        }\n        this.setKeyController();\n    }\n    // with getter, setter property\n    private setKeyContainer(keyContainer: HTMLElement | Document | Window) {\n        const options = this.options;\n\n        diffValue(options.keyContainer, keyContainer, () => {\n            options.keyContainer = keyContainer;\n\n            this.setKeyController();\n        });\n    }\n    private getContinueSelect() {\n        const {\n            continueSelect,\n            toggleContinueSelect,\n        } = this.options;\n\n        if (!toggleContinueSelect || !this._keydownContinueSelect) {\n            return continueSelect;\n        }\n        return !continueSelect;\n    }\n    private getContinueSelectWithoutDeselect() {\n        const {\n            continueSelectWithoutDeselect,\n            toggleContinueSelectWithoutDeselect,\n        } = this.options;\n\n        if (!toggleContinueSelectWithoutDeselect || !this._keydownContinueSelectWithoutDeselection) {\n            return continueSelectWithoutDeselect;\n        }\n        return !continueSelectWithoutDeselect;\n    }\n    private setToggleContinueSelect(\n        toggleContinueSelect: string[][] | string[] | string\n    ) {\n        const options = this.options;\n\n        diffValue(options.toggleContinueSelect, toggleContinueSelect, () => {\n            options.toggleContinueSelect = toggleContinueSelect;\n\n            this.setKeyEvent();\n        });\n    }\n    private setToggleContinueSelectWithoutDeselect(\n        toggleContinueSelectWithoutDeselect: string[][] | string[] | string\n    ) {\n        const options = this.options;\n\n        diffValue(options.toggleContinueSelectWithoutDeselect, toggleContinueSelectWithoutDeselect, () => {\n            options.toggleContinueSelectWithoutDeselect = toggleContinueSelectWithoutDeselect;\n\n            this.setKeyEvent();\n        });\n    }\n    private setPreventDefault(value: boolean) {\n        this.gesto.options.preventDefault = value;\n    }\n    private setCheckInput(value: boolean) {\n        this.gesto.options.checkInput = value;\n    }\n    private initElement() {\n        this.target = createElement(\n            (<div className={CLASS_NAME}></div>) as any,\n            this.target,\n            this.container\n        );\n\n        const target = this.target;\n\n        const { dragContainer, checkInput, preventDefault } = this.options;\n        this.dragContainer =\n            typeof dragContainer === \"string\"\n                ? [].slice.call(document.querySelectorAll(dragContainer))\n                : dragContainer || (this.target.parentNode as any);\n        this.gesto = new Gesto(this.dragContainer, {\n            checkWindowBlur: true,\n            container: window,\n            checkInput,\n            preventDefault,\n        }).on({\n            dragStart: this._onDragStart,\n            drag: this._onDrag,\n            dragEnd: this._onDragEnd,\n        });\n        addEvent(document, \"selectstart\", this._onDocumentSelectStart);\n\n        this.injectResult = injector.inject(target, {\n            nonce: this.options.cspNonce,\n        });\n    }\n    private hitTest(\n        selectRect: Rect,\n        clientX: number,\n        clientY: number,\n        datas: any,\n    ) {\n        const { hitRate, selectByClick } = this.options;\n        const { left, top, right, bottom } = selectRect;\n        const innerGroups: Record<string | number, Record<string | number, InnerGroup>> = datas.innerGroups;\n        const innerWidth = datas.innerWidth;\n        const innerHeight = datas.innerHeight;\n        const rectPoints = [\n            [left, top],\n            [right, top],\n            [right, bottom],\n            [left, bottom],\n        ];\n        const isHit = (points: number[][]) => {\n            const inArea = isInside([clientX, clientY], points);\n\n            if (selectByClick && inArea) {\n                return true;\n            }\n            const overlapPoints = getOverlapPoints(rectPoints, points);\n\n            if (!overlapPoints.length) {\n                return false;\n            }\n            const overlapSize = getAreaSize(overlapPoints);\n            const targetSize = getAreaSize(points);\n\n            const hitRateValue = splitUnit(`${hitRate}`);\n\n            if (hitRateValue.unit === \"px\") {\n                return overlapSize >= hitRateValue.value;\n            } else {\n                const rate = between(\n                    Math.round((overlapSize / targetSize) * 100),\n                    0,\n                    100\n                );\n\n                return rate >= Math.min(100, hitRateValue.value);\n            }\n        };\n        if (!innerGroups) {\n            const selectableTargets: Array<HTMLElement | SVGElement> = datas.selectableTargets;\n            const selectablePoints: number[][][] = datas.selectablePoints;\n\n            return selectableTargets.filter((_, i) => {\n                return isHit(selectablePoints[i]);\n            });\n        }\n        let selectedTargets: Array<HTMLElement | SVGElement> = [];\n        const minX = Math.floor(left / innerWidth);\n        const maxX = Math.floor(right / innerWidth);\n        const minY = Math.floor(top / innerHeight);\n        const maxY = Math.floor(bottom / innerHeight);\n\n        for (let x = minX; x <= maxX; ++x) {\n            const yGroups = innerGroups[x];\n\n            if (!yGroups) {\n                continue;\n            }\n            for (let y = minY; y <= maxY; ++y) {\n                const group = yGroups[y];\n\n                if (!group) {\n                    continue;\n                }\n                const { points, targets } = group;\n                points.forEach((nextPoints, i) => {\n                    if (isHit(nextPoints)) {\n                        selectedTargets.push(targets[i]);\n                    }\n                });\n            }\n        }\n        return selectedTargets;\n    }\n    private initDragScroll() {\n        this.dragScroll\n            .on(\"scroll\", ({ container, direction }) => {\n                this.emit(\"scroll\", {\n                    container,\n                    direction,\n                });\n            })\n            .on(\"move\", ({ offsetX, offsetY, inputEvent }) => {\n                const gesto = this.gesto;\n\n                if (!gesto || !gesto.isFlag()) {\n                    return;\n                }\n\n                const datas = this.gesto.getEventDatas();\n                const boundArea = datas.boundArea;\n\n                datas.startX -= offsetX;\n                datas.startY -= offsetY;\n                datas.selectablePoints.forEach((points: number[][]) => {\n                    points.forEach((pos) => {\n                        pos[0] -= offsetX;\n                        pos[1] -= offsetY;\n                    });\n                });\n                this._refreshGroups(datas);\n\n                boundArea.left -= offsetX;\n                boundArea.right -= offsetX;\n                boundArea.top -= offsetY;\n                boundArea.bottom -= offsetY;\n\n                this.gesto.scrollBy(\n                    offsetX,\n                    offsetY,\n                    inputEvent.inputEvent,\n                    false\n                );\n                this._checkSelected(this.gesto.getCurrentEvent());\n            });\n    }\n    private _select(\n        prevSelectedTargets: Array<HTMLElement | SVGElement>,\n        selectedTargets: Array<HTMLElement | SVGElement>,\n        rect: Rect,\n        inputEvent: any,\n        isStart?: boolean\n    ) {\n        const { added, removed, prevList, list } = diff(\n            prevSelectedTargets,\n            selectedTargets\n        );\n\n        this.selectedTargets = selectedTargets;\n\n        if (isStart) {\n            /**\n             * When the select(drag) starts, the selectStart event is called.\n             * @memberof Selecto\n             * @event selectStart\n             * @param {Selecto.OnSelect} - Parameters for the selectStart event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"selectStart\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * }).on(\"selectEnd\", e => {\n             *   e.afterAdded.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.afterRemoved.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.emit(\"selectStart\", {\n                selected: selectedTargets,\n                added: added.map((index) => list[index]),\n                removed: removed.map((index) => prevList[index]),\n                rect,\n                inputEvent,\n            });\n        }\n        if (added.length || removed.length) {\n            /**\n             * When the select in real time, the select event is called.\n             * @memberof Selecto\n             * @event select\n             * @param {Selecto.OnSelect} - Parameters for the select event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"select\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.emit(\"select\", {\n                selected: selectedTargets,\n                added: added.map((index) => list[index]),\n                removed: removed.map((index) => prevList[index]),\n                rect,\n                inputEvent,\n            });\n        }\n    }\n    private _selectEnd(\n        startSelectedTargets: Array<HTMLElement | SVGElement>,\n        startPassedTargets: Array<HTMLElement | SVGElement>,\n        rect: Rect,\n        e: OnDragEvent\n    ) {\n        const { inputEvent, isDouble } = e;\n        const { added, removed, prevList, list } = diff(\n            startSelectedTargets,\n            this.selectedTargets\n        );\n        const {\n            added: afterAdded,\n            removed: afterRemoved,\n            prevList: afterPrevList,\n            list: afterList,\n        } = diff(startPassedTargets, this.selectedTargets);\n        const type = inputEvent && inputEvent.type;\n        const isDragStart = type === \"mousedown\" || type === \"touchstart\";\n\n        /**\n         * When the select(dragEnd or click) ends, the selectEnd event is called.\n         * @memberof Selecto\n         * @event selectEnd\n         * @param {Selecto.OnSelectEnd} - Parameters for the selectEnd event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"selectStart\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * }).on(\"selectEnd\", e => {\n         *   e.afterAdded.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.afterRemoved.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.emit(\"selectEnd\", {\n            selected: this.selectedTargets,\n            added: added.map((index) => list[index]),\n            removed: removed.map((index) => prevList[index]),\n            afterAdded: afterAdded.map((index) => afterList[index]),\n            afterRemoved: afterRemoved.map((index) => afterPrevList[index]),\n            isDragStart,\n            isClick: !!e.isClick,\n            isDouble: !!isDouble,\n            rect,\n            inputEvent,\n        });\n    }\n    private _onDragStart = (e: OnDragStart, clickedTarget?: Element) => {\n        const { datas, clientX, clientY, inputEvent } = e;\n        const {\n            selectFromInside,\n            selectByClick,\n            rootContainer,\n            boundContainer,\n            preventDragFromInside = true,\n            clickBySelectEnd,\n            dragCondition,\n        } = this.options;\n\n        if (dragCondition && !dragCondition(e)) {\n            e.stop();\n            return;\n        }\n        datas.innerWidth = window.innerWidth;\n        datas.innerHeight = window.innerHeight;\n        this.findSelectableTargets(datas);\n        datas.startSelectedTargets = this.selectedTargets;\n        datas.scaleMatrix = createMatrix();\n        datas.containerX = 0;\n        datas.containerY = 0;\n\n\n        let boundArea = {\n            left: -Infinity,\n            top: -Infinity,\n            right: Infinity,\n            bottom: Infinity,\n        };\n        if (rootContainer) {\n            const containerRect = this.container.getBoundingClientRect();\n\n            datas.containerX = containerRect.left;\n            datas.containerY = containerRect.top;\n            datas.scaleMatrix = getDistElementMatrix(this.container, rootContainer);\n        }\n\n        if (boundContainer) {\n            const boundInfo: Required<BoundContainer> =\n                isObject(boundContainer) && \"element\" in boundContainer\n                    ? {\n                        left: true,\n                        top: true,\n                        bottom: true,\n                        right: true,\n                        ...boundContainer,\n                    }\n                    : {\n                        element: boundContainer,\n                        left: true,\n                        top: true,\n                        bottom: true,\n                        right: true,\n                    };\n            const boundElement = boundInfo.element;\n            let rectElement: HTMLElement;\n\n            if (boundElement) {\n                if (isString(boundElement)) {\n                    rectElement = document.querySelector(boundElement);\n                } else if (boundElement === true) {\n                    rectElement = this.container;\n                } else {\n                    rectElement = boundElement;\n                }\n                const rect = rectElement.getBoundingClientRect();\n\n                if (boundInfo.left) {\n                    boundArea.left = rect.left;\n                }\n                if (boundInfo.top) {\n                    boundArea.top = rect.top;\n                }\n                if (boundInfo.right) {\n                    boundArea.right = rect.right;\n                }\n                if (boundInfo.bottom) {\n                    boundArea.bottom = rect.bottom;\n                }\n            }\n        }\n\n        datas.boundArea = boundArea;\n\n        const hitRect = {\n            left: clientX,\n            top: clientY,\n            right: clientX,\n            bottom: clientY,\n            width: 0,\n            height: 0,\n        };\n        let firstPassedTargets: Array<HTMLElement | SVGElement> = [];\n\n        if (!selectFromInside || (selectByClick && !clickBySelectEnd)) {\n            const pointTarget = this._findElement(\n                clickedTarget || elementFromPoint(clientX, clientY),\n                datas.selectableTargets,\n            );\n            firstPassedTargets = pointTarget ? [pointTarget] : [];\n        }\n        const hasInsideTargets = firstPassedTargets.length > 0;\n        const isPreventSelect = !selectFromInside && hasInsideTargets;\n\n        // prevent drag from inside when selectByClick is false\n        if (isPreventSelect && !selectByClick) {\n            e.stop();\n            return false;\n        }\n\n        const type = inputEvent.type;\n        const isTrusted = type === \"mousedown\" || type === \"touchstart\";\n        /**\n         * When the drag starts (triggers on mousedown or touchstart), the dragStart event is called.\n         * Call the stop () function if you have a specific element or don't want to raise a select\n         * @memberof Selecto\n         * @event dragStart\n         * @param {OnDragStart} - Parameters for the dragStart event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"dragStart\", e => {\n         *   if (e.inputEvent.target.tagName === \"SPAN\") {\n         *     e.stop();\n         *   }\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        const result =\n            !(e as any).isClick && isTrusted\n                ? this.emit(\"dragStart\", { ...e })\n                : true;\n\n        if (!result) {\n            e.stop();\n            return false;\n        }\n\n        if (this.continueSelect) {\n            firstPassedTargets = passTargets(\n                this.selectedTargets,\n                firstPassedTargets,\n                this.continueSelectWithoutDeselect,\n            );\n            datas.startPassedTargets = this.selectedTargets;\n        } else {\n            datas.startPassedTargets = [];\n        }\n        this._select(\n            this.selectedTargets,\n            firstPassedTargets,\n            hitRect,\n            inputEvent,\n            true\n        );\n        datas.startX = clientX;\n        datas.startY = clientY;\n        datas.selectFlag = false;\n        datas.preventDragFromInside = false;\n\n        const offsetPos = calculateMatrixDist(datas.scaleMatrix, [\n            clientX - datas.containerX,\n            clientY - datas.containerY,\n        ]);\n        datas.boundsArea = this.target.style.cssText += `position: ${rootContainer ? \"absolute\" : \"fixed\"};`\n            + `left:0px;top:0px;`\n            + `transform: translate(${offsetPos[0]}px, ${offsetPos[1]}px)`;\n\n        if (isPreventSelect && selectByClick && !clickBySelectEnd) {\n            inputEvent.preventDefault();\n\n            // prevent drag from inside when selectByClick is true and force call `selectEnd`\n            if (preventDragFromInside) {\n                this._selectEnd(\n                    datas.startSelectedTargets,\n                    datas.startPassedTargets,\n                    hitRect,\n                    e\n                );\n                datas.preventDragFromInside = true;\n            }\n        } else {\n            datas.selectFlag = true;\n            if (type === \"touchstart\") {\n                inputEvent.preventDefault();\n            }\n            const { scrollOptions } = this.options;\n            if (scrollOptions && scrollOptions.container) {\n                this.dragScroll.dragStart(e, scrollOptions);\n            }\n            if (clickBySelectEnd) {\n                datas.selectFlag = false;\n                e.preventDrag();\n            }\n        }\n        return true;\n    };\n    private _checkSelected(e: any, rect = getRect(e, this.options.ratio)) {\n        const { datas, inputEvent } = e;\n        const { top, left, width, height } = rect;\n        const selectFlag = datas.selectFlag;\n        const {\n            containerX,\n            containerY,\n            scaleMatrix,\n        } = datas;\n        const offsetPos = calculateMatrixDist(scaleMatrix, [\n            left - containerX,\n            top - containerY,\n        ]);\n        const offsetSize = calculateMatrixDist(scaleMatrix, [\n            width,\n            height,\n        ]);\n        let prevSelectedTargets: Array<HTMLElement | SVGElement> = [];\n        let selectedTargets: Array<HTMLElement | SVGElement> = [];\n        if (selectFlag) {\n            this.target.style.cssText +=\n                `display: block;` +\n                `left:0px;top:0px;` +\n                `transform: translate(${offsetPos[0]}px, ${offsetPos[1]}px);` +\n                `width:${offsetSize[0]}px;height:${offsetSize[1]}px;`;\n\n            const passedTargets = this.hitTest(\n                rect,\n                datas.startX,\n                datas.startY,\n                datas,\n            );\n            prevSelectedTargets = this.selectedTargets;\n            selectedTargets = passTargets(\n                datas.startPassedTargets,\n                passedTargets,\n                this.continueSelect && this.continueSelectWithoutDeselect,\n            );\n\n            this.selectedTargets = selectedTargets;\n        }\n        /**\n         * When the drag, the drag event is called.\n         * Call the stop () function if you have a specific element or don't want to raise a select\n         * @memberof Selecto\n         * @event drag\n         * @param {OnDrag} - Parameters for the drag event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"drag\", e => {\n         *   e.stop();\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        const result = this.emit(\"drag\", {\n            ...e,\n            isSelect: selectFlag,\n            rect,\n        });\n        if (result === false) {\n            this.target.style.cssText += \"display: none;\";\n            e.stop();\n            return;\n        }\n\n        if (selectFlag) {\n            this._select(prevSelectedTargets, selectedTargets, rect, inputEvent);\n        }\n    }\n    private _onDrag = (e: OnDrag) => {\n        if (e.datas.selectFlag) {\n            const scrollOptions = this.scrollOptions;\n\n            // If it is a scrolling position, pass drag\n            if (scrollOptions?.container && this.dragScroll.drag(e, scrollOptions)) {\n                return;\n            }\n        }\n        this._checkSelected(e);\n    };\n    private _onDragEnd = (e: OnDragEvent) => {\n        const { datas, inputEvent } = e;\n        const rect = getRect(e, this.options.ratio);\n        const selectFlag = datas.selectFlag;\n\n        /**\n         * When the drag ends (triggers on mouseup or touchend after drag), the dragEnd event is called.\n         * @memberof Selecto\n         * @event dragEnd\n         * @param {OnDragEnd} - Parameters for the dragEnd event\n         */\n        if (inputEvent && !e.isClick) {\n            this.emit(\"dragEnd\", {\n                isDouble: !!e.isDouble,\n                isDrag: false,\n                isSelect: selectFlag,\n                ...e,\n                isClick: !!e.isClick,\n                rect,\n            });\n        }\n        this.target.style.cssText += \"display: none;\";\n        if (selectFlag) {\n            datas.selectFlag = false;\n            this.dragScroll.dragEnd();\n        } else if (this.selectByClick && this.clickBySelectEnd) {\n            // only clickBySelectEnd\n            const pointTarget = this._findElement(\n                elementFromPoint(e.clientX, e.clientY),\n                datas.selectableTargets,\n            );\n            this._select(this.selectedTargets, pointTarget ? [pointTarget] : [], rect, inputEvent);\n        }\n        if (!datas.preventDragFromInside) {\n            this._selectEnd(\n                datas.startSelectedTargets,\n                datas.startPassedTargets,\n                rect,\n                e\n            );\n        }\n    };\n    private _sameCombiKey(e: any, keys: string | string[] | string[][], isKeyup?: boolean) {\n        if (!keys) {\n            return false;\n        }\n        const combi = getCombi(e.inputEvent, e.key);\n        const nextKeys = [].concat(keys);\n        const toggleKeys = isArray(nextKeys[0]) ? nextKeys : [nextKeys];\n\n        if (isKeyup) {\n            const singleKey = e.key;\n\n            return toggleKeys.some((keys) =>\n                keys.some((key) => key === singleKey)\n            );\n        }\n        return toggleKeys.some((keys) =>\n            keys.every((key) => combi.indexOf(key) > -1)\n        );\n    }\n    private _onKeyDown = (e: any) => {\n        const options = this.options;\n        let isKeyDown = false;\n\n        if (!this._keydownContinueSelect) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelect);\n\n            this._keydownContinueSelect = result;\n            isKeyDown = result;\n        }\n        if (!this._keydownContinueSelectWithoutDeselection) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelectWithoutDeselect);\n\n            this._keydownContinueSelectWithoutDeselection = result;\n            isKeyDown = isKeyDown || result;\n        }\n        if (!isKeyDown) {\n            return;\n        }\n        /**\n         * When you keydown the key you specified in toggleContinueSelect, the keydown event is called.\n         * @memberof Selecto\n         * @event keydown\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.emit(\"keydown\", {\n            keydownContinueSelect: this._keydownContinueSelect,\n            keydownContinueSelectWithoutDeselection: this._keydownContinueSelectWithoutDeselection,\n        });\n    };\n    private _onKeyUp = (e: any) => {\n        const options = this.options;\n        let isKeyUp = false;\n\n        if (this._keydownContinueSelect) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelect, true);\n            this._keydownContinueSelect = !result;\n\n            isKeyUp = result;\n        }\n        if (this._keydownContinueSelectWithoutDeselection) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelectWithoutDeselect, true);\n            this._keydownContinueSelectWithoutDeselection = !result;\n\n            isKeyUp = isKeyUp || result;\n        }\n        if (!isKeyUp) {\n            return;\n        }\n\n        /**\n         * When you keyup the key you specified in toggleContinueSelect, the keyup event is called.\n         * @memberof Selecto\n         * @event keyup\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.emit(\"keyup\", {\n            keydownContinueSelect: this._keydownContinueSelect,\n            keydownContinueSelectWithoutDeselection: this._keydownContinueSelectWithoutDeselection,\n        });\n    };\n    private _onBlur = () => {\n        if (this._keydownContinueSelect || this._keydownContinueSelectWithoutDeselection) {\n            this._keydownContinueSelect = false;\n            this._keydownContinueSelectWithoutDeselection = false;\n            this.emit(\"keyup\", {\n                keydownContinueSelect: this._keydownContinueSelect,\n                keydownContinueSelectWithoutDeselection: this._keydownContinueSelectWithoutDeselection,\n            });\n        }\n    };\n    private _onDocumentSelectStart = (e: any) => {\n        if (!this.gesto.isFlag()) {\n            return;\n        }\n        let dragContainer = this.dragContainer;\n\n        if (dragContainer === window) {\n            dragContainer = document.documentElement;\n        }\n        const containers =\n            dragContainer instanceof Element\n                ? [dragContainer]\n                : ([].slice.call(dragContainer) as Element[]);\n        const target = e.target;\n\n        containers.some((container) => {\n            if (container === target || container.contains(target)) {\n                e.preventDefault();\n                return true;\n            }\n        });\n    };\n    private _findElement(clickedTarget: Element | null, selectableTargets: Array<Element>): HTMLElement | SVGElement {\n        let pointTarget = clickedTarget;\n\n        while (pointTarget) {\n            if (selectableTargets.indexOf(pointTarget) > -1) {\n                break;\n            }\n            pointTarget = pointTarget.parentElement;\n        }\n        return pointTarget as any;\n    }\n    private _refreshGroups(datas: any) {\n        const innerWidth = datas.innerWidth;\n        const innerHeight = datas.innerHeight;\n\n        if (!innerWidth || !innerHeight) {\n            datas.innerGroups = null;\n        } else {\n            const selectableTargets: Array<HTMLElement | SVGElement> = datas.selectableTargets;\n            const selectablePoints: number[][][] = datas.selectablePoints;\n            const groups: Record<string | number, Record<string | number, InnerGroup>> = {};\n\n            selectablePoints.forEach((points, i) => {\n                const pos = points[0];\n                const x = Math.floor(pos[0] / innerWidth);\n                const y = Math.floor(pos[1] / innerHeight);\n\n                groups[x] = groups[x] || {};\n                groups[x][y] = groups[x][y] || {\n                    points: [],\n                    targets: [],\n                };\n\n                const { targets, points: groupPoints } = groups[x][y];\n\n                targets.push(selectableTargets[i]);\n                groupPoints.push(points);\n            });\n\n            datas.innerGroups = groups;\n        }\n    }\n}\n\ninterface Selecto extends SelectoProperties { }\n\nexport default Selecto;\n","import SelectoManager from \"./SelectoManager\";\n\nclass Selecto extends SelectoManager {\n\n}\nexport default Selecto;\n","import Selecto, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (Selecto as any)[name] = modules[name];\n}\n\nexport default Selecto;\n"],"names":["getClient","e","touch","touches","changedTouches","clientX","clientY","elementFromPoint","document","createElement","jsx","prevTarget","container","tag","children","attributes","className","style","el","name","setAttribute","elChildren","forEach","child","i","split","hasClass","addClass","elStyle","appendChild","h","attrs","_i","_a","_b","_c","diffValue","prev","cur","func","getRect","ratio","boundArea","datas","distX","distY","_d","startX","startY","nextHeight","Math","sqrt","nextWidth","width","abs","height","maxWidth","left","right","maxHeight","top","bottom","tx","min","ty","getDefaultElementRect","rect","getBoundingClientRect","pos1","pos2","pos3","pos4","passTargets","beforeTargets","afterTargets","continueSelectWithoutDeselect","list","prevList","added","removed","maintained","map","index","nextIndex","injector","styled","CLASS_NAME","PROPERTIES","OPTIONS","__spreadArrays","OPTION_TYPES","boundContainer","portalContainer","dragContainer","selectableTargets","Array","selectByClick","Boolean","selectFromInside","continueSelect","toggleContinueSelect","toggleContinueSelectWithoutDeselect","keyContainer","hitRate","Number","scrollOptions","Object","checkInput","preventDefault","cspNonce","String","getElementRect","Function","preventDragFromInside","rootContainer","dragCondition","clickBySelectEnd","EVENTS","METHODS","__extends","options","_super","_this","DragScroll","clickedTarget","inputEvent","stop","innerWidth","window","innerHeight","findSelectableTargets","startSelectedTargets","selectedTargets","scaleMatrix","createMatrix","containerX","containerY","Infinity","containerRect","getDistElementMatrix","boundInfo","isObject","element","boundElement","rectElement","isString","querySelector","hitRect","firstPassedTargets","pointTarget","_findElement","hasInsideTargets","length","isPreventSelect","type","isTrusted","result","isClick","emit","startPassedTargets","_select","selectFlag","offsetPos","calculateMatrixDist","boundsArea","target","cssText","_selectEnd","dragScroll","dragStart","preventDrag","drag","_checkSelected","isDouble","isDrag","isSelect","dragEnd","isKeyDown","_keydownContinueSelect","_sameCombiKey","_keydownContinueSelectWithoutDeselection","keydownContinueSelect","keydownContinueSelectWithoutDeselection","isKeyUp","gesto","isFlag","documentElement","containers","Element","slice","call","some","contains","body","undefined","initElement","initDragScroll","setKeyController","triggerDragStart","off","keycon","destroy","unset","injectResult","removeEvent","_onDocumentSelectStart","info","points","fitPoints","selectableElements","push","elements","querySelectorAll","checkScroll","getCurrentEvent","getEventDatas","getSelectableElements","selectablePoints","getElementPoints","_refreshGroups","dragEvent","_onDragStart","_onDragEnd","KeyController","keydown","_onKeyDown","keyup","_onKeyUp","on","_onBlur","setKeyEvent","value","parentNode","Gesto","checkWindowBlur","_onDrag","addEvent","inject","nonce","selectRect","innerGroups","rectPoints","isHit","inArea","isInside","overlapPoints","getOverlapPoints","overlapSize","getAreaSize","targetSize","hitRateValue","splitUnit","unit","rate","between","round","selectablePoints_1","filter","_","minX","floor","maxX","minY","maxY","x","yGroups","y","group","targets","nextPoints","direction","offsetX","offsetY","pos","scrollBy","prevSelectedTargets","isStart","selected","afterAdded","afterRemoved","afterPrevList","afterList","isDragStart","offsetSize","passedTargets","hitTest","keys","isKeyup","combi","getCombi","key","nextKeys","concat","toggleKeys","isArray","singleKey_1","every","indexOf","parentElement","selectableTargets_1","groups_1","groupPoints","Selecto","Properties","prototype","property","enumerable","configurable","get","getter","camelize","setter","set","defineProperty","EventEmitter","SelectoManager","modules"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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"}