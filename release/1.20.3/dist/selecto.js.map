{"version":3,"file":"selecto.js","sources":["../src/utils.ts","../src/consts.ts","../src/SelectoManager.tsx","../src/Selecto.tsx","../src/index.umd.ts"],"sourcesContent":["import type { Hypertext, Rect } from \"./types\";\nimport { IObject, addClass, hasClass, calculateBoundSize, getDist } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport { getMinMaxs } from \"overlap-area\";\n\nexport function getClient(e: MouseEvent | TouchEvent) {\n    if (\"touches\" in e) {\n        const touch = e.touches[0] || e.changedTouches[0];\n\n        return {\n            clientX: touch.clientX,\n            clientY: touch.clientY,\n        };\n    } else {\n        return {\n            clientX: e.clientX,\n            clientY: e.clientY,\n        };\n    }\n}\nexport function filterDuplicated<T>(arr: T[]): T[] {\n    if (typeof Map === \"undefined\") {\n        return arr.filter((value, index) => {\n            return arr.indexOf(value) === index;\n        });\n    }\n    const map = new Map<T, true>();\n    return arr.filter(value => {\n        if (map.has(value)) {\n            return false;\n        }\n        map.set(value, true);\n        return true;\n    });\n}\nexport function elementFromPoint(clientX: number, clientY: number): HTMLElement | SVGElement | null {\n    return (document.elementFromPoint && document.elementFromPoint(clientX, clientY)) as any || null;\n}\nexport function createElement(\n    jsx: Hypertext,\n    prevTarget?: HTMLElement | SVGElement,\n    container?: HTMLElement | SVGElement,\n) {\n    const { tag, children, attributes, className, style } = jsx;\n    const el = prevTarget || document.createElement(tag) as HTMLElement | SVGElement;\n\n    for (const name in attributes) {\n        el.setAttribute(name, attributes[name]);\n    }\n    const elChildren = el.children;\n    children.forEach((child, i) => {\n        createElement(child, elChildren[i] as HTMLElement | SVGElement, el);\n    });\n    if (className) {\n        className.split(\" \").forEach(name => {\n            if (!hasClass(el, name)) {\n                addClass(el, name);\n            }\n        });\n    }\n    if (style) {\n        const elStyle = el.style;\n        for (const name in style) {\n            elStyle[name] = style[name];\n        }\n    }\n    if (!prevTarget && container) {\n        container.appendChild(el);\n    }\n    return el;\n}\nexport function h(\n    tag: string,\n    attrs: IObject<any>,\n    ...children: Hypertext[]\n): Hypertext {\n    const {\n        className = \"\",\n        style = {},\n        ...attributes\n    } = attrs || {};\n    return {\n        tag,\n        className,\n        style,\n        attributes,\n        children,\n    };\n}\n\nexport function diffValue<T>(prev: T, cur: T, func: (prev: T, cur: T) => void) {\n    if (prev !== cur) {\n        func(prev, cur);\n    }\n}\nexport function isFastInside(point: number[], points: number[][]) {\n    const { minX, minY, maxX, maxY } = getMinMaxs(points);\n    const [x, y] = point;\n\n    return minX <= x && x <= maxX && minY <= y && y <= maxY;\n}\nexport function getFastOverlapPoints(points1: number[][], points2: number[][]) {\n    const {\n        minX: minX1,\n        minY: minY1,\n        maxX: maxX1,\n        maxY: maxY1,\n    } = getMinMaxs(points1);\n    const {\n        minX: minX2,\n        minY: minY2,\n        maxX: maxX2,\n        maxY: maxY2,\n    } = getMinMaxs(points2);\n\n    if (maxX2 < minX1 || maxX1 < minX2 || maxY2 < minY1 || maxY1 < minY2) {\n        return [];\n    }\n    const width = Math.min(maxX2 - minX1, maxX1 - minX2);\n    const height = Math.min(maxY2 - minY1, maxY1 - minY2);\n\n    return [\n        [0, 0],\n        [width, 0],\n        [width, height],\n        [0, height],\n    ];\n}\nexport function getRect(\n    e: any, ratio: number,\n    boundArea = e.data.boundArea,\n): Rect {\n    let {\n        distX = 0,\n        distY = 0,\n    } = e;\n    const { startX, startY } = e.data;\n\n    if (ratio > 0) {\n        const nextHeight = Math.sqrt((distX * distX + distY * distY) / (1 + ratio * ratio));\n        const nextWidth = ratio * nextHeight;\n\n        distX = (distX >= 0 ? 1 : -1) * nextWidth;\n        distY = (distY >= 0 ? 1 : -1) * nextHeight;\n    }\n    let width = Math.abs(distX);\n    let height = Math.abs(distY);\n\n    const maxWidth = distX < 0 ? startX - boundArea.left : boundArea.right - startX;\n    const maxHeight = distY < 0 ? startY - boundArea.top : boundArea.bottom - startY;\n\n    [width, height] = calculateBoundSize([width, height], [0, 0], [maxWidth, maxHeight], !!ratio);\n    distX = (distX >= 0 ? 1 : -1) * width;\n    distY = (distY >= 0 ? 1 : -1) * height;\n\n    const tx = Math.min(0, distX);\n    const ty = Math.min(0, distY);\n    const left = startX + tx;\n    const top = startY + ty;\n\n    return {\n        left,\n        top,\n        right: left + width,\n        bottom: top + height,\n        width,\n        height,\n    };\n}\n\nexport function getDefaultElementRect(el: HTMLElement | SVGElement) {\n    const rect = el.getBoundingClientRect();\n    const { left, top, width, height } = rect;\n\n    return {\n        pos1: [left, top],\n        pos2: [left + width, top],\n        pos3: [left, top + height],\n        pos4: [left + width, top + height],\n    };\n}\n\nexport function passTargets(\n    beforeTargets: Array<HTMLElement | SVGElement>,\n    afterTargets: Array<HTMLElement | SVGElement>,\n    continueSelectWithoutDeselect: boolean,\n) {\n    const {\n        list,\n        prevList,\n        added,\n        removed,\n        maintained,\n    } = diff(beforeTargets, afterTargets);\n\n    return [\n        ...added.map(index => list[index]),\n        ...removed.map(index => prevList[index]),\n        ...continueSelectWithoutDeselect ? maintained.map(([, nextIndex]) => list[nextIndex]) : [],\n    ];\n}\n\nexport function getLineSize(points: number[][]) {\n    let size = 0;\n    const length = points.length;\n\n    for (let i = 1; i < length; ++i) {\n        size = Math.max(getDist(points[i], points[i - 1]), size);\n    }\n\n    return size;\n}\n","import styled from \"css-styled\";\nimport { SelectoOptions } from \"./types\";\n\nexport const injector = styled(`\n:host {\n    position: fixed;\n    display: none;\n    border: 1px solid #4af;\n    background: rgba(68, 170, 255, 0.5);\n    pointer-events: none;\n    will-change: transform;\n    z-index: 100;\n}\n`);\n\n/**\n * @memberof Selecto\n */\nexport const CLASS_NAME = `selecto-selection ${injector.className}`;\n\nexport const PROPERTIES = [\n    \"boundContainer\",\n    \"selectableTargets\",\n    \"selectByClick\",\n    \"selectFromInside\",\n    \"continueSelect\",\n    \"continueSelectWithoutDeselect\",\n    \"toggleContinueSelect\",\n    \"toggleContinueSelectWithoutDeselect\",\n    \"keyContainer\",\n    \"hitRate\",\n    \"scrollOptions\",\n    \"checkInput\",\n    \"preventDefault\",\n    \"ratio\",\n    \"getElementRect\",\n    \"preventDragFromInside\",\n    \"rootContainer\",\n    \"dragCondition\",\n    \"clickBySelectEnd\",\n] as const;\n/**\n * @memberof Selecto\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    \"dragContainer\",\n    \"cspNonce\",\n    \"preventClickEventOnDrag\",\n    \"preventClickEventOnDragStart\",\n    \"preventRightClick\",\n    ...PROPERTIES,\n] as const;\n\nexport const OPTION_TYPES: { [key in keyof SelectoOptions]: any } = {\n    boundContainer: null,\n    portalContainer: null,\n    container: null,\n    dragContainer: null,\n    selectableTargets: Array,\n    selectByClick: Boolean,\n    selectFromInside: Boolean,\n    continueSelect: Boolean,\n    toggleContinueSelect: Array,\n    toggleContinueSelectWithoutDeselect: Array,\n    keyContainer: null,\n    hitRate: Number,\n    scrollOptions: Object,\n    checkInput: Boolean,\n    preventDefault: Boolean,\n    cspNonce: String,\n    ratio: Number,\n    getElementRect: Function,\n    preventDragFromInside: Boolean,\n    rootContainer: Object,\n    dragCondition: Function,\n    clickBySelectEnd: Boolean,\n    continueSelectWithoutDeselect: Boolean,\n    preventClickEventOnDragStart: Boolean,\n    preventClickEventOnDrag: Boolean,\n};\n\n/**\n * @memberof Selecto\n */\nexport const EVENTS = [\n    \"dragStart\",\n    \"drag\",\n    \"dragEnd\",\n    \"selectStart\",\n    \"select\",\n    \"selectEnd\",\n    \"keydown\",\n    \"keyup\",\n    \"scroll\",\n] as const;\n\n/**\n * @memberof Selecto\n */\nexport const METHODS = [\n    \"clickTarget\",\n    \"getSelectableElements\",\n    \"setSelectedTargets\",\n    \"getElementPoints\",\n    \"getSelectedTargets\",\n    \"findSelectableTargets\",\n    \"triggerDragStart\",\n    \"checkScroll\",\n    \"selectTargetsByPoints\",\n    \"setSelectedTargetsByPoints\",\n] as const;\n","import EventEmitter from \"@scena/event-emitter\";\nimport Gesto, { OnDrag, OnDragStart } from \"gesto\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport {\n    isObject,\n    camelize,\n    IObject,\n    addEvent,\n    removeEvent,\n    isArray,\n    isString,\n    between,\n    splitUnit,\n} from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport DragScroll from \"@scena/dragscroll\";\nimport KeyController, { getCombi } from \"keycon\";\nimport {\n    getAreaSize,\n    getOverlapPoints,\n    isInside,\n    fitPoints,\n} from \"overlap-area\";\nimport { getDistElementMatrix, calculateMatrixDist, createMatrix } from \"css-to-mat\";\nimport {\n    createElement,\n    h,\n    getClient,\n    diffValue,\n    getRect,\n    getDefaultElementRect,\n    passTargets,\n    elementFromPoint,\n    filterDuplicated,\n    getLineSize,\n} from \"./utils\";\nimport {\n    SelectoOptions,\n    SelectoProperties,\n    OnDragEvent,\n    SelectoEvents,\n    Rect,\n    BoundContainer,\n    InnerGroup,\n    SelectedTargets,\n    SelectedTargetsWithRect,\n} from \"./types\";\nimport { PROPERTIES, injector, CLASS_NAME } from \"./consts\";\n\n/**\n * Selecto.js is a component that allows you to select elements in the drag area using the mouse or touch.\n * @sort 1\n * @extends EventEmitter\n */\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const getter = camelize(`get ${property}`);\n    if (prototype[getter]) {\n        attributes.get = function get() {\n            return this[getter]();\n        };\n    } else {\n        attributes.get = function get() {\n            return this.options[property];\n        };\n    }\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function set(value) {\n            this[setter](value);\n        };\n    } else {\n        attributes.set = function set(value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\nclass Selecto extends EventEmitter<SelectoEvents> {\n    public options: SelectoOptions;\n    private target!: HTMLElement | SVGElement;\n    private dragContainer!: Element | Window | Element[];\n    private container!: HTMLElement;\n    private gesto!: Gesto;\n    private injectResult!: InjectResult;\n    private selectedTargets: Array<HTMLElement | SVGElement> = [];\n    private dragScroll: DragScroll = new DragScroll();\n    private keycon!: KeyController;\n    private _keydownContinueSelect: boolean;\n    private _keydownContinueSelectWithoutDeselection: boolean;\n    /**\n     *\n     */\n    constructor(options: Partial<SelectoOptions> = {}) {\n        super();\n        this.target = options.portalContainer;\n        let container = options.container;\n        this.options = {\n            portalContainer: null,\n            container: null,\n            dragContainer: null,\n            selectableTargets: [],\n            selectByClick: true,\n            selectFromInside: true,\n            clickBySelectEnd: false,\n            hitRate: 100,\n            continueSelect: false,\n            continueSelectWithoutDeselect: false,\n            toggleContinueSelect: null,\n            toggleContinueSelectWithoutDeselect: null,\n            keyContainer: null,\n            scrollOptions: undefined,\n            checkInput: false,\n            preventDefault: false,\n            boundContainer: false,\n            preventDragFromInside: true,\n            dragCondition: null,\n            rootContainer: null,\n            getElementRect: getDefaultElementRect,\n            cspNonce: \"\",\n            ratio: 0,\n            ...options,\n        };\n        const portalContainer = this.options.portalContainer;\n\n        if (portalContainer) {\n            container = portalContainer.parentElement;\n        }\n        this.container = container || document.body;\n        this.initElement();\n        this.initDragScroll();\n        this.setKeyController();\n    }\n    /**\n     * You can set the currently selected targets.\n     * selectByClick, continueSelect, and continueSelectWithoutDeselect are not applied.\n     */\n    public setSelectedTargets(\n        selectedTargets: Array<HTMLElement | SVGElement>\n    ): SelectedTargets {\n        const beforeSelected = this.selectedTargets;\n        const { added, removed, prevList, list } = diff(\n            beforeSelected,\n            selectedTargets\n        );\n        this.selectedTargets = selectedTargets;\n\n        return {\n            added: added.map(index => list[index]),\n            removed: removed.map(index => prevList[index]),\n            beforeSelected,\n            selected: selectedTargets,\n        };\n    }\n    /**\n     * You can set the currently selected targets by points\n     * selectByClick, continueSelect, and continueSelectWithoutDeselect are not applied.\n     */\n    public setSelectedTargetsByPoints(\n        point1: number[],\n        point2: number[],\n    ): SelectedTargetsWithRect {\n        const left = Math.min(point1[0], point2[0]);\n        const top = Math.min(point1[1], point2[1]);\n        const right = Math.max(point1[0], point2[0]);\n        const bottom = Math.max(point1[1], point2[1]);\n        const rect: Rect = {\n            left,\n            top,\n            right,\n            bottom,\n            width: right - left,\n            height: bottom - top,\n        };\n        const data = { ignoreClick: true };\n\n        this.findSelectableTargets(data);\n        const selectedElements = this.hitTest(rect, data);\n        const result = this.setSelectedTargets(selectedElements);\n\n        return {\n            ...result,\n            rect,\n        };\n    }\n    /**\n     * Select target by virtual drag from startPoint to endPoint.\n     * The target of inputEvent is null.\n     */\n    public selectTargetsByPoints(\n        startPoint: number[],\n        endPoint: number[],\n    ) {\n        const mousedown = new MouseEvent(\"mousedown\", {\n            clientX: startPoint[0],\n            clientY: startPoint[1],\n            cancelable: true,\n            bubbles: true,\n        });\n        const mousemove = new MouseEvent(\"mousemove\", {\n            clientX: endPoint[0],\n            clientY: endPoint[1],\n            cancelable: true,\n            bubbles: true,\n        });\n        const mouseup = new MouseEvent(\"mousemove\", {\n            clientX: endPoint[0],\n            clientY: endPoint[1],\n            cancelable: true,\n            bubbles: true,\n        });\n        const gesto = this.gesto;\n        const result = gesto.onDragStart(mousedown);\n\n        if (result !== false) {\n            gesto.onDrag(mousemove);\n            gesto.onDragEnd(mouseup);\n        }\n    }\n    /**\n     * You can get the currently selected targets.\n     */\n    public getSelectedTargets(): Array<HTMLElement | SVGElement> {\n        return this.selectedTargets;\n    }\n    /**\n     * `OnDragStart` is triggered by an external event.\n     * @param - external event\n     * @example\n     * import Selecto from \"selecto\";\n     *\n     * const selecto = new Selecto();\n     *\n     * window.addEventListener(\"mousedown\", e => {\n     *   selecto.triggerDragStart(e);\n     * });\n     */\n    public triggerDragStart(e: MouseEvent | TouchEvent) {\n        this.gesto.triggerDragStart(e);\n        return this;\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.keycon && this.keycon.destroy();\n        this.gesto.unset();\n        this.injectResult.destroy();\n        removeEvent(document, \"selectstart\", this._onDocumentSelectStart);\n\n        this.keycon = null;\n        this.gesto = null;\n        this.injectResult = null;\n        this.target = null;\n        this.container = null;\n        this.options = null;\n    }\n    public getElementPoints(target: HTMLElement | SVGElement) {\n        const getElementRect = this.getElementRect || getDefaultElementRect;\n        const info = getElementRect(target);\n        const points = [info.pos1, info.pos2, info.pos4, info.pos3];\n\n        if (getElementRect !== getDefaultElementRect) {\n            const rect = target.getBoundingClientRect();\n\n            return fitPoints(points, rect);\n        }\n        return points;\n    }\n    /**\n     * Get all elements set in `selectableTargets`.\n     */\n    public getSelectableElements() {\n        const selectableElements: Array<HTMLElement | SVGElement> = [];\n\n        this.options.selectableTargets.forEach((target) => {\n            if (isObject(target)) {\n                selectableElements.push(target);\n            } else {\n                const elements = [].slice.call(\n                    document.querySelectorAll(target)\n                );\n\n                elements.forEach((el) => {\n                    selectableElements.push(el);\n                });\n            }\n        });\n\n        return selectableElements;\n    }\n    /**\n     * If scroll occurs during dragging, you can manually call this method to check the position again.\n     */\n    public checkScroll() {\n        if (!this.gesto.isFlag()) {\n            return;\n        }\n        const scrollOptions = this.scrollOptions;\n\n        // If it is a scrolling position, pass drag\n        scrollOptions?.container && this.dragScroll.checkScroll({\n            inputEvent: this.gesto.getCurrentEvent(),\n            ...scrollOptions,\n        });\n    }\n    /**\n     * Find for selectableTargets again during drag event\n     */\n    public findSelectableTargets(data: any = this.gesto.getEventData()) {\n        const selectableTargets = this.getSelectableElements();\n        const selectablePoints = selectableTargets.map(\n            (target) => this.getElementPoints(target),\n        );\n        data.selectableTargets = selectableTargets;\n        data.selectablePoints = selectablePoints;\n        this._refreshGroups(data);\n    }\n    /**\n     * External click or mouse events can be applied to the selecto.\n     * @params - Extenal click or mouse event\n     * @params - Specify the clicked target directly.\n     */\n    public clickTarget(\n        e: MouseEvent | TouchEvent,\n        clickedTarget?: Element\n    ): this {\n        const { clientX, clientY } = getClient(e);\n        const dragEvent = {\n            data: {\n                selectFlag: false,\n            },\n            clientX,\n            clientY,\n            inputEvent: e,\n            isClick: true,\n            stop: () => {\n                return false;\n            },\n        } as any;\n        if (this._onDragStart(dragEvent, clickedTarget)) {\n            this._onDragEnd(dragEvent);\n        }\n        return this;\n    }\n    private setKeyController() {\n        const { keyContainer, toggleContinueSelect, toggleContinueSelectWithoutDeselect } = this.options;\n\n        if (this.keycon) {\n            this.keycon.destroy();\n            this.keycon = null;\n        }\n        if (toggleContinueSelect || toggleContinueSelectWithoutDeselect) {\n            this.keycon = new KeyController(keyContainer || window);\n            this.keycon\n                .keydown(this._onKeyDown)\n                .keyup(this._onKeyUp)\n                .on(\"blur\", this._onBlur);\n        }\n    }\n    private setKeyEvent() {\n        const { toggleContinueSelect, toggleContinueSelectWithoutDeselect } = this.options;\n        if ((!toggleContinueSelect && !toggleContinueSelectWithoutDeselect) || this.keycon) {\n            return;\n        }\n        this.setKeyController();\n    }\n    // with getter, setter property\n    private setKeyContainer(keyContainer: HTMLElement | Document | Window) {\n        const options = this.options;\n\n        diffValue(options.keyContainer, keyContainer, () => {\n            options.keyContainer = keyContainer;\n\n            this.setKeyController();\n        });\n    }\n    private getContinueSelect() {\n        const {\n            continueSelect,\n            toggleContinueSelect,\n        } = this.options;\n\n        if (!toggleContinueSelect || !this._keydownContinueSelect) {\n            return continueSelect;\n        }\n        return !continueSelect;\n    }\n    private getContinueSelectWithoutDeselect() {\n        const {\n            continueSelectWithoutDeselect,\n            toggleContinueSelectWithoutDeselect,\n        } = this.options;\n\n        if (!toggleContinueSelectWithoutDeselect || !this._keydownContinueSelectWithoutDeselection) {\n            return continueSelectWithoutDeselect;\n        }\n        return !continueSelectWithoutDeselect;\n    }\n    private setToggleContinueSelect(\n        toggleContinueSelect: string[][] | string[] | string\n    ) {\n        const options = this.options;\n\n        diffValue(options.toggleContinueSelect, toggleContinueSelect, () => {\n            options.toggleContinueSelect = toggleContinueSelect;\n\n            this.setKeyEvent();\n        });\n    }\n    private setToggleContinueSelectWithoutDeselect(\n        toggleContinueSelectWithoutDeselect: string[][] | string[] | string\n    ) {\n        const options = this.options;\n\n        diffValue(options.toggleContinueSelectWithoutDeselect, toggleContinueSelectWithoutDeselect, () => {\n            options.toggleContinueSelectWithoutDeselect = toggleContinueSelectWithoutDeselect;\n\n            this.setKeyEvent();\n        });\n    }\n    private setPreventDefault(value: boolean) {\n        this.gesto.options.preventDefault = value;\n    }\n    private setCheckInput(value: boolean) {\n        this.gesto.options.checkInput = value;\n    }\n    private initElement() {\n        this.target = createElement(\n            (<div className={CLASS_NAME}></div>) as any,\n            this.target,\n            this.container\n        );\n\n        const target = this.target;\n\n        const {\n            dragContainer,\n            checkInput,\n            preventDefault,\n            preventClickEventOnDragStart,\n            preventClickEventOnDrag,\n            preventClickEventByCondition,\n            preventRightClick = true,\n        } = this.options;\n        this.dragContainer =\n            typeof dragContainer === \"string\"\n                ? [].slice.call(document.querySelectorAll(dragContainer))\n                : dragContainer || (this.target.parentNode as any);\n        this.gesto = new Gesto(this.dragContainer, {\n            checkWindowBlur: true,\n            container: window,\n            checkInput,\n            preventDefault,\n            preventClickEventOnDragStart,\n            preventClickEventOnDrag,\n            preventClickEventByCondition,\n            preventRightClick,\n        }).on({\n            dragStart: this._onDragStart,\n            drag: this._onDrag,\n            dragEnd: this._onDragEnd,\n        });\n        addEvent(document, \"selectstart\", this._onDocumentSelectStart);\n\n        this.injectResult = injector.inject(target, {\n            nonce: this.options.cspNonce,\n        });\n    }\n    private hitTest(\n        selectRect: Rect,\n        data: any,\n    ) {\n        const { hitRate, selectByClick } = this.options;\n        const { left, top, right, bottom } = selectRect;\n        const innerGroups: Record<string | number, Record<string | number, InnerGroup>> = data.innerGroups;\n        const innerWidth = data.innerWidth;\n        const innerHeight = data.innerHeight;\n        const clientX = data.clientX;\n        const clientY = data.clientY;\n        const ignoreClick = data.ignoreClick;\n        const rectPoints = [\n            [left, top],\n            [right, top],\n            [right, bottom],\n            [left, bottom],\n        ];\n        const hitRateValue = splitUnit(`${hitRate}`);\n\n        const isHit = (points: number[][]) => {\n            const inArea = ignoreClick ? false : isInside([clientX, clientY], points);\n\n            if (selectByClick && inArea) {\n                return true;\n            }\n            const overlapPoints = getOverlapPoints(rectPoints, points);\n\n            if (!overlapPoints.length) {\n                return false;\n            }\n            let overlapSize = getAreaSize(overlapPoints);\n\n            // Line\n            let targetSize = 0;\n\n            if (overlapSize === 0 && getAreaSize(points) === 0) {\n                targetSize = getLineSize(points);\n                overlapSize = getLineSize(overlapPoints);\n            } else {\n                targetSize = getAreaSize(points);\n            }\n\n\n            if (hitRateValue.unit === \"px\") {\n                return overlapSize >= hitRateValue.value;\n            } else {\n                const rate = between(\n                    Math.round((overlapSize / targetSize) * 100),\n                    0,\n                    100\n                );\n\n                return rate >= Math.min(100, hitRateValue.value);\n            }\n        };\n        if (!innerGroups) {\n            const selectableTargets: Array<HTMLElement | SVGElement> = data.selectableTargets;\n            const selectablePoints: number[][][] = data.selectablePoints;\n\n            return selectableTargets.filter((_, i) => {\n                return isHit(selectablePoints[i]);\n            });\n        }\n        let selectedTargets: Array<HTMLElement | SVGElement> = [];\n        const minX = Math.floor(left / innerWidth);\n        const maxX = Math.floor(right / innerWidth);\n        const minY = Math.floor(top / innerHeight);\n        const maxY = Math.floor(bottom / innerHeight);\n\n        for (let x = minX; x <= maxX; ++x) {\n            const yGroups = innerGroups[x];\n\n            if (!yGroups) {\n                continue;\n            }\n            for (let y = minY; y <= maxY; ++y) {\n                const group = yGroups[y];\n\n                if (!group) {\n                    continue;\n                }\n                const { points, targets } = group;\n\n                points.forEach((nextPoints, i) => {\n                    if (isHit(nextPoints)) {\n                        selectedTargets.push(targets[i]);\n                    }\n                });\n            }\n        }\n        return filterDuplicated(selectedTargets);\n    }\n    private initDragScroll() {\n        this.dragScroll\n            .on(\"scroll\", ({ container, direction }) => {\n                this.emit(\"scroll\", {\n                    container,\n                    direction,\n                });\n            })\n            .on(\"move\", ({ offsetX, offsetY, inputEvent }) => {\n                const gesto = this.gesto;\n\n                if (!gesto || !gesto.isFlag()) {\n                    return;\n                }\n\n                const data = this.gesto.getEventData();\n                const boundArea = data.boundArea;\n\n                data.startX -= offsetX;\n                data.startY -= offsetY;\n                data.selectablePoints.forEach((points: number[][]) => {\n                    points.forEach((pos) => {\n                        pos[0] -= offsetX;\n                        pos[1] -= offsetY;\n                    });\n                });\n                this._refreshGroups(data);\n\n                boundArea.left -= offsetX;\n                boundArea.right -= offsetX;\n                boundArea.top -= offsetY;\n                boundArea.bottom -= offsetY;\n\n                this.gesto.scrollBy(\n                    offsetX,\n                    offsetY,\n                    inputEvent.inputEvent,\n                    false\n                );\n                this._checkSelected(this.gesto.getCurrentEvent());\n            });\n    }\n    private _select(\n        selectedTargets: Array<HTMLElement | SVGElement>,\n        rect: Rect,\n        e: OnDragEvent,\n        isStart?: boolean\n    ) {\n        const inputEvent = e.inputEvent;\n        const data = e.data;\n        const result = this.setSelectedTargets(selectedTargets);\n\n        if (isStart) {\n            /**\n             * When the select(drag) starts, the selectStart event is called.\n             * @memberof Selecto\n             * @event selectStart\n             * @param {Selecto.OnSelect} - Parameters for the selectStart event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"selectStart\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * }).on(\"selectEnd\", e => {\n             *   e.afterAdded.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.afterRemoved.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.emit(\"selectStart\", {\n                ...result,\n                rect,\n                inputEvent,\n                data: data.data,\n            });\n        }\n        if (result.added.length || result.removed.length) {\n            /**\n             * When the select in real time, the select event is called.\n             * @memberof Selecto\n             * @event select\n             * @param {Selecto.OnSelect} - Parameters for the select event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"select\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.emit(\"select\", {\n                ...result,\n                rect,\n                inputEvent,\n                data: data.data,\n            });\n        }\n    }\n    private _selectEnd(\n        startSelectedTargets: Array<HTMLElement | SVGElement>,\n        startPassedTargets: Array<HTMLElement | SVGElement>,\n        rect: Rect,\n        e: OnDragEvent,\n    ) {\n        const { inputEvent, isDouble, data } = e;\n        const { added, removed, prevList, list } = diff(\n            startSelectedTargets,\n            this.selectedTargets\n        );\n        const {\n            added: afterAdded,\n            removed: afterRemoved,\n            prevList: afterPrevList,\n            list: afterList,\n        } = diff(startPassedTargets, this.selectedTargets);\n        const type = inputEvent && inputEvent.type;\n        const isDragStart = type === \"mousedown\" || type === \"touchstart\";\n\n        /**\n         * When the select(dragEnd or click) ends, the selectEnd event is called.\n         * @memberof Selecto\n         * @event selectEnd\n         * @param {Selecto.OnSelectEnd} - Parameters for the selectEnd event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"selectStart\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * }).on(\"selectEnd\", e => {\n         *   e.afterAdded.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.afterRemoved.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.emit(\"selectEnd\", {\n            startSelected: startSelectedTargets,\n            beforeSelected: startPassedTargets,\n            selected: this.selectedTargets,\n            added: added.map((index) => list[index]),\n            removed: removed.map((index) => prevList[index]),\n            afterAdded: afterAdded.map((index) => afterList[index]),\n            afterRemoved: afterRemoved.map((index) => afterPrevList[index]),\n            isDragStart,\n            isClick: !!e.isClick,\n            isDouble: !!isDouble,\n            rect,\n            inputEvent,\n            data: data.data,\n        });\n    }\n    private _onDragStart = (e: OnDragStart, clickedTarget?: Element) => {\n        const { data, clientX, clientY, inputEvent } = e;\n        const {\n            selectFromInside,\n            selectByClick,\n            rootContainer,\n            boundContainer,\n            preventDragFromInside = true,\n            clickBySelectEnd,\n            dragCondition,\n        } = this.options;\n\n        if (dragCondition && !dragCondition(e)) {\n            e.stop();\n            return;\n        }\n        data.data = {};\n        data.innerWidth = window.innerWidth;\n        data.innerHeight = window.innerHeight;\n        this.findSelectableTargets(data);\n        data.startSelectedTargets = this.selectedTargets;\n        data.scaleMatrix = createMatrix();\n        data.containerX = 0;\n        data.containerY = 0;\n\n\n        let boundArea = {\n            left: -Infinity,\n            top: -Infinity,\n            right: Infinity,\n            bottom: Infinity,\n        };\n        if (rootContainer) {\n            const containerRect = this.container.getBoundingClientRect();\n\n            data.containerX = containerRect.left;\n            data.containerY = containerRect.top;\n            data.scaleMatrix = getDistElementMatrix(this.container, rootContainer);\n        }\n\n        if (boundContainer) {\n            const boundInfo: Required<BoundContainer> =\n                isObject(boundContainer) && \"element\" in boundContainer\n                    ? {\n                        left: true,\n                        top: true,\n                        bottom: true,\n                        right: true,\n                        ...boundContainer,\n                    }\n                    : {\n                        element: boundContainer,\n                        left: true,\n                        top: true,\n                        bottom: true,\n                        right: true,\n                    };\n            const boundElement = boundInfo.element;\n            let rectElement: HTMLElement;\n\n            if (boundElement) {\n                if (isString(boundElement)) {\n                    rectElement = document.querySelector(boundElement);\n                } else if (boundElement === true) {\n                    rectElement = this.container;\n                } else {\n                    rectElement = boundElement;\n                }\n                const rect = rectElement.getBoundingClientRect();\n\n                if (boundInfo.left) {\n                    boundArea.left = rect.left;\n                }\n                if (boundInfo.top) {\n                    boundArea.top = rect.top;\n                }\n                if (boundInfo.right) {\n                    boundArea.right = rect.right;\n                }\n                if (boundInfo.bottom) {\n                    boundArea.bottom = rect.bottom;\n                }\n            }\n        }\n\n        data.boundArea = boundArea;\n\n        const hitRect = {\n            left: clientX,\n            top: clientY,\n            right: clientX,\n            bottom: clientY,\n            width: 0,\n            height: 0,\n        };\n        let firstPassedTargets: Array<HTMLElement | SVGElement> = [];\n\n        if (!selectFromInside || (selectByClick && !clickBySelectEnd)) {\n            const pointTarget = this._findElement(\n                clickedTarget || elementFromPoint(clientX, clientY),\n                data.selectableTargets,\n            );\n            firstPassedTargets = pointTarget ? [pointTarget] : [];\n        }\n        const hasInsideTargets = firstPassedTargets.length > 0;\n        const isPreventSelect = !selectFromInside && hasInsideTargets;\n\n        // prevent drag from inside when selectByClick is false\n        if (isPreventSelect && !selectByClick) {\n            e.stop();\n            return false;\n        }\n\n        const type = inputEvent.type;\n        const isTrusted = type === \"mousedown\" || type === \"touchstart\";\n        /**\n         * When the drag starts (triggers on mousedown or touchstart), the dragStart event is called.\n         * Call the stop () function if you have a specific element or don't want to raise a select\n         * @memberof Selecto\n         * @event dragStart\n         * @param {OnDragStart} - Parameters for the dragStart event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"dragStart\", e => {\n         *   if (e.inputEvent.target.tagName === \"SPAN\") {\n         *     e.stop();\n         *   }\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        const result =\n            !(e as any).isClick && isTrusted\n                ? this.emit(\"dragStart\", { ...e, data: data.data })\n                : true;\n\n        if (!result) {\n            e.stop();\n            return false;\n        }\n\n        if (this.continueSelect) {\n            firstPassedTargets = passTargets(\n                this.selectedTargets,\n                firstPassedTargets,\n                this.continueSelectWithoutDeselect,\n            );\n            data.startPassedTargets = this.selectedTargets;\n        } else {\n            data.startPassedTargets = [];\n        }\n        this._select(\n            firstPassedTargets,\n            hitRect,\n            e,\n            true\n        );\n        data.startX = clientX;\n        data.startY = clientY;\n        data.selectFlag = false;\n        data.preventDragFromInside = false;\n\n        if (inputEvent.target) {\n            const offsetPos = calculateMatrixDist(data.scaleMatrix, [\n                clientX - data.containerX,\n                clientY - data.containerY,\n            ]);\n            this.target.style.cssText += `position: ${rootContainer ? \"absolute\" : \"fixed\"};`\n                + `left:0px;top:0px;`\n                + `transform: translate(${offsetPos[0]}px, ${offsetPos[1]}px)`;\n        }\n\n        if (isPreventSelect && selectByClick && !clickBySelectEnd) {\n            inputEvent.preventDefault();\n\n            // prevent drag from inside when selectByClick is true and force call `selectEnd`\n            if (preventDragFromInside) {\n                this._selectEnd(\n                    data.startSelectedTargets,\n                    data.startPassedTargets,\n                    hitRect,\n                    e\n                );\n                data.preventDragFromInside = true;\n            }\n        } else {\n            data.selectFlag = true;\n            if (type === \"touchstart\") {\n                inputEvent.preventDefault();\n            }\n            const { scrollOptions } = this.options;\n            if (scrollOptions && scrollOptions.container) {\n                this.dragScroll.dragStart(e, scrollOptions);\n            }\n            if (clickBySelectEnd) {\n                data.selectFlag = false;\n                e.preventDrag();\n            }\n        }\n        return true;\n    };\n    private _checkSelected(e: any, rect = getRect(e, this.options.ratio)) {\n        const { data } = e;\n        const { top, left, width, height } = rect;\n        const selectFlag = data.selectFlag;\n        const {\n            containerX,\n            containerY,\n            scaleMatrix,\n        } = data;\n        const offsetPos = calculateMatrixDist(scaleMatrix, [\n            left - containerX,\n            top - containerY,\n        ]);\n        const offsetSize = calculateMatrixDist(scaleMatrix, [\n            width,\n            height,\n        ]);\n        let selectedTargets: Array<HTMLElement | SVGElement> = [];\n        if (selectFlag) {\n            this.target.style.cssText +=\n                `display: block;` +\n                `left:0px;top:0px;` +\n                `transform: translate(${offsetPos[0]}px, ${offsetPos[1]}px);` +\n                `width:${offsetSize[0]}px;height:${offsetSize[1]}px;`;\n\n            const passedTargets = this.hitTest(\n                rect,\n                data,\n            );\n            selectedTargets = passTargets(\n                data.startPassedTargets,\n                passedTargets,\n                this.continueSelect && this.continueSelectWithoutDeselect,\n            );\n        }\n        /**\n         * When the drag, the drag event is called.\n         * Call the stop () function if you have a specific element or don't want to raise a select\n         * @memberof Selecto\n         * @event drag\n         * @param {OnDrag} - Parameters for the drag event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"drag\", e => {\n         *   e.stop();\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        const result = this.emit(\"drag\", {\n            ...e,\n            data: data.data,\n            isSelect: selectFlag,\n            rect,\n        });\n        if (result === false) {\n            this.target.style.cssText += \"display: none;\";\n            e.stop();\n            return;\n        }\n\n        if (selectFlag) {\n            this._select(selectedTargets, rect, e);\n        }\n    }\n    private _onDrag = (e: OnDrag) => {\n        if (e.data.selectFlag) {\n            const scrollOptions = this.scrollOptions;\n\n            // If it is a scrolling position, pass drag\n            if (scrollOptions?.container && this.dragScroll.drag(e, scrollOptions)) {\n                return;\n            }\n        }\n        this._checkSelected(e);\n    };\n    private _onDragEnd = (e: OnDragEvent) => {\n        const { data, inputEvent } = e;\n        const rect = getRect(e, this.options.ratio);\n        const selectFlag = data.selectFlag;\n\n        /**\n         * When the drag ends (triggers on mouseup or touchend after drag), the dragEnd event is called.\n         * @memberof Selecto\n         * @event dragEnd\n         * @param {OnDragEnd} - Parameters for the dragEnd event\n         */\n        if (inputEvent) {\n            this.emit(\"dragEnd\", {\n                isDouble: !!e.isDouble,\n                isClick: !!e.isClick,\n                isDrag: false,\n                isSelect: selectFlag,\n                ...e,\n                data: data.data,\n                rect,\n            });\n        }\n        this.target.style.cssText += \"display: none;\";\n\n        if (selectFlag) {\n            data.selectFlag = false;\n            this.dragScroll.dragEnd();\n        } else if (this.selectByClick && this.clickBySelectEnd) {\n            // only clickBySelectEnd\n            const pointTarget = this._findElement(\n                elementFromPoint(e.clientX, e.clientY),\n                data.selectableTargets,\n            );\n            this._select(pointTarget ? [pointTarget] : [], rect, e);\n        }\n        if (!data.preventDragFromInside) {\n            this._selectEnd(\n                data.startSelectedTargets,\n                data.startPassedTargets,\n                rect,\n                e\n            );\n        }\n    };\n    private _sameCombiKey(e: any, keys: string | string[] | string[][], isKeyup?: boolean) {\n        if (!keys) {\n            return false;\n        }\n        const combi = getCombi(e.inputEvent, e.key);\n        const nextKeys = [].concat(keys);\n        const toggleKeys = isArray(nextKeys[0]) ? nextKeys : [nextKeys];\n\n        if (isKeyup) {\n            const singleKey = e.key;\n\n            return toggleKeys.some((keys) =>\n                keys.some((key) => key === singleKey)\n            );\n        }\n        return toggleKeys.some((keys) =>\n            keys.every((key) => combi.indexOf(key) > -1)\n        );\n    }\n    private _onKeyDown = (e: any) => {\n        const options = this.options;\n        let isKeyDown = false;\n\n        if (!this._keydownContinueSelect) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelect);\n\n            this._keydownContinueSelect = result;\n            isKeyDown = result;\n        }\n        if (!this._keydownContinueSelectWithoutDeselection) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelectWithoutDeselect);\n\n            this._keydownContinueSelectWithoutDeselection = result;\n            isKeyDown = isKeyDown || result;\n        }\n        if (!isKeyDown) {\n            return;\n        }\n        /**\n         * When you keydown the key you specified in toggleContinueSelect, the keydown event is called.\n         * @memberof Selecto\n         * @event keydown\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.emit(\"keydown\", {\n            keydownContinueSelect: this._keydownContinueSelect,\n            keydownContinueSelectWithoutDeselection: this._keydownContinueSelectWithoutDeselection,\n        });\n    };\n    private _onKeyUp = (e: any) => {\n        const options = this.options;\n        let isKeyUp = false;\n\n        if (this._keydownContinueSelect) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelect, true);\n            this._keydownContinueSelect = !result;\n\n            isKeyUp = result;\n        }\n        if (this._keydownContinueSelectWithoutDeselection) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelectWithoutDeselect, true);\n            this._keydownContinueSelectWithoutDeselection = !result;\n\n            isKeyUp = isKeyUp || result;\n        }\n        if (!isKeyUp) {\n            return;\n        }\n\n        /**\n         * When you keyup the key you specified in toggleContinueSelect, the keyup event is called.\n         * @memberof Selecto\n         * @event keyup\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.emit(\"keyup\", {\n            keydownContinueSelect: this._keydownContinueSelect,\n            keydownContinueSelectWithoutDeselection: this._keydownContinueSelectWithoutDeselection,\n        });\n    };\n    private _onBlur = () => {\n        if (this._keydownContinueSelect || this._keydownContinueSelectWithoutDeselection) {\n            this._keydownContinueSelect = false;\n            this._keydownContinueSelectWithoutDeselection = false;\n            this.emit(\"keyup\", {\n                keydownContinueSelect: this._keydownContinueSelect,\n                keydownContinueSelectWithoutDeselection: this._keydownContinueSelectWithoutDeselection,\n            });\n        }\n    };\n    private _onDocumentSelectStart = (e: any) => {\n        if (!this.gesto.isFlag()) {\n            return;\n        }\n        let dragContainer = this.dragContainer;\n\n        if (dragContainer === window) {\n            dragContainer = document.documentElement;\n        }\n        const containers =\n            dragContainer instanceof Element\n                ? [dragContainer]\n                : ([].slice.call(dragContainer) as Element[]);\n        const target = e.target;\n\n        containers.some((container) => {\n            if (container === target || container.contains(target)) {\n                e.preventDefault();\n                return true;\n            }\n        });\n    };\n    private _findElement(clickedTarget: Element | null, selectableTargets: Array<Element>): HTMLElement | SVGElement {\n        let pointTarget = clickedTarget;\n\n        while (pointTarget) {\n            if (selectableTargets.indexOf(pointTarget) > -1) {\n                break;\n            }\n            pointTarget = pointTarget.parentElement;\n        }\n        return pointTarget as any;\n    }\n    private _refreshGroups(data: any) {\n        const innerWidth = data.innerWidth;\n        const innerHeight = data.innerHeight;\n\n        if (!innerWidth || !innerHeight) {\n            data.innerGroups = null;\n        } else {\n            const selectableTargets: Array<HTMLElement | SVGElement> = data.selectableTargets;\n            const selectablePoints: number[][][] = data.selectablePoints;\n            const groups: Record<string | number, Record<string | number, InnerGroup>> = {};\n\n            selectablePoints.forEach((points, i) => {\n                let minX = Infinity;\n                let maxX = -Infinity;\n                let minY = Infinity;\n                let maxY = -Infinity;\n\n                points.forEach(pos => {\n                    const x = Math.floor(pos[0] / innerWidth);\n                    const y = Math.floor(pos[1] / innerHeight);\n\n                    minX = Math.min(x, minX);\n                    maxX = Math.max(x, maxX);\n                    minY = Math.min(y, minY);\n                    maxY = Math.max(y, maxY);\n                });\n\n                for (let x = minX; x <= maxX; ++x) {\n                    for (let y = minY; y <= maxY; ++y) {\n                        groups[x] = groups[x] || {};\n                        groups[x][y] = groups[x][y] || {\n                            points: [],\n                            targets: [],\n                        };\n\n                        const { targets, points: groupPoints } = groups[x][y];\n\n                        targets.push(selectableTargets[i]);\n                        groupPoints.push(points);\n                    }\n                }\n            });\n\n            data.innerGroups = groups;\n        }\n    }\n}\n\ninterface Selecto extends SelectoProperties { }\n\nexport default Selecto;\n","import SelectoManager from \"./SelectoManager\";\n\nclass Selecto extends SelectoManager {\n\n}\nexport default Selecto;\n","import Selecto, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (Selecto as any)[name] = (modules as any)[name];\n}\n\nexport default Selecto;\n"],"names":["getClient","e","touch","touches","changedTouches","clientX","clientY","filterDuplicated","arr","Map","filter","value","index","indexOf","map","has","set","elementFromPoint","document","createElement","jsx","prevTarget","container","tag","children","attributes","className","style","el","name","setAttribute","elChildren","forEach","child","i","split","hasClass","addClass","elStyle","appendChild","h","attrs","_i","_a","_b","_c","diffValue","prev","cur","func","getRect","ratio","boundArea","data","distX","distY","_d","startX","startY","nextHeight","Math","sqrt","nextWidth","width","abs","height","maxWidth","left","right","maxHeight","top","bottom","calculateBoundSize","tx","min","ty","getDefaultElementRect","rect","getBoundingClientRect","pos1","pos2","pos3","pos4","passTargets","beforeTargets","afterTargets","continueSelectWithoutDeselect","diff","list","prevList","added","removed","maintained","nextIndex","getLineSize","points","size","length","max","getDist","injector","styled","CLASS_NAME","PROPERTIES","OPTIONS","__spreadArray","OPTION_TYPES","boundContainer","portalContainer","dragContainer","selectableTargets","Array","selectByClick","Boolean","selectFromInside","continueSelect","toggleContinueSelect","toggleContinueSelectWithoutDeselect","keyContainer","hitRate","Number","scrollOptions","Object","checkInput","preventDefault","cspNonce","String","getElementRect","Function","preventDragFromInside","rootContainer","dragCondition","clickBySelectEnd","preventClickEventOnDragStart","preventClickEventOnDrag","EVENTS","METHODS","__extends","options","_super","_this","DragScroll","clickedTarget","inputEvent","stop","innerWidth","window","innerHeight","findSelectableTargets","startSelectedTargets","selectedTargets","scaleMatrix","createMatrix","containerX","containerY","Infinity","containerRect","getDistElementMatrix","boundInfo","isObject","element","boundElement","rectElement","isString","querySelector","hitRect","firstPassedTargets","pointTarget","_findElement","hasInsideTargets","isPreventSelect","type","isTrusted","result","isClick","emit","startPassedTargets","_select","selectFlag","target","offsetPos","calculateMatrixDist","cssText","_selectEnd","dragScroll","dragStart","preventDrag","drag","_checkSelected","isDouble","isDrag","isSelect","dragEnd","isKeyDown","_keydownContinueSelect","_sameCombiKey","_keydownContinueSelectWithoutDeselection","keydownContinueSelect","keydownContinueSelectWithoutDeselection","isKeyUp","gesto","isFlag","documentElement","containers","Element","slice","call","some","contains","undefined","parentElement","body","initElement","initDragScroll","setKeyController","beforeSelected","selected","point1","point2","ignoreClick","selectedElements","hitTest","setSelectedTargets","startPoint","endPoint","mousedown","MouseEvent","cancelable","bubbles","mousemove","mouseup","onDragStart","onDrag","onDragEnd","triggerDragStart","off","keycon","destroy","unset","injectResult","removeEvent","_onDocumentSelectStart","info","fitPoints","selectableElements","push","elements","querySelectorAll","checkScroll","getCurrentEvent","getEventData","getSelectableElements","selectablePoints","getElementPoints","_refreshGroups","dragEvent","_onDragStart","_onDragEnd","KeyController","keydown","_onKeyDown","keyup","_onKeyUp","on","_onBlur","setKeyEvent","preventClickEventByCondition","preventRightClick","parentNode","Gesto","checkWindowBlur","_onDrag","addEvent","inject","nonce","selectRect","innerGroups","rectPoints","hitRateValue","splitUnit","isHit","inArea","isInside","overlapPoints","getOverlapPoints","overlapSize","getAreaSize","targetSize","unit","rate","between","round","selectablePoints_1","_","minX","floor","maxX","minY","maxY","x","yGroups","y","group","targets","nextPoints","direction","offsetX","offsetY","pos","scrollBy","isStart","afterAdded","afterRemoved","afterPrevList","afterList","isDragStart","startSelected","offsetSize","passedTargets","keys","isKeyup","combi","getCombi","key","nextKeys","concat","toggleKeys","isArray","singleKey_1","every","selectableTargets_1","groups_1","groupPoints","Selecto","Properties","prototype","property","enumerable","configurable","get","getter","camelize","setter","defineProperty","EventEmitter","SelectoManager","modules"],"mappingsaAKgBA,YAAUC;MACtB,IAAI,aAAaA,CAAjB,EAAoB;QAChB,IAAMC,KAAK,GAAGD,CAAC,CAACE,OAAF,CAAU,CAAV,KAAgBF,CAAC,CAACG,cAAF,CAAiB,CAAjB,CAA9B;QAEA,OAAO;UACHC,OAAO,EAAEH,KAAK,CAACG,OADZ;UAEHC,OAAO,EAAEJ,KAAK,CAACI;SAFnB;OAHJ,MAOO;QACH,OAAO;UACHD,OAAO,EAAEJ,CAAC,CAACI,OADR;UAEHC,OAAO,EAAEL,CAAC,CAACK;SAFf;;IAKP;AACD,aAAgBC,iBAAoBC;MAChC,IAAI,OAAOC,GAAP,KAAe,WAAnB,EAAgC;QAC5B,OAAOD,GAAG,CAACE,MAAJ,CAAW,UAACC,KAAD,EAAQC,KAAR;UACd,OAAOJ,GAAG,CAACK,OAAJ,CAAYF,KAAZ,MAAuBC,KAA9B;SADG,CAAP;;;MAIJ,IAAME,GAAG,GAAG,IAAIL,GAAJ,EAAZ;MACA,OAAOD,GAAG,CAACE,MAAJ,CAAW,UAAAC,KAAA;QACd,IAAIG,GAAG,CAACC,GAAJ,CAAQJ,KAAR,CAAJ,EAAoB;UAChB,OAAO,KAAP;;;QAEJG,GAAG,CAACE,GAAJ,CAAQL,KAAR,EAAe,IAAf;QACA,OAAO,IAAP;OALG,CAAP;IAOH;AACD,aAAgBM,iBAAiBZ,SAAiBC;MAC9C,OAAQY,QAAQ,CAACD,gBAAT,IAA6BC,QAAQ,CAACD,gBAAT,CAA0BZ,OAA1B,EAAmCC,OAAnC,CAA9B,IAAqF,IAA5F;IACH;AACD,aAAgBa,cACZC,KACAC,YACAC;MAEQ,IAAAC,GAAG,GAA6CH,GAAG,IAAnD;UAAKI,QAAQ,GAAmCJ,GAAG,SAAnD;UAAeK,UAAU,GAAuBL,GAAG,WAAnD;UAA2BM,SAAS,GAAYN,GAAG,UAAnD;UAAsCO,KAAK,GAAKP,GAAG,MAAnD;MACR,IAAMQ,EAAE,GAAGP,UAAU,IAAIH,QAAQ,CAACC,aAAT,CAAuBI,GAAvB,CAAzB;;MAEA,KAAK,IAAMM,IAAX,IAAmBJ,UAAnB,EAA+B;QAC3BG,EAAE,CAACE,YAAH,CAAgBD,IAAhB,EAAsBJ,UAAU,CAACI,IAAD,CAAhC;;;MAEJ,IAAME,UAAU,GAAGH,EAAE,CAACJ,QAAtB;MACAA,QAAQ,CAACQ,OAAT,CAAiB,UAACC,KAAD,EAAQC,CAAR;QACbf,aAAa,CAACc,KAAD,EAAQF,UAAU,CAACG,CAAD,CAAlB,EAAmDN,EAAnD,CAAb;OADJ;;MAGA,IAAIF,SAAJ,EAAe;QACXA,SAAS,CAACS,KAAV,CAAgB,GAAhB,EAAqBH,OAArB,CAA6B,UAAAH,IAAA;UACzB,IAAI,CAACO,QAAQ,CAACR,EAAD,EAAKC,IAAL,CAAb,EAAyB;YACrBQ,QAAQ,CAACT,EAAD,EAAKC,IAAL,CAAR;;SAFR;;;MAMJ,IAAIF,KAAJ,EAAW;QACP,IAAMW,OAAO,GAAGV,EAAE,CAACD,KAAnB;;QACA,KAAK,IAAME,IAAX,IAAmBF,KAAnB,EAA0B;UACtBW,OAAO,CAACT,IAAD,CAAP,GAAgBF,KAAK,CAACE,IAAD,CAArB;;;;MAGR,IAAI,CAACR,UAAD,IAAeC,SAAnB,EAA8B;QAC1BA,SAAS,CAACiB,WAAV,CAAsBX,EAAtB;;;MAEJ,OAAOA,EAAP;IACH;AACD,aAAgBY,EACZjB,KACAkB;MACA,iBAAA;;WAAA,YAAAC,uBAAAA;QAAAlB,gBAAA,gBAAA;;;MAEA,IAAMmB,KAIFF,KAAK,IAAI,EAJb;UACIG,iBADJ;UACIlB,SAAS,mBAAG,OADhB;UAEImB,aAFJ;UAEIlB,KAAK,mBAAG,OAFZ;UAGOF,UAAU,cAHX,YAAA,SAAA,EAAN;;MAKA,OAAO;QACHF,GAAG,KADA;QAEHG,SAAS,WAFN;QAGHC,KAAK,OAHF;QAIHF,UAAU,YAJP;QAKHD,QAAQ;OALZ;IAOH;AAED,aAAgBsB,UAAaC,MAASC,KAAQC;MAC1C,IAAIF,IAAI,KAAKC,GAAb,EAAkB;QACdC,IAAI,CAACF,IAAD,EAAOC,GAAP,CAAJ;;IAEP;AACD,aAiCgBE,QACZjD,GAAQkD,OACRC;;;MAAA,wBAAA,EAAA;QAAAA,YAAYnD,CAAC,CAACoD,IAAF,CAAOD,SAAnB;;;MAGI,IAAAR,KAEA3C,CAAC,MAFD;UAAAqD,KAAK,mBAAG,MAAR;UACAT,KACA5C,CAAC,MAFD;UACAsD,KAAK,mBAAG,MADR;MAGE,IAAAC,KAAqBvD,CAAC,CAACoD,IAAvB;UAAEI,MAAM,YAAR;UAAUC,MAAM,YAAhB;;MAEN,IAAIP,KAAK,GAAG,CAAZ,EAAe;QACX,IAAMQ,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAU,CAACP,KAAK,GAAGA,KAAR,GAAgBC,KAAK,GAAGA,KAAzB,KAAmC,IAAIJ,KAAK,GAAGA,KAA/C,CAAV,CAAnB;QACA,IAAMW,SAAS,GAAGX,KAAK,GAAGQ,UAA1B;QAEAL,KAAK,GAAG,CAACA,KAAK,IAAI,CAAT,GAAa,CAAb,GAAiB,CAAC,CAAnB,IAAwBQ,SAAhC;QACAP,KAAK,GAAG,CAACA,KAAK,IAAI,CAAT,GAAa,CAAb,GAAiB,CAAC,CAAnB,IAAwBI,UAAhC;;;MAEJ,IAAII,KAAK,GAAGH,IAAI,CAACI,GAAL,CAASV,KAAT,CAAZ;MACA,IAAIW,MAAM,GAAGL,IAAI,CAACI,GAAL,CAAST,KAAT,CAAb;MAEA,IAAMW,QAAQ,GAAGZ,KAAK,GAAG,CAAR,GAAYG,MAAM,GAAGL,SAAS,CAACe,IAA/B,GAAsCf,SAAS,CAACgB,KAAV,GAAkBX,MAAzE;MACA,IAAMY,SAAS,GAAGd,KAAK,GAAG,CAAR,GAAYG,MAAM,GAAGN,SAAS,CAACkB,GAA/B,GAAqClB,SAAS,CAACmB,MAAV,GAAmBb,MAA1E;MAEAf,KAAkB6B,kBAAkB,CAAC,CAACT,KAAD,EAAQE,MAAR,CAAD,EAAkB,CAAC,CAAD,EAAI,CAAJ,CAAlB,EAA0B,CAACC,QAAD,EAAWG,SAAX,CAA1B,EAAiD,CAAC,CAAClB,KAAnD,CAApC,EAACY,KAAK,QAAN,EAAQE,MAAM,QAAd;MACAX,KAAK,GAAG,CAACA,KAAK,IAAI,CAAT,GAAa,CAAb,GAAiB,CAAC,CAAnB,IAAwBS,KAAhC;MACAR,KAAK,GAAG,CAACA,KAAK,IAAI,CAAT,GAAa,CAAb,GAAiB,CAAC,CAAnB,IAAwBU,MAAhC;MAEA,IAAMQ,EAAE,GAAGb,IAAI,CAACc,GAAL,CAAS,CAAT,EAAYpB,KAAZ,CAAX;MACA,IAAMqB,EAAE,GAAGf,IAAI,CAACc,GAAL,CAAS,CAAT,EAAYnB,KAAZ,CAAX;MACA,IAAMY,IAAI,GAAGV,MAAM,GAAGgB,EAAtB;MACA,IAAMH,GAAG,GAAGZ,MAAM,GAAGiB,EAArB;MAEA,OAAO;QACHR,IAAI,MADD;QAEHG,GAAG,KAFA;QAGHF,KAAK,EAAED,IAAI,GAAGJ,KAHX;QAIHQ,MAAM,EAAED,GAAG,GAAGL,MAJX;QAKHF,KAAK,OALF;QAMHE,MAAM;OANV;IAQH;AAED,aAAgBW,sBAAsBhD;MAClC,IAAMiD,IAAI,GAAGjD,EAAE,CAACkD,qBAAH,EAAb;MACQ,IAAAX,IAAI,GAAyBU,IAAI,KAAjC;UAAMP,GAAG,GAAoBO,IAAI,IAAjC;UAAWd,KAAK,GAAac,IAAI,MAAjC;UAAkBZ,MAAM,GAAKY,IAAI,OAAjC;MAER,OAAO;QACHE,IAAI,EAAE,CAACZ,IAAD,EAAOG,GAAP,CADH;QAEHU,IAAI,EAAE,CAACb,IAAI,GAAGJ,KAAR,EAAeO,GAAf,CAFH;QAGHW,IAAI,EAAE,CAACd,IAAD,EAAOG,GAAG,GAAGL,MAAb,CAHH;QAIHiB,IAAI,EAAE,CAACf,IAAI,GAAGJ,KAAR,EAAeO,GAAG,GAAGL,MAArB;OAJV;IAMH;AAED,aAAgBkB,YACZC,eACAC,cACAC;MAEM,IAAA3C,KAMF4C,MAAI,CAACH,aAAD,EAAgBC,YAAhB,CANF;UACFG,IAAI,UADF;UAEFC,QAAQ,cAFN;UAGFC,KAAK,WAHH;UAIFC,OAAO,aAJL;UAKFC,UAAU,gBALR;;MAQN,qDACOF,KAAK,CAAC5E,GAAN,CAAU,UAAAF,KAAA;QAAS,OAAA4E,IAAI,CAAC5E,KAAD,CAAJ;OAAnB,UACA+E,OAAO,CAAC7E,GAAR,CAAY,UAAAF,KAAA;QAAS,OAAA6E,QAAQ,CAAC7E,KAAD,CAAR;OAArB,UACA0E,6BAA6B,GAAGM,UAAU,CAAC9E,GAAX,CAAe,UAAC6B,EAAD;YAAIkD,SAAS;QAAM,OAAAL,IAAI,CAACK,SAAD,CAAJ;OAAlC,CAAH,GAAwD,SAH5F;IAKH;AAED,aAAgBC,YAAYC;MACxB,IAAIC,IAAI,GAAG,CAAX;MACA,IAAMC,MAAM,GAAGF,MAAM,CAACE,MAAtB;;MAEA,KAAK,IAAI/D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+D,MAApB,EAA4B,EAAE/D,CAA9B,EAAiC;QAC7B8D,IAAI,GAAGpC,IAAI,CAACsC,GAAL,CAASC,OAAO,CAACJ,MAAM,CAAC7D,CAAD,CAAP,EAAY6D,MAAM,CAAC7D,CAAC,GAAG,CAAL,CAAlB,CAAhB,EAA4C8D,IAA5C,CAAP;;;MAGJ,OAAOA,IAAP;IACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IChNM,IAAMI,QAAQ,GAAGC,MAAM,CAAC,4MAAD,CAAvB;IAYP;;;;AAGA,IAAO,IAAMC,UAAU,GAAG,2BAAA,CAAqBF,QAAQ,CAAC1E,SAA9B,CAAnB;AAEP,IAAO,IAAM6E,UAAU,GAAG,CACtB,gBADsB,EAEtB,mBAFsB,EAGtB,eAHsB,EAItB,kBAJsB,EAKtB,gBALsB,EAMtB,+BANsB,EAOtB,sBAPsB,EAQtB,qCARsB,EAStB,cATsB,EAUtB,SAVsB,EAWtB,eAXsB,EAYtB,YAZsB,EAatB,gBAbsB,EActB,OAdsB,EAetB,gBAfsB,EAgBtB,uBAhBsB,EAiBtB,eAjBsB,EAkBtB,eAlBsB,EAmBtB,kBAnBsB,CAAnB;IAqBP;;;;AAGA,IAAO,IAAMC,OAAO,GAAGC;IAEnB,iBACA,YACA,2BACA,gCACA,sBACGF,iBAPA;AAUP,IAAO,IAAMG,YAAY,GAA2C;MAChEC,cAAc,EAAE,IADgD;MAEhEC,eAAe,EAAE,IAF+C;MAGhEtF,SAAS,EAAE,IAHqD;MAIhEuF,aAAa,EAAE,IAJiD;MAKhEC,iBAAiB,EAAEC,KAL6C;MAMhEC,aAAa,EAAEC,OANiD;MAOhEC,gBAAgB,EAAED,OAP8C;MAQhEE,cAAc,EAAEF,OARgD;MAShEG,oBAAoB,EAAEL,KAT0C;MAUhEM,mCAAmC,EAAEN,KAV2B;MAWhEO,YAAY,EAAE,IAXkD;MAYhEC,OAAO,EAAEC,MAZuD;MAahEC,aAAa,EAAEC,MAbiD;MAchEC,UAAU,EAAEV,OAdoD;MAehEW,cAAc,EAAEX,OAfgD;MAgBhEY,QAAQ,EAAEC,MAhBsD;MAiBhE3E,KAAK,EAAEqE,MAjByD;MAkBhEO,cAAc,EAAEC,QAlBgD;MAmBhEC,qBAAqB,EAAEhB,OAnByC;MAoBhEiB,aAAa,EAAER,MApBiD;MAqBhES,aAAa,EAAEH,QArBiD;MAsBhEI,gBAAgB,EAAEnB,OAtB8C;MAuBhE3B,6BAA6B,EAAE2B,OAvBiC;MAwBhEoB,4BAA4B,EAAEpB,OAxBkC;MAyBhEqB,uBAAuB,EAAErB;IAzBuC,CAA7D;IA4BP;;;;AAGA,IAAO,IAAMsB,MAAM,GAAG,CAClB,WADkB,EAElB,MAFkB,EAGlB,SAHkB,EAIlB,aAJkB,EAKlB,QALkB,EAMlB,WANkB,EAOlB,SAPkB,EAQlB,OARkB,EASlB,QATkB,CAAf;IAYP;;;;AAGA,IAAO,IAAMC,OAAO,GAAG,CACnB,aADmB,EAEnB,uBAFmB,EAGnB,oBAHmB,EAInB,kBAJmB,EAKnB,oBALmB,EAMnB,uBANmB,EAOnB,kBAPmB,EAQnB,aARmB,EASnB,uBATmB,EAUnB,4BAVmB,CAAhB;;IClDP;;;;;;IAmCA;;;MAAsBC,0BAAA;;;;;;MAelB,gBAAA,CAAYC,OAAZ;QAAY,sBAAA,EAAA;UAAAA,YAAA;;;QAAZ,YACIC,WAAA,KAAA,SADJ;;QARQC,qBAAA,GAAmD,EAAnD;QACAA,gBAAA,GAAyB,IAAIC,UAAJ,EAAzB;;QAypBAD,kBAAA,GAAe,UAAC3I,CAAD,EAAiB6I,aAAjB;UACX,IAAAzF,IAAI,GAAmCpD,CAAC,KAAxC;cAAMI,OAAO,GAA0BJ,CAAC,QAAxC;cAAeK,OAAO,GAAiBL,CAAC,QAAxC;cAAwB8I,UAAU,GAAK9I,CAAC,WAAxC;UACF,IAAA0C,KAQFiG,KAAI,CAACF,OARH;cACFxB,gBAAgB,sBADd;cAEFF,aAAa,mBAFX;cAGFkB,aAAa,mBAHX;cAIFvB,cAAc,oBAJZ;cAKF/D,6BALE;cAKFqF,qBAAqB,mBAAG,SALtB;cAMFG,gBAAgB,sBANd;cAOFD,aAAa,mBAPX;;UAUN,IAAIA,aAAa,IAAI,CAACA,aAAa,CAAClI,CAAD,CAAnC,EAAwC;YACpCA,CAAC,CAAC+I,IAAF;YACA;;;UAEJ3F,IAAI,CAACA,IAAL,GAAY,EAAZ;UACAA,IAAI,CAAC4F,UAAL,GAAkBC,MAAM,CAACD,UAAzB;UACA5F,IAAI,CAAC8F,WAAL,GAAmBD,MAAM,CAACC,WAA1B;;UACAP,KAAI,CAACQ,qBAAL,CAA2B/F,IAA3B;;UACAA,IAAI,CAACgG,oBAAL,GAA4BT,KAAI,CAACU,eAAjC;UACAjG,IAAI,CAACkG,WAAL,GAAmBC,YAAY,EAA/B;UACAnG,IAAI,CAACoG,UAAL,GAAkB,CAAlB;UACApG,IAAI,CAACqG,UAAL,GAAkB,CAAlB;UAGA,IAAItG,SAAS,GAAG;YACZe,IAAI,EAAE,CAACwF,QADK;YAEZrF,GAAG,EAAE,CAACqF,QAFM;YAGZvF,KAAK,EAAEuF,QAHK;YAIZpF,MAAM,EAAEoF;WAJZ;;UAMA,IAAIzB,aAAJ,EAAmB;YACf,IAAM0B,aAAa,GAAGhB,KAAI,CAACtH,SAAL,CAAewD,qBAAf,EAAtB;;YAEAzB,IAAI,CAACoG,UAAL,GAAkBG,aAAa,CAACzF,IAAhC;YACAd,IAAI,CAACqG,UAAL,GAAkBE,aAAa,CAACtF,GAAhC;YACAjB,IAAI,CAACkG,WAAL,GAAmBM,oBAAoB,CAACjB,KAAI,CAACtH,SAAN,EAAiB4G,aAAjB,CAAvC;;;UAGJ,IAAIvB,cAAJ,EAAoB;YAChB,IAAMmD,SAAS,GACXC,QAAQ,CAACpD,cAAD,CAAR,IAA4B,aAAaA,cAAzC;cAEQxC,IAAI,EAAE;cACNG,GAAG,EAAE;cACLC,MAAM,EAAE;cACRH,KAAK,EAAE;eACJuC,eANX,GAQM;cACEqD,OAAO,EAAErD,cADX;cAEExC,IAAI,EAAE,IAFR;cAGEG,GAAG,EAAE,IAHP;cAIEC,MAAM,EAAE,IAJV;cAKEH,KAAK,EAAE;aAdnB;YAgBA,IAAM6F,YAAY,GAAGH,SAAS,CAACE,OAA/B;YACA,IAAIE,WAAW,SAAf;;YAEA,IAAID,YAAJ,EAAkB;cACd,IAAIE,QAAQ,CAACF,YAAD,CAAZ,EAA4B;gBACxBC,WAAW,GAAGhJ,QAAQ,CAACkJ,aAAT,CAAuBH,YAAvB,CAAd;eADJ,MAEO,IAAIA,YAAY,KAAK,IAArB,EAA2B;gBAC9BC,WAAW,GAAGtB,KAAI,CAACtH,SAAnB;eADG,MAEA;gBACH4I,WAAW,GAAGD,YAAd;;;cAEJ,IAAMpF,IAAI,GAAGqF,WAAW,CAACpF,qBAAZ,EAAb;;cAEA,IAAIgF,SAAS,CAAC3F,IAAd,EAAoB;gBAChBf,SAAS,CAACe,IAAV,GAAiBU,IAAI,CAACV,IAAtB;;;cAEJ,IAAI2F,SAAS,CAACxF,GAAd,EAAmB;gBACflB,SAAS,CAACkB,GAAV,GAAgBO,IAAI,CAACP,GAArB;;;cAEJ,IAAIwF,SAAS,CAAC1F,KAAd,EAAqB;gBACjBhB,SAAS,CAACgB,KAAV,GAAkBS,IAAI,CAACT,KAAvB;;;cAEJ,IAAI0F,SAAS,CAACvF,MAAd,EAAsB;gBAClBnB,SAAS,CAACmB,MAAV,GAAmBM,IAAI,CAACN,MAAxB;;;;;UAKZlB,IAAI,CAACD,SAAL,GAAiBA,SAAjB;UAEA,IAAMiH,OAAO,GAAG;YACZlG,IAAI,EAAE9D,OADM;YAEZiE,GAAG,EAAEhE,OAFO;YAGZ8D,KAAK,EAAE/D,OAHK;YAIZkE,MAAM,EAAEjE,OAJI;YAKZyD,KAAK,EAAE,CALK;YAMZE,MAAM,EAAE;WANZ;UAQA,IAAIqG,kBAAkB,GAAoC,EAA1D;;UAEA,IAAI,CAACpD,gBAAD,IAAsBF,aAAa,IAAI,CAACoB,gBAA5C,EAA+D;YAC3D,IAAMmC,WAAW,GAAG3B,KAAI,CAAC4B,YAAL,CAChB1B,aAAa,IAAI7H,gBAAgB,CAACZ,OAAD,EAAUC,OAAV,CADjB,EAEhB+C,IAAI,CAACyD,iBAFW,CAApB;;YAIAwD,kBAAkB,GAAGC,WAAW,GAAG,CAACA,WAAD,CAAH,GAAmB,EAAnD;;;UAEJ,IAAME,gBAAgB,GAAGH,kBAAkB,CAACrE,MAAnB,GAA4B,CAArD;UACA,IAAMyE,eAAe,GAAG,CAACxD,gBAAD,IAAqBuD,gBAA7C;;UAGA,IAAIC,eAAe,IAAI,CAAC1D,aAAxB,EAAuC;YACnC/G,CAAC,CAAC+I,IAAF;YACA,OAAO,KAAP;;;UAGJ,IAAM2B,IAAI,GAAG5B,UAAU,CAAC4B,IAAxB;UACA,IAAMC,SAAS,GAAGD,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK,YAAnD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA6BA,IAAME,MAAM,GACR,CAAE5K,CAAS,CAAC6K,OAAZ,IAAuBF,SAAvB,GACMhC,KAAI,CAACmC,IAAL,CAAU,WAAV,wBAA4B9K;YAAGoD,IAAI,EAAEA,IAAI,CAACA;YAA1C,CADN,GAEM,IAHV;;UAKA,IAAI,CAACwH,MAAL,EAAa;YACT5K,CAAC,CAAC+I,IAAF;YACA,OAAO,KAAP;;;UAGJ,IAAIJ,KAAI,CAACzB,cAAT,EAAyB;YACrBmD,kBAAkB,GAAGnF,WAAW,CAC5ByD,KAAI,CAACU,eADuB,EAE5BgB,kBAF4B,EAG5B1B,KAAI,CAACtD,6BAHuB,CAAhC;YAKAjC,IAAI,CAAC2H,kBAAL,GAA0BpC,KAAI,CAACU,eAA/B;WANJ,MAOO;YACHjG,IAAI,CAAC2H,kBAAL,GAA0B,EAA1B;;;UAEJpC,KAAI,CAACqC,OAAL,CACIX,kBADJ,EAEID,OAFJ,EAGIpK,CAHJ,EAII,IAJJ;;UAMAoD,IAAI,CAACI,MAAL,GAAcpD,OAAd;UACAgD,IAAI,CAACK,MAAL,GAAcpD,OAAd;UACA+C,IAAI,CAAC6H,UAAL,GAAkB,KAAlB;UACA7H,IAAI,CAAC4E,qBAAL,GAA6B,KAA7B;;UAEA,IAAIc,UAAU,CAACoC,MAAf,EAAuB;YACnB,IAAMC,SAAS,GAAGC,mBAAmB,CAAChI,IAAI,CAACkG,WAAN,EAAmB,CACpDlJ,OAAO,GAAGgD,IAAI,CAACoG,UADqC,EAEpDnJ,OAAO,GAAG+C,IAAI,CAACqG,UAFqC,CAAnB,CAArC;YAIAd,KAAI,CAACuC,MAAL,CAAYxJ,KAAZ,CAAkB2J,OAAlB,IAA6B,mBAAA,CAAapD,aAAa,GAAG,UAAH,GAAgB,OAA1C,KAAA,IACvB,mBADuB,GAEvB,8BAAA,CAAwBkD,SAAS,CAAC,CAAD,CAAjC,QAAA,QAAA,CAA2CA,SAAS,CAAC,CAAD,CAApD,OAAA,CAFN;;;UAKJ,IAAIV,eAAe,IAAI1D,aAAnB,IAAoC,CAACoB,gBAAzC,EAA2D;YACvDW,UAAU,CAACnB,cAAX,GADuD;;YAIvD,IAAIK,qBAAJ,EAA2B;cACvBW,KAAI,CAAC2C,UAAL,CACIlI,IAAI,CAACgG,oBADT,EAEIhG,IAAI,CAAC2H,kBAFT,EAGIX,OAHJ,EAIIpK,CAJJ;;cAMAoD,IAAI,CAAC4E,qBAAL,GAA6B,IAA7B;;WAXR,MAaO;YACH5E,IAAI,CAAC6H,UAAL,GAAkB,IAAlB;;YACA,IAAIP,IAAI,KAAK,YAAb,EAA2B;cACvB5B,UAAU,CAACnB,cAAX;;;YAEI,IAAAH,aAAa,GAAKmB,KAAI,CAACF,OAAL,cAAlB;;YACR,IAAIjB,aAAa,IAAIA,aAAa,CAACnG,SAAnC,EAA8C;cAC1CsH,KAAI,CAAC4C,UAAL,CAAgBC,SAAhB,CAA0BxL,CAA1B,EAA6BwH,aAA7B;;;YAEJ,IAAIW,gBAAJ,EAAsB;cAClB/E,IAAI,CAAC6H,UAAL,GAAkB,KAAlB;cACAjL,CAAC,CAACyL,WAAF;;;;UAGR,OAAO,IAAP;SAnNI;;QAkSA9C,aAAA,GAAU,UAAC3I,CAAD;UACd,IAAIA,CAAC,CAACoD,IAAF,CAAO6H,UAAX,EAAuB;YACnB,IAAMzD,aAAa,GAAGmB,KAAI,CAACnB,aAA3B,CADmB;;YAInB,IAAI,CAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,SAAA,GAAAA,aAAa,CAAEnG,SAAf,KAA4BsH,KAAI,CAAC4C,UAAL,CAAgBG,IAAhB,CAAqB1L,CAArB,EAAwBwH,aAAxB,CAAhC,EAAwE;cACpE;;;;UAGRmB,KAAI,CAACgD,cAAL,CAAoB3L,CAApB;SATI;;QAWA2I,gBAAA,GAAa,UAAC3I,CAAD;UACT,IAAAoD,IAAI,GAAiBpD,CAAC,KAAtB;cAAM8I,UAAU,GAAK9I,CAAC,WAAtB;UACR,IAAM4E,IAAI,GAAG3B,OAAO,CAACjD,CAAD,EAAI2I,KAAI,CAACF,OAAL,CAAavF,KAAjB,CAApB;UACA,IAAM+H,UAAU,GAAG7H,IAAI,CAAC6H,UAAxB;;;;;;;;UAQA,IAAInC,UAAJ,EAAgB;YACZH,KAAI,CAACmC,IAAL,CAAU,SAAV;cACIc,QAAQ,EAAE,CAAC,CAAC5L,CAAC,CAAC4L;cACdf,OAAO,EAAE,CAAC,CAAC7K,CAAC,CAAC6K;cACbgB,MAAM,EAAE;cACRC,QAAQ,EAAEb;eACPjL;cACHoD,IAAI,EAAEA,IAAI,CAACA;cACXwB,IAAI;cAPR;;;UAUJ+D,KAAI,CAACuC,MAAL,CAAYxJ,KAAZ,CAAkB2J,OAAlB,IAA6B,gBAA7B;;UAEA,IAAIJ,UAAJ,EAAgB;YACZ7H,IAAI,CAAC6H,UAAL,GAAkB,KAAlB;;YACAtC,KAAI,CAAC4C,UAAL,CAAgBQ,OAAhB;WAFJ,MAGO,IAAIpD,KAAI,CAAC5B,aAAL,IAAsB4B,KAAI,CAACR,gBAA/B,EAAiD;;YAEpD,IAAMmC,WAAW,GAAG3B,KAAI,CAAC4B,YAAL,CAChBvJ,gBAAgB,CAAChB,CAAC,CAACI,OAAH,EAAYJ,CAAC,CAACK,OAAd,CADA,EAEhB+C,IAAI,CAACyD,iBAFW,CAApB;;YAIA8B,KAAI,CAACqC,OAAL,CAAaV,WAAW,GAAG,CAACA,WAAD,CAAH,GAAmB,EAA3C,EAA+C1F,IAA/C,EAAqD5E,CAArD;;;UAEJ,IAAI,CAACoD,IAAI,CAAC4E,qBAAV,EAAiC;YAC7BW,KAAI,CAAC2C,UAAL,CACIlI,IAAI,CAACgG,oBADT,EAEIhG,IAAI,CAAC2H,kBAFT,EAGInG,IAHJ,EAII5E,CAJJ;;SApCA;;QA+DA2I,gBAAA,GAAa,UAAC3I,CAAD;UACjB,IAAMyI,OAAO,GAAGE,KAAI,CAACF,OAArB;UACA,IAAIuD,SAAS,GAAG,KAAhB;;UAEA,IAAI,CAACrD,KAAI,CAACsD,sBAAV,EAAkC;YAC9B,IAAMrB,MAAM,GAAGjC,KAAI,CAACuD,aAAL,CAAmBlM,CAAnB,EAAsByI,OAAO,CAACtB,oBAA9B,CAAf;;YAEAwB,KAAI,CAACsD,sBAAL,GAA8BrB,MAA9B;YACAoB,SAAS,GAAGpB,MAAZ;;;UAEJ,IAAI,CAACjC,KAAI,CAACwD,wCAAV,EAAoD;YAChD,IAAMvB,MAAM,GAAGjC,KAAI,CAACuD,aAAL,CAAmBlM,CAAnB,EAAsByI,OAAO,CAACrB,mCAA9B,CAAf;;YAEAuB,KAAI,CAACwD,wCAAL,GAAgDvB,MAAhD;YACAoB,SAAS,GAAGA,SAAS,IAAIpB,MAAzB;;;UAEJ,IAAI,CAACoB,SAAL,EAAgB;YACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA4BJrD,KAAI,CAACmC,IAAL,CAAU,SAAV,EAAqB;YACjBsB,qBAAqB,EAAEzD,KAAI,CAACsD,sBADX;YAEjBI,uCAAuC,EAAE1D,KAAI,CAACwD;WAFlD;SA7CI;;QAkDAxD,cAAA,GAAW,UAAC3I,CAAD;UACf,IAAMyI,OAAO,GAAGE,KAAI,CAACF,OAArB;UACA,IAAI6D,OAAO,GAAG,KAAd;;UAEA,IAAI3D,KAAI,CAACsD,sBAAT,EAAiC;YAC7B,IAAMrB,MAAM,GAAGjC,KAAI,CAACuD,aAAL,CAAmBlM,CAAnB,EAAsByI,OAAO,CAACtB,oBAA9B,EAAoD,IAApD,CAAf;;YACAwB,KAAI,CAACsD,sBAAL,GAA8B,CAACrB,MAA/B;YAEA0B,OAAO,GAAG1B,MAAV;;;UAEJ,IAAIjC,KAAI,CAACwD,wCAAT,EAAmD;YAC/C,IAAMvB,MAAM,GAAGjC,KAAI,CAACuD,aAAL,CAAmBlM,CAAnB,EAAsByI,OAAO,CAACrB,mCAA9B,EAAmE,IAAnE,CAAf;;YACAuB,KAAI,CAACwD,wCAAL,GAAgD,CAACvB,MAAjD;YAEA0B,OAAO,GAAGA,OAAO,IAAI1B,MAArB;;;UAEJ,IAAI,CAAC0B,OAAL,EAAc;YACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA6BJ3D,KAAI,CAACmC,IAAL,CAAU,OAAV,EAAmB;YACfsB,qBAAqB,EAAEzD,KAAI,CAACsD,sBADb;YAEfI,uCAAuC,EAAE1D,KAAI,CAACwD;WAFlD;SA9CI;;QAmDAxD,aAAA,GAAU;UACd,IAAIA,KAAI,CAACsD,sBAAL,IAA+BtD,KAAI,CAACwD,wCAAxC,EAAkF;YAC9ExD,KAAI,CAACsD,sBAAL,GAA8B,KAA9B;YACAtD,KAAI,CAACwD,wCAAL,GAAgD,KAAhD;;YACAxD,KAAI,CAACmC,IAAL,CAAU,OAAV,EAAmB;cACfsB,qBAAqB,EAAEzD,KAAI,CAACsD,sBADb;cAEfI,uCAAuC,EAAE1D,KAAI,CAACwD;aAFlD;;SAJA;;QAUAxD,4BAAA,GAAyB,UAAC3I,CAAD;UAC7B,IAAI,CAAC2I,KAAI,CAAC4D,KAAL,CAAWC,MAAX,EAAL,EAA0B;YACtB;;;UAEJ,IAAI5F,aAAa,GAAG+B,KAAI,CAAC/B,aAAzB;;UAEA,IAAIA,aAAa,KAAKqC,MAAtB,EAA8B;YAC1BrC,aAAa,GAAG3F,QAAQ,CAACwL,eAAzB;;;UAEJ,IAAMC,UAAU,GACZ9F,aAAa,YAAY+F,OAAzB,GACM,CAAC/F,aAAD,CADN,GAEO,GAAGgG,KAAH,CAASC,IAAT,CAAcjG,aAAd,CAHX;UAIA,IAAMsE,MAAM,GAAGlL,CAAC,CAACkL,MAAjB;UAEAwB,UAAU,CAACI,IAAX,CAAgB,UAACzL,SAAD;YACZ,IAAIA,SAAS,KAAK6J,MAAd,IAAwB7J,SAAS,CAAC0L,QAAV,CAAmB7B,MAAnB,CAA5B,EAAwD;cACpDlL,CAAC,CAAC2H,cAAF;cACA,OAAO,IAAP;;WAHR;SAfI;;QA3mCJgB,KAAI,CAACuC,MAAL,GAAczC,OAAO,CAAC9B,eAAtB;QACA,IAAItF,SAAS,GAAGoH,OAAO,CAACpH,SAAxB;QACAsH,KAAI,CAACF,OAAL;UACI9B,eAAe,EAAE;UACjBtF,SAAS,EAAE;UACXuF,aAAa,EAAE;UACfC,iBAAiB,EAAE;UACnBE,aAAa,EAAE;UACfE,gBAAgB,EAAE;UAClBkB,gBAAgB,EAAE;UAClBb,OAAO,EAAE;UACTJ,cAAc,EAAE;UAChB7B,6BAA6B,EAAE;UAC/B8B,oBAAoB,EAAE;UACtBC,mCAAmC,EAAE;UACrCC,YAAY,EAAE;UACdG,aAAa,EAAEwF;UACftF,UAAU,EAAE;UACZC,cAAc,EAAE;UAChBjB,cAAc,EAAE;UAChBsB,qBAAqB,EAAE;UACvBE,aAAa,EAAE;UACfD,aAAa,EAAE;UACfH,cAAc,EAAEnD;UAChBiD,QAAQ,EAAE;UACV1E,KAAK,EAAE;WACJuF,QAxBP;QA0BA,IAAM9B,eAAe,GAAGgC,KAAI,CAACF,OAAL,CAAa9B,eAArC;;QAEA,IAAIA,eAAJ,EAAqB;UACjBtF,SAAS,GAAGsF,eAAe,CAACsG,aAA5B;;;QAEJtE,KAAI,CAACtH,SAAL,GAAiBA,SAAS,IAAIJ,QAAQ,CAACiM,IAAvC;;QACAvE,KAAI,CAACwE,WAAL;;QACAxE,KAAI,CAACyE,cAAL;;QACAzE,KAAI,CAAC0E,gBAAL;;;;;;;;;;;;MAMG,0BAAA,GAAP,UACIhE,eADJ;QAGI,IAAMiE,cAAc,GAAG,KAAKjE,eAA5B;;QACM,IAAA3G,KAAqC4C,MAAI,CAC3CgI,cAD2C,EAE3CjE,eAF2C,CAAzC;YAAE5D,KAAK,WAAP;YAASC,OAAO,aAAhB;YAAkBF,QAAQ,cAA1B;YAA4BD,IAAI,UAAhC;;QAIN,KAAK8D,eAAL,GAAuBA,eAAvB;QAEA,OAAO;UACH5D,KAAK,EAAEA,KAAK,CAAC5E,GAAN,CAAU,UAAAF,KAAA;YAAS,OAAA4E,IAAI,CAAC5E,KAAD,CAAJ;WAAnB,CADJ;UAEH+E,OAAO,EAAEA,OAAO,CAAC7E,GAAR,CAAY,UAAAF,KAAA;YAAS,OAAA6E,QAAQ,CAAC7E,KAAD,CAAR;WAArB,CAFN;UAGH2M,cAAc,gBAHX;UAIHC,QAAQ,EAAElE;SAJd;OAVG;;;;;;;MAqBA,kCAAA,GAAP,UACImE,MADJ,EAEIC,MAFJ;QAII,IAAMvJ,IAAI,GAAGP,IAAI,CAACc,GAAL,CAAS+I,MAAM,CAAC,CAAD,CAAf,EAAoBC,MAAM,CAAC,CAAD,CAA1B,CAAb;QACA,IAAMpJ,GAAG,GAAGV,IAAI,CAACc,GAAL,CAAS+I,MAAM,CAAC,CAAD,CAAf,EAAoBC,MAAM,CAAC,CAAD,CAA1B,CAAZ;QACA,IAAMtJ,KAAK,GAAGR,IAAI,CAACsC,GAAL,CAASuH,MAAM,CAAC,CAAD,CAAf,EAAoBC,MAAM,CAAC,CAAD,CAA1B,CAAd;QACA,IAAMnJ,MAAM,GAAGX,IAAI,CAACsC,GAAL,CAASuH,MAAM,CAAC,CAAD,CAAf,EAAoBC,MAAM,CAAC,CAAD,CAA1B,CAAf;QACA,IAAM7I,IAAI,GAAS;UACfV,IAAI,MADW;UAEfG,GAAG,KAFY;UAGfF,KAAK,OAHU;UAIfG,MAAM,QAJS;UAKfR,KAAK,EAAEK,KAAK,GAAGD,IALA;UAMfF,MAAM,EAAEM,MAAM,GAAGD;SANrB;QAQA,IAAMjB,IAAI,GAAG;UAAEsK,WAAW,EAAE;SAA5B;QAEA,KAAKvE,qBAAL,CAA2B/F,IAA3B;QACA,IAAMuK,gBAAgB,GAAG,KAAKC,OAAL,CAAahJ,IAAb,EAAmBxB,IAAnB,CAAzB;QACA,IAAMwH,MAAM,GAAG,KAAKiD,kBAAL,CAAwBF,gBAAxB,CAAf;QAEA,6BACO/C;UACHhG,IAAI;UAFR;OAtBG;;;;;;;MA+BA,6BAAA,GAAP,UACIkJ,UADJ,EAEIC,QAFJ;QAII,IAAMC,SAAS,GAAG,IAAIC,UAAJ,CAAe,WAAf,EAA4B;UAC1C7N,OAAO,EAAE0N,UAAU,CAAC,CAAD,CADuB;UAE1CzN,OAAO,EAAEyN,UAAU,CAAC,CAAD,CAFuB;UAG1CI,UAAU,EAAE,IAH8B;UAI1CC,OAAO,EAAE;SAJK,CAAlB;QAMA,IAAMC,SAAS,GAAG,IAAIH,UAAJ,CAAe,WAAf,EAA4B;UAC1C7N,OAAO,EAAE2N,QAAQ,CAAC,CAAD,CADyB;UAE1C1N,OAAO,EAAE0N,QAAQ,CAAC,CAAD,CAFyB;UAG1CG,UAAU,EAAE,IAH8B;UAI1CC,OAAO,EAAE;SAJK,CAAlB;QAMA,IAAME,OAAO,GAAG,IAAIJ,UAAJ,CAAe,WAAf,EAA4B;UACxC7N,OAAO,EAAE2N,QAAQ,CAAC,CAAD,CADuB;UAExC1N,OAAO,EAAE0N,QAAQ,CAAC,CAAD,CAFuB;UAGxCG,UAAU,EAAE,IAH4B;UAIxCC,OAAO,EAAE;SAJG,CAAhB;QAMA,IAAM5B,KAAK,GAAG,KAAKA,KAAnB;QACA,IAAM3B,MAAM,GAAG2B,KAAK,CAAC+B,WAAN,CAAkBN,SAAlB,CAAf;;QAEA,IAAIpD,MAAM,KAAK,KAAf,EAAsB;UAClB2B,KAAK,CAACgC,MAAN,CAAaH,SAAb;UACA7B,KAAK,CAACiC,SAAN,CAAgBH,OAAhB;;OA3BD;;;;;;MAiCA,0BAAA,GAAP;QACI,OAAO,KAAKhF,eAAZ;OADG;;;;;;;;;;;;;;;MAeA,wBAAA,GAAP,UAAwBrJ,CAAxB;QACI,KAAKuM,KAAL,CAAWkC,gBAAX,CAA4BzO,CAA5B;QACA,OAAO,IAAP;OAFG;;;;;;MAOA,eAAA,GAAP;QACI,KAAK0O,GAAL;QACA,KAAKC,MAAL,IAAe,KAAKA,MAAL,CAAYC,OAAZ,EAAf;QACA,KAAKrC,KAAL,CAAWsC,KAAX;QACA,KAAKC,YAAL,CAAkBF,OAAlB;QACAG,WAAW,CAAC9N,QAAD,EAAW,aAAX,EAA0B,KAAK+N,sBAA/B,CAAX;QAEA,KAAKL,MAAL,GAAc,IAAd;QACA,KAAKpC,KAAL,GAAa,IAAb;QACA,KAAKuC,YAAL,GAAoB,IAApB;QACA,KAAK5D,MAAL,GAAc,IAAd;QACA,KAAK7J,SAAL,GAAiB,IAAjB;QACA,KAAKoH,OAAL,GAAe,IAAf;OAZG;;MAcA,wBAAA,GAAP,UAAwByC,MAAxB;QACI,IAAMpD,cAAc,GAAG,KAAKA,cAAL,IAAuBnD,qBAA9C;QACA,IAAMsK,IAAI,GAAGnH,cAAc,CAACoD,MAAD,CAA3B;QACA,IAAMpF,MAAM,GAAG,CAACmJ,IAAI,CAACnK,IAAN,EAAYmK,IAAI,CAAClK,IAAjB,EAAuBkK,IAAI,CAAChK,IAA5B,EAAkCgK,IAAI,CAACjK,IAAvC,CAAf;;QAEA,IAAI8C,cAAc,KAAKnD,qBAAvB,EAA8C;UAC1C,IAAMC,IAAI,GAAGsG,MAAM,CAACrG,qBAAP,EAAb;UAEA,OAAOqK,SAAS,CAACpJ,MAAD,EAASlB,IAAT,CAAhB;;;QAEJ,OAAOkB,MAAP;OAVG;;;;;;MAeA,6BAAA,GAAP;QACI,IAAMqJ,kBAAkB,GAAoC,EAA5D;QAEA,KAAK1G,OAAL,CAAa5B,iBAAb,CAA+B9E,OAA/B,CAAuC,UAACmJ,MAAD;UACnC,IAAIpB,QAAQ,CAACoB,MAAD,CAAZ,EAAsB;YAClBiE,kBAAkB,CAACC,IAAnB,CAAwBlE,MAAxB;WADJ,MAEO;YACH,IAAMmE,QAAQ,GAAG,GAAGzC,KAAH,CAASC,IAAT,CACb5L,QAAQ,CAACqO,gBAAT,CAA0BpE,MAA1B,CADa,CAAjB;YAIAmE,QAAQ,CAACtN,OAAT,CAAiB,UAACJ,EAAD;cACbwN,kBAAkB,CAACC,IAAnB,CAAwBzN,EAAxB;aADJ;;SARR;QAcA,OAAOwN,kBAAP;OAjBG;;;;;;MAsBA,mBAAA,GAAP;QACI,IAAI,CAAC,KAAK5C,KAAL,CAAWC,MAAX,EAAL,EAA0B;UACtB;;;QAEJ,IAAMhF,aAAa,GAAG,KAAKA,aAA3B;;QAGA,CAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,SAAA,GAAAA,aAAa,CAAEnG,SAAf,KAA4B,KAAKkK,UAAL,CAAgBgE,WAAhB;UACxBzG,UAAU,EAAE,KAAKyD,KAAL,CAAWiD,eAAX;WACThI,cAFqB,CAA5B;OAPG;;;;;;MAeA,6BAAA,GAAP,UAA6BpE,IAA7B;QAAA,gBAAA;;QAA6B,mBAAA,EAAA;UAAAA,OAAY,KAAKmJ,KAAL,CAAWkD,YAAX,EAAZ;;;QACzB,IAAM5I,iBAAiB,GAAG,KAAK6I,qBAAL,EAA1B;QACA,IAAMC,gBAAgB,GAAG9I,iBAAiB,CAAChG,GAAlB,CACrB,UAACqK,MAAD;UAAY,OAAAvC,KAAI,CAACiH,gBAAL,CAAsB1E,MAAtB,CAAA;SADS,CAAzB;QAGA9H,IAAI,CAACyD,iBAAL,GAAyBA,iBAAzB;QACAzD,IAAI,CAACuM,gBAAL,GAAwBA,gBAAxB;;QACA,KAAKE,cAAL,CAAoBzM,IAApB;OAPG;;;;;;;;MAcA,mBAAA,GAAP,UACIpD,CADJ,EAEI6I,aAFJ;QAIU,IAAAnG,KAAuB3C,WAAS,CAACC,CAAD,CAAhC;YAAEI,OAAO,aAAT;YAAWC,OAAO,aAAlB;;QACN,IAAMyP,SAAS,GAAG;UACd1M,IAAI,EAAE;YACF6H,UAAU,EAAE;WAFF;UAId7K,OAAO,SAJO;UAKdC,OAAO,SALO;UAMdyI,UAAU,EAAE9I,CANE;UAOd6K,OAAO,EAAE,IAPK;UAQd9B,IAAI,EAAE;YACF,OAAO,KAAP;;SATR;;QAYA,IAAI,KAAKgH,YAAL,CAAkBD,SAAlB,EAA6BjH,aAA7B,CAAJ,EAAiD;UAC7C,KAAKmH,UAAL,CAAgBF,SAAhB;;;QAEJ,OAAO,IAAP;OApBG;;MAsBC,wBAAA,GAAR;QACU,IAAApN,KAA8E,KAAK+F,OAAnF;YAAEpB,YAAY,kBAAd;YAAgBF,oBAAoB,0BAApC;YAAsCC,mCAAmC,yCAAzE;;QAEN,IAAI,KAAKuH,MAAT,EAAiB;UACb,KAAKA,MAAL,CAAYC,OAAZ;UACA,KAAKD,MAAL,GAAc,IAAd;;;QAEJ,IAAIxH,oBAAoB,IAAIC,mCAA5B,EAAiE;UAC7D,KAAKuH,MAAL,GAAc,IAAIsB,aAAJ,CAAkB5I,YAAY,IAAI4B,MAAlC,CAAd;UACA,KAAK0F,MAAL,CACKuB,OADL,CACa,KAAKC,UADlB,EAEKC,KAFL,CAEW,KAAKC,QAFhB,EAGKC,EAHL,CAGQ,MAHR,EAGgB,KAAKC,OAHrB;;OATA;;MAeA,mBAAA,GAAR;QACU,IAAA7N,KAAgE,KAAK+F,OAArE;YAAEtB,oBAAoB,0BAAtB;YAAwBC,mCAAmC,yCAA3D;;QACN,IAAK,CAACD,oBAAD,IAAyB,CAACC,mCAA3B,IAAmE,KAAKuH,MAA5E,EAAoF;UAChF;;;QAEJ,KAAKtB,gBAAL;OALI;;;MAQA,uBAAA,GAAR,UAAwBhG,YAAxB;QAAA,gBAAA;;QACI,IAAMoB,OAAO,GAAG,KAAKA,OAArB;QAEA5F,SAAS,CAAC4F,OAAO,CAACpB,YAAT,EAAuBA,YAAvB,EAAqC;UAC1CoB,OAAO,CAACpB,YAAR,GAAuBA,YAAvB;;UAEAsB,KAAI,CAAC0E,gBAAL;SAHK,CAAT;OAHI;;MASA,yBAAA,GAAR;QACU,IAAA3K,KAGF,KAAK+F,OAHH;YACFvB,cAAc,oBADZ;YAEFC,oBAAoB,0BAFlB;;QAKN,IAAI,CAACA,oBAAD,IAAyB,CAAC,KAAK8E,sBAAnC,EAA2D;UACvD,OAAO/E,cAAP;;;QAEJ,OAAO,CAACA,cAAR;OATI;;MAWA,wCAAA,GAAR;QACU,IAAAxE,KAGF,KAAK+F,OAHH;YACFpD,6BAA6B,mCAD3B;YAEF+B,mCAAmC,yCAFjC;;QAKN,IAAI,CAACA,mCAAD,IAAwC,CAAC,KAAK+E,wCAAlD,EAA4F;UACxF,OAAO9G,6BAAP;;;QAEJ,OAAO,CAACA,6BAAR;OATI;;MAWA,+BAAA,GAAR,UACI8B,oBADJ;QAAA,gBAAA;;QAGI,IAAMsB,OAAO,GAAG,KAAKA,OAArB;QAEA5F,SAAS,CAAC4F,OAAO,CAACtB,oBAAT,EAA+BA,oBAA/B,EAAqD;UAC1DsB,OAAO,CAACtB,oBAAR,GAA+BA,oBAA/B;;UAEAwB,KAAI,CAAC6H,WAAL;SAHK,CAAT;OALI;;MAWA,8CAAA,GAAR,UACIpJ,mCADJ;QAAA,gBAAA;;QAGI,IAAMqB,OAAO,GAAG,KAAKA,OAArB;QAEA5F,SAAS,CAAC4F,OAAO,CAACrB,mCAAT,EAA8CA,mCAA9C,EAAmF;UACxFqB,OAAO,CAACrB,mCAAR,GAA8CA,mCAA9C;;UAEAuB,KAAI,CAAC6H,WAAL;SAHK,CAAT;OALI;;MAWA,yBAAA,GAAR,UAA0B9P,KAA1B;QACI,KAAK6L,KAAL,CAAW9D,OAAX,CAAmBd,cAAnB,GAAoCjH,KAApC;OADI;;MAGA,qBAAA,GAAR,UAAsBA,KAAtB;QACI,KAAK6L,KAAL,CAAW9D,OAAX,CAAmBf,UAAnB,GAAgChH,KAAhC;OADI;;MAGA,mBAAA,GAAR;QACI,KAAKwK,MAAL,GAAchK,aAAa,CACtBqB;UAAKd,SAAS,EAAE4E;UADM,EAEvB,KAAK6E,MAFkB,EAGvB,KAAK7J,SAHkB,CAA3B;QAMA,IAAM6J,MAAM,GAAG,KAAKA,MAApB;QAEM,IAAAxI,KAQF,KAAK+F,OARH;YACF7B,aAAa,mBADX;YAEFc,UAAU,gBAFR;YAGFC,cAAc,oBAHZ;YAIFS,4BAA4B,kCAJ1B;YAKFC,uBAAuB,6BALrB;YAMFoI,4BAA4B,kCAN1B;YAOF9N,yBAPE;YAOF+N,iBAAiB,mBAAG,SAPlB;QASN,KAAK9J,aAAL,GACI,OAAOA,aAAP,KAAyB,QAAzB,GACM,GAAGgG,KAAH,CAASC,IAAT,CAAc5L,QAAQ,CAACqO,gBAAT,CAA0B1I,aAA1B,CAAd,CADN,GAEMA,aAAa,IAAK,KAAKsE,MAAL,CAAYyF,UAHxC;QAIA,KAAKpE,KAAL,GAAa,IAAIqE,KAAJ,CAAU,KAAKhK,aAAf,EAA8B;UACvCiK,eAAe,EAAE,IADsB;UAEvCxP,SAAS,EAAE4H,MAF4B;UAGvCvB,UAAU,YAH6B;UAIvCC,cAAc,gBAJyB;UAKvCS,4BAA4B,8BALW;UAMvCC,uBAAuB,yBANgB;UAOvCoI,4BAA4B,8BAPW;UAQvCC,iBAAiB;SARR,EASVJ,EATU,CASP;UACF9E,SAAS,EAAE,KAAKuE,YADd;UAEFrE,IAAI,EAAE,KAAKoF,OAFT;UAGF/E,OAAO,EAAE,KAAKiE;SAZL,CAAb;QAcAe,QAAQ,CAAC9P,QAAD,EAAW,aAAX,EAA0B,KAAK+N,sBAA/B,CAAR;QAEA,KAAKF,YAAL,GAAoB3I,QAAQ,CAAC6K,MAAT,CAAgB9F,MAAhB,EAAwB;UACxC+F,KAAK,EAAE,KAAKxI,OAAL,CAAab;SADJ,CAApB;OAtCI;;MA0CA,eAAA,GAAR,UACIsJ,UADJ,EAEI9N,IAFJ;QAIU,IAAAV,KAA6B,KAAK+F,OAAlC;YAAEnB,OAAO,aAAT;YAAWP,aAAa,mBAAxB;QACE,IAAA7C,IAAI,GAAyBgN,UAAU,KAAvC;YAAM7M,GAAG,GAAoB6M,UAAU,IAAvC;YAAW/M,KAAK,GAAa+M,UAAU,MAAvC;YAAkB5M,MAAM,GAAK4M,UAAU,OAAvC;QACR,IAAMC,WAAW,GAAiE/N,IAAI,CAAC+N,WAAvF;QACA,IAAMnI,UAAU,GAAG5F,IAAI,CAAC4F,UAAxB;QACA,IAAME,WAAW,GAAG9F,IAAI,CAAC8F,WAAzB;QACA,IAAM9I,OAAO,GAAGgD,IAAI,CAAChD,OAArB;QACA,IAAMC,OAAO,GAAG+C,IAAI,CAAC/C,OAArB;QACA,IAAMqN,WAAW,GAAGtK,IAAI,CAACsK,WAAzB;QACA,IAAM0D,UAAU,GAAG,CACf,CAAClN,IAAD,EAAOG,GAAP,CADe,EAEf,CAACF,KAAD,EAAQE,GAAR,CAFe,EAGf,CAACF,KAAD,EAAQG,MAAR,CAHe,EAIf,CAACJ,IAAD,EAAOI,MAAP,CAJe,CAAnB;QAMA,IAAM+M,YAAY,GAAGC,SAAS,CAAC,SAAA,CAAGhK,OAAH,CAAD,CAA9B;;QAEA,IAAMiK,KAAK,GAAG,UAACzL,MAAD;UACV,IAAM0L,MAAM,GAAG9D,WAAW,GAAG,KAAH,GAAW+D,QAAQ,CAAC,CAACrR,OAAD,EAAUC,OAAV,CAAD,EAAqByF,MAArB,CAA7C;;UAEA,IAAIiB,aAAa,IAAIyK,MAArB,EAA6B;YACzB,OAAO,IAAP;;;UAEJ,IAAME,aAAa,GAAGC,gBAAgB,CAACP,UAAD,EAAatL,MAAb,CAAtC;;UAEA,IAAI,CAAC4L,aAAa,CAAC1L,MAAnB,EAA2B;YACvB,OAAO,KAAP;;;UAEJ,IAAI4L,WAAW,GAAGC,WAAW,CAACH,aAAD,CAA7B;;UAGA,IAAII,UAAU,GAAG,CAAjB;;UAEA,IAAIF,WAAW,KAAK,CAAhB,IAAqBC,WAAW,CAAC/L,MAAD,CAAX,KAAwB,CAAjD,EAAoD;YAChDgM,UAAU,GAAGjM,WAAW,CAACC,MAAD,CAAxB;YACA8L,WAAW,GAAG/L,WAAW,CAAC6L,aAAD,CAAzB;WAFJ,MAGO;YACHI,UAAU,GAAGD,WAAW,CAAC/L,MAAD,CAAxB;;;UAIJ,IAAIuL,YAAY,CAACU,IAAb,KAAsB,IAA1B,EAAgC;YAC5B,OAAOH,WAAW,IAAIP,YAAY,CAAC3Q,KAAnC;WADJ,MAEO;YACH,IAAMsR,IAAI,GAAGC,OAAO,CAChBtO,IAAI,CAACuO,KAAL,CAAYN,WAAW,GAAGE,UAAf,GAA6B,GAAxC,CADgB,EAEhB,CAFgB,EAGhB,GAHgB,CAApB;YAMA,OAAOE,IAAI,IAAIrO,IAAI,CAACc,GAAL,CAAS,GAAT,EAAc4M,YAAY,CAAC3Q,KAA3B,CAAf;;SAjCR;;QAoCA,IAAI,CAACyQ,WAAL,EAAkB;UACd,IAAMtK,iBAAiB,GAAoCzD,IAAI,CAACyD,iBAAhE;UACA,IAAMsL,kBAAgB,GAAiB/O,IAAI,CAACuM,gBAA5C;UAEA,OAAO9I,iBAAiB,CAACpG,MAAlB,CAAyB,UAAC2R,CAAD,EAAInQ,CAAJ;YAC5B,OAAOsP,KAAK,CAACY,kBAAgB,CAAClQ,CAAD,CAAjB,CAAZ;WADG,CAAP;;;QAIJ,IAAIoH,eAAe,GAAoC,EAAvD;QACA,IAAMgJ,IAAI,GAAG1O,IAAI,CAAC2O,KAAL,CAAWpO,IAAI,GAAG8E,UAAlB,CAAb;QACA,IAAMuJ,IAAI,GAAG5O,IAAI,CAAC2O,KAAL,CAAWnO,KAAK,GAAG6E,UAAnB,CAAb;QACA,IAAMwJ,IAAI,GAAG7O,IAAI,CAAC2O,KAAL,CAAWjO,GAAG,GAAG6E,WAAjB,CAAb;QACA,IAAMuJ,IAAI,GAAG9O,IAAI,CAAC2O,KAAL,CAAWhO,MAAM,GAAG4E,WAApB,CAAb;;QAEA,KAAK,IAAIwJ,CAAC,GAAGL,IAAb,EAAmBK,CAAC,IAAIH,IAAxB,EAA8B,EAAEG,CAAhC,EAAmC;UAC/B,IAAMC,OAAO,GAAGxB,WAAW,CAACuB,CAAD,CAA3B;;UAEA,IAAI,CAACC,OAAL,EAAc;YACV;;;kCAEKC;YACL,IAAMC,KAAK,GAAGF,OAAO,CAACC,CAAD,CAArB;;YAEA,IAAI,CAACC,KAAL,EAAY;;;;YAGJ,IAAA/M,MAAM,GAAc+M,KAAK,OAAzB;gBAAQC,OAAO,GAAKD,KAAK,QAAzB;YAER/M,MAAM,CAAC/D,OAAP,CAAe,UAACgR,UAAD,EAAa9Q,CAAb;cACX,IAAIsP,KAAK,CAACwB,UAAD,CAAT,EAAuB;gBACnB1J,eAAe,CAAC+F,IAAhB,CAAqB0D,OAAO,CAAC7Q,CAAD,CAA5B;;aAFR;;;UARJ,KAAK,IAAI2Q,CAAC,GAAGJ,IAAb,EAAmBI,CAAC,IAAIH,IAAxB,EAA8B,EAAEG,CAAhC;oBAASA;;;;QAeb,OAAOtS,gBAAgB,CAAC+I,eAAD,CAAvB;OA3FI;;MA6FA,sBAAA,GAAR;QAAA,gBAAA;;QACI,KAAKkC,UAAL,CACK+E,EADL,CACQ,QADR,EACkB,UAAC5N,EAAD;cAAGrB,SAAS;cAAE2R,SAAS;;UACjCrK,KAAI,CAACmC,IAAL,CAAU,QAAV,EAAoB;YAChBzJ,SAAS,WADO;YAEhB2R,SAAS;WAFb;SAFR,EAOK1C,EAPL,CAOQ,MAPR,EAOgB,UAAC5N,EAAD;cAAGuQ,OAAO;cAAEC,OAAO;cAAEpK,UAAU;UACvC,IAAMyD,KAAK,GAAG5D,KAAI,CAAC4D,KAAnB;;UAEA,IAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACC,MAAN,EAAf,EAA+B;YAC3B;;;UAGJ,IAAMpJ,IAAI,GAAGuF,KAAI,CAAC4D,KAAL,CAAWkD,YAAX,EAAb;;UACA,IAAMtM,SAAS,GAAGC,IAAI,CAACD,SAAvB;UAEAC,IAAI,CAACI,MAAL,IAAeyP,OAAf;UACA7P,IAAI,CAACK,MAAL,IAAeyP,OAAf;UACA9P,IAAI,CAACuM,gBAAL,CAAsB5N,OAAtB,CAA8B,UAAC+D,MAAD;YAC1BA,MAAM,CAAC/D,OAAP,CAAe,UAACoR,GAAD;cACXA,GAAG,CAAC,CAAD,CAAH,IAAUF,OAAV;cACAE,GAAG,CAAC,CAAD,CAAH,IAAUD,OAAV;aAFJ;WADJ;;UAMAvK,KAAI,CAACkH,cAAL,CAAoBzM,IAApB;;UAEAD,SAAS,CAACe,IAAV,IAAkB+O,OAAlB;UACA9P,SAAS,CAACgB,KAAV,IAAmB8O,OAAnB;UACA9P,SAAS,CAACkB,GAAV,IAAiB6O,OAAjB;UACA/P,SAAS,CAACmB,MAAV,IAAoB4O,OAApB;;UAEAvK,KAAI,CAAC4D,KAAL,CAAW6G,QAAX,CACIH,OADJ,EAEIC,OAFJ,EAGIpK,UAAU,CAACA,UAHf,EAII,KAJJ;;UAMAH,KAAI,CAACgD,cAAL,CAAoBhD,KAAI,CAAC4D,KAAL,CAAWiD,eAAX,EAApB;SAtCR;OADI;;MA0CA,eAAA,GAAR,UACInG,eADJ,EAEIzE,IAFJ,EAGI5E,CAHJ,EAIIqT,OAJJ;QAMI,IAAMvK,UAAU,GAAG9I,CAAC,CAAC8I,UAArB;QACA,IAAM1F,IAAI,GAAGpD,CAAC,CAACoD,IAAf;QACA,IAAMwH,MAAM,GAAG,KAAKiD,kBAAL,CAAwBxE,eAAxB,CAAf;;QAEA,IAAIgK,OAAJ,EAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA+BT,KAAKvI,IAAL,CAAU,aAAV,wBACOF;YACHhG,IAAI;YACJkE,UAAU;YACV1F,IAAI,EAAEA,IAAI,CAACA;YAJf;;;QAOJ,IAAIwH,MAAM,CAACnF,KAAP,CAAaO,MAAb,IAAuB4E,MAAM,CAAClF,OAAP,CAAeM,MAA1C,EAAkD;;;;;;;;;;;;;;;;;;;;;;;;UAwB9C,KAAK8E,IAAL,CAAU,QAAV,wBACOF;YACHhG,IAAI;YACJkE,UAAU;YACV1F,IAAI,EAAEA,IAAI,CAACA;YAJf;;OAxEA;;MAgFA,kBAAA,GAAR,UACIgG,oBADJ,EAEI2B,kBAFJ,EAGInG,IAHJ,EAII5E,CAJJ;QAMY,IAAA8I,UAAU,GAAqB9I,CAAC,WAAhC;YAAY4L,QAAQ,GAAW5L,CAAC,SAAhC;YAAsBoD,IAAI,GAAKpD,CAAC,KAAhC;;QACF,IAAA0C,KAAqC4C,MAAI,CAC3C8D,oBAD2C,EAE3C,KAAKC,eAFsC,CAAzC;YAAE5D,KAAK,WAAP;YAASC,OAAO,aAAhB;YAAkBF,QAAQ,cAA1B;YAA4BD,IAAI,UAAhC;;QAIA,IAAA5C,KAKF2C,MAAI,CAACyF,kBAAD,EAAqB,KAAK1B,eAA1B,CALF;YACKiK,UAAU,WADf;YAEOC,YAAY,aAFnB;YAGQC,aAAa,cAHrB;YAIIC,SAAS,UAJb;;QAMN,IAAM/I,IAAI,GAAG5B,UAAU,IAAIA,UAAU,CAAC4B,IAAtC;QACA,IAAMgJ,WAAW,GAAGhJ,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK,YAArD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAgCA,KAAKI,IAAL,CAAU,WAAV,EAAuB;UACnB6I,aAAa,EAAEvK,oBADI;UAEnBkE,cAAc,EAAEvC,kBAFG;UAGnBwC,QAAQ,EAAE,KAAKlE,eAHI;UAInB5D,KAAK,EAAEA,KAAK,CAAC5E,GAAN,CAAU,UAACF,KAAD;YAAW,OAAA4E,IAAI,CAAC5E,KAAD,CAAJ;WAArB,CAJY;UAKnB+E,OAAO,EAAEA,OAAO,CAAC7E,GAAR,CAAY,UAACF,KAAD;YAAW,OAAA6E,QAAQ,CAAC7E,KAAD,CAAR;WAAvB,CALU;UAMnB2S,UAAU,EAAEA,UAAU,CAACzS,GAAX,CAAe,UAACF,KAAD;YAAW,OAAA8S,SAAS,CAAC9S,KAAD,CAAT;WAA1B,CANO;UAOnB4S,YAAY,EAAEA,YAAY,CAAC1S,GAAb,CAAiB,UAACF,KAAD;YAAW,OAAA6S,aAAa,CAAC7S,KAAD,CAAb;WAA5B,CAPK;UAQnB+S,WAAW,aARQ;UASnB7I,OAAO,EAAE,CAAC,CAAC7K,CAAC,CAAC6K,OATM;UAUnBe,QAAQ,EAAE,CAAC,CAACA,QAVO;UAWnBhH,IAAI,MAXe;UAYnBkE,UAAU,YAZS;UAanB1F,IAAI,EAAEA,IAAI,CAACA;SAbf;OAlDI;;MAuRA,sBAAA,GAAR,UAAuBpD,CAAvB,EAA+B4E,IAA/B;QAA+B,mBAAA,EAAA;UAAAA,OAAO3B,OAAO,CAACjD,CAAD,EAAI,KAAKyI,OAAL,CAAavF,KAAjB,CAAd;;;QACnB,IAAAE,IAAI,GAAKpD,CAAC,KAAV;QACA,IAAAqE,GAAG,GAA0BO,IAAI,IAAjC;YAAKV,IAAI,GAAoBU,IAAI,KAAjC;YAAWd,KAAK,GAAac,IAAI,MAAjC;YAAkBZ,MAAM,GAAKY,IAAI,OAAjC;QACR,IAAMqG,UAAU,GAAG7H,IAAI,CAAC6H,UAAxB;QAEI,IAAAzB,UAAU,GAGVpG,IAAI,WAHJ;YACAqG,UAAU,GAEVrG,IAAI,WAHJ;YAEAkG,WAAW,GACXlG,IAAI,YAHJ;QAIJ,IAAM+H,SAAS,GAAGC,mBAAmB,CAAC9B,WAAD,EAAc,CAC/CpF,IAAI,GAAGsF,UADwC,EAE/CnF,GAAG,GAAGoF,UAFyC,CAAd,CAArC;QAIA,IAAMmK,UAAU,GAAGxI,mBAAmB,CAAC9B,WAAD,EAAc,CAChDxF,KADgD,EAEhDE,MAFgD,CAAd,CAAtC;QAIA,IAAIqF,eAAe,GAAoC,EAAvD;;QACA,IAAI4B,UAAJ,EAAgB;UACZ,KAAKC,MAAL,CAAYxJ,KAAZ,CAAkB2J,OAAlB,IACI,oBACA,mBADA,GAEA,8BAAA,CAAwBF,SAAS,CAAC,CAAD,CAAjC,QAAA,QAAA,CAA2CA,SAAS,CAAC,CAAD,CAApD,QAAA,CAFA,GAGA,eAAA,CAASyI,UAAU,CAAC,CAAD,CAAnB,cAAA,QAAA,CAAmCA,UAAU,CAAC,CAAD,CAA7C,OAAA,CAJJ;UAMA,IAAMC,aAAa,GAAG,KAAKjG,OAAL,CAClBhJ,IADkB,EAElBxB,IAFkB,CAAtB;UAIAiG,eAAe,GAAGnE,WAAW,CACzB9B,IAAI,CAAC2H,kBADoB,EAEzB8I,aAFyB,EAGzB,KAAK3M,cAAL,IAAuB,KAAK7B,6BAHH,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAgCJ,IAAMuF,MAAM,GAAG,KAAKE,IAAL,CAAU,MAAV,wBACR9K;UACHoD,IAAI,EAAEA,IAAI,CAACA;UACX0I,QAAQ,EAAEb;UACVrG,IAAI;UAJO,CAAf;;QAMA,IAAIgG,MAAM,KAAK,KAAf,EAAsB;UAClB,KAAKM,MAAL,CAAYxJ,KAAZ,CAAkB2J,OAAlB,IAA6B,gBAA7B;UACArL,CAAC,CAAC+I,IAAF;UACA;;;QAGJ,IAAIkC,UAAJ,EAAgB;UACZ,KAAKD,OAAL,CAAa3B,eAAb,EAA8BzE,IAA9B,EAAoC5E,CAApC;;OA1EA;;MAoIA,qBAAA,GAAR,UAAsBA,CAAtB,EAA8B8T,IAA9B,EAAoEC,OAApE;QACI,IAAI,CAACD,IAAL,EAAW;UACP,OAAO,KAAP;;;QAEJ,IAAME,KAAK,GAAGC,QAAQ,CAACjU,CAAC,CAAC8I,UAAH,EAAe9I,CAAC,CAACkU,GAAjB,CAAtB;QACA,IAAMC,QAAQ,GAAG,GAAGC,MAAH,CAAUN,IAAV,CAAjB;QACA,IAAMO,UAAU,GAAGC,OAAO,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAP,GAAuBA,QAAvB,GAAkC,CAACA,QAAD,CAArD;;QAEA,IAAIJ,OAAJ,EAAa;UACT,IAAMQ,WAAS,GAAGvU,CAAC,CAACkU,GAApB;UAEA,OAAOG,UAAU,CAACvH,IAAX,CAAgB,UAACgH,IAAD;YACnB,OAAAA,IAAI,CAAChH,IAAL,CAAU,UAACoH,GAAD;cAAS,OAAAA,GAAG,KAAKK,WAAR;aAAnB,CAAA;WADG,CAAP;;;QAIJ,OAAOF,UAAU,CAACvH,IAAX,CAAgB,UAACgH,IAAD;UACnB,OAAAA,IAAI,CAACU,KAAL,CAAW,UAACN,GAAD;YAAS,OAAAF,KAAK,CAACpT,OAAN,CAAcsT,GAAd,IAAqB,CAAC,CAAtB;WAApB,CAAA;SADG,CAAP;OAfI;;MAwJA,oBAAA,GAAR,UAAqBrL,aAArB,EAAoDhC,iBAApD;QACI,IAAIyD,WAAW,GAAGzB,aAAlB;;QAEA,OAAOyB,WAAP,EAAoB;UAChB,IAAIzD,iBAAiB,CAACjG,OAAlB,CAA0B0J,WAA1B,IAAyC,CAAC,CAA9C,EAAiD;YAC7C;;;UAEJA,WAAW,GAAGA,WAAW,CAAC2C,aAA1B;;;QAEJ,OAAO3C,WAAP;OATI;;MAWA,sBAAA,GAAR,UAAuBlH,IAAvB;QACI,IAAM4F,UAAU,GAAG5F,IAAI,CAAC4F,UAAxB;QACA,IAAME,WAAW,GAAG9F,IAAI,CAAC8F,WAAzB;;QAEA,IAAI,CAACF,UAAD,IAAe,CAACE,WAApB,EAAiC;UAC7B9F,IAAI,CAAC+N,WAAL,GAAmB,IAAnB;SADJ,MAEO;UACH,IAAMsD,mBAAiB,GAAoCrR,IAAI,CAACyD,iBAAhE;UACA,IAAM8I,gBAAgB,GAAiBvM,IAAI,CAACuM,gBAA5C;UACA,IAAM+E,QAAM,GAAiE,EAA7E;UAEA/E,gBAAgB,CAAC5N,OAAjB,CAAyB,UAAC+D,MAAD,EAAS7D,CAAT;YACrB,IAAIoQ,IAAI,GAAG3I,QAAX;YACA,IAAI6I,IAAI,GAAG,CAAC7I,QAAZ;YACA,IAAI8I,IAAI,GAAG9I,QAAX;YACA,IAAI+I,IAAI,GAAG,CAAC/I,QAAZ;YAEA5D,MAAM,CAAC/D,OAAP,CAAe,UAAAoR,GAAA;cACX,IAAMT,CAAC,GAAG/O,IAAI,CAAC2O,KAAL,CAAWa,GAAG,CAAC,CAAD,CAAH,GAASnK,UAApB,CAAV;cACA,IAAM4J,CAAC,GAAGjP,IAAI,CAAC2O,KAAL,CAAWa,GAAG,CAAC,CAAD,CAAH,GAASjK,WAApB,CAAV;cAEAmJ,IAAI,GAAG1O,IAAI,CAACc,GAAL,CAASiO,CAAT,EAAYL,IAAZ,CAAP;cACAE,IAAI,GAAG5O,IAAI,CAACsC,GAAL,CAASyM,CAAT,EAAYH,IAAZ,CAAP;cACAC,IAAI,GAAG7O,IAAI,CAACc,GAAL,CAASmO,CAAT,EAAYJ,IAAZ,CAAP;cACAC,IAAI,GAAG9O,IAAI,CAACsC,GAAL,CAAS2M,CAAT,EAAYH,IAAZ,CAAP;aAPJ;;YAUA,KAAK,IAAIC,CAAC,GAAGL,IAAb,EAAmBK,CAAC,IAAIH,IAAxB,EAA8B,EAAEG,CAAhC,EAAmC;cAC/B,KAAK,IAAIE,CAAC,GAAGJ,IAAb,EAAmBI,CAAC,IAAIH,IAAxB,EAA8B,EAAEG,CAAhC,EAAmC;gBAC/B8B,QAAM,CAAChC,CAAD,CAAN,GAAYgC,QAAM,CAAChC,CAAD,CAAN,IAAa,EAAzB;gBACAgC,QAAM,CAAChC,CAAD,CAAN,CAAUE,CAAV,IAAe8B,QAAM,CAAChC,CAAD,CAAN,CAAUE,CAAV,KAAgB;kBAC3B9M,MAAM,EAAE,EADmB;kBAE3BgN,OAAO,EAAE;iBAFb;gBAKM,IAAApQ,KAAmCgS,QAAM,CAAChC,CAAD,CAAN,CAAUE,CAAV,CAAnC;oBAAEE,OAAO,aAAT;oBAAmB6B,WAAW,YAA9B;gBAEN7B,OAAO,CAAC1D,IAAR,CAAaqF,mBAAiB,CAACxS,CAAD,CAA9B;gBACA0S,WAAW,CAACvF,IAAZ,CAAiBtJ,MAAjB;;;WA3BZ;UAgCA1C,IAAI,CAAC+N,WAAL,GAAmBuD,QAAnB;;OA3CA;;MA7pCNE,OAAO,eA9BZC,UAAU,CAACvO,UAAD,EAAoB,UAACwO,SAAD,EAAYC,QAAZ;QAC3B,IAAMvT,UAAU,GAAiB;UAC7BwT,UAAU,EAAE,IADiB;UAE7BC,YAAY,EAAE,IAFe;UAG7BC,GAAG;YACC,OAAO,KAAKzM,OAAL,CAAasM,QAAb,CAAP;;SAJR;QAOA,IAAMI,MAAM,GAAGC,QAAQ,CAAC,aAAA,CAAOL,QAAP,CAAD,CAAvB;;QACA,IAAID,SAAS,CAACK,MAAD,CAAb,EAAuB;UACnB3T,UAAU,CAAC0T,GAAX,GAAiB,SAASA,GAAT;YACb,OAAO,KAAKC,MAAL,GAAP;WADJ;SADJ,MAIO;UACH3T,UAAU,CAAC0T,GAAX,GAAiB,SAASA,GAAT;YACb,OAAO,KAAKzM,OAAL,CAAasM,QAAb,CAAP;WADJ;;;QAIJ,IAAMM,MAAM,GAAGD,QAAQ,CAAC,aAAA,CAAOL,QAAP,CAAD,CAAvB;;QACA,IAAID,SAAS,CAACO,MAAD,CAAb,EAAuB;UACnB7T,UAAU,CAACT,GAAX,GAAiB,SAASA,GAAT,CAAaL,KAAb;YACb,KAAK2U,MAAL,EAAa3U,KAAb;WADJ;SADJ,MAIO;UACHc,UAAU,CAACT,GAAX,GAAiB,SAASA,GAAT,CAAaL,KAAb;YACb,KAAK+H,OAAL,CAAasM,QAAb,IAAyBrU,KAAzB;WADJ;;;QAIJ+G,MAAM,CAAC6N,cAAP,CAAsBR,SAAtB,EAAiCC,QAAjC,EAA2CvT,UAA3C;OA5BO,IA8BLoT,QAAA;MA2sCN,cAAA;IAAC,EA3sCqBW,aAAtB;;ICnFA;;;MAAsB/M,0BAAA;;MAAtB,gBAAA;;;;MAEA,cAAA;IAFA,EAAsBgN,QAAtB;;;;;;;;;;;;;;;ICAA,KAAK,IAAM5T,IAAX,IAAmB6T,OAAnB,EAA4B;MACvBb,SAAe,CAAChT,IAAD,CAAf,GAAyB6T,OAAe,CAAC7T,IAAD,CAAxC;IACJ;;;;;;;;"}