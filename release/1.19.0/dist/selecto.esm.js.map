{"version":3,"file":"selecto.esm.js","sources":["../src/utils.ts","../src/consts.ts","../src/SelectoManager.tsx","../src/Selecto.tsx"],"sourcesContent":["import type { Hypertext, Rect } from \"./types\";\nimport { IObject, addClass, hasClass, calculateBoundSize } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport { getMinMaxs } from \"overlap-area\";\n\nexport function getClient(e: MouseEvent | TouchEvent) {\n    if (\"touches\" in e) {\n        const touch = e.touches[0] || e.changedTouches[0];\n\n        return {\n            clientX: touch.clientX,\n            clientY: touch.clientY,\n        };\n    } else {\n        return {\n            clientX: e.clientX,\n            clientY: e.clientY,\n        };\n    }\n}\nexport function filterDuplicated<T>(arr: T[]): T[] {\n    if (typeof Map === \"undefined\") {\n        return arr.filter((value, index) => {\n            return arr.indexOf(value) === index;\n        });\n    }\n    const map = new Map<T, true>();\n    return arr.filter(value => {\n        if (map.has(value)) {\n            return false;\n        }\n        map.set(value, true);\n        return true;\n    });\n}\nexport function elementFromPoint(clientX: number, clientY: number): HTMLElement | SVGElement | null {\n    return (document.elementFromPoint && document.elementFromPoint(clientX, clientY)) as any || null;\n}\nexport function createElement(\n    jsx: Hypertext,\n    prevTarget?: HTMLElement | SVGElement,\n    container?: HTMLElement | SVGElement,\n) {\n    const { tag, children, attributes, className, style } = jsx;\n    const el = prevTarget || document.createElement(tag) as HTMLElement | SVGElement;\n\n    for (const name in attributes) {\n        el.setAttribute(name, attributes[name]);\n    }\n    const elChildren = el.children;\n    children.forEach((child, i) => {\n        createElement(child, elChildren[i] as HTMLElement | SVGElement, el);\n    });\n    if (className) {\n        className.split(\" \").forEach(name => {\n            if (!hasClass(el, name)) {\n                addClass(el, name);\n            }\n        });\n    }\n    if (style) {\n        const elStyle = el.style;\n        for (const name in style) {\n            elStyle[name] = style[name];\n        }\n    }\n    if (!prevTarget && container) {\n        container.appendChild(el);\n    }\n    return el;\n}\nexport function h(\n    tag: string,\n    attrs: IObject<any>,\n    ...children: Hypertext[]\n): Hypertext {\n    const {\n        className = \"\",\n        style = {},\n        ...attributes\n    } = attrs || {};\n    return {\n        tag,\n        className,\n        style,\n        attributes,\n        children,\n    };\n}\n\nexport function diffValue<T>(prev: T, cur: T, func: (prev: T, cur: T) => void) {\n    if (prev !== cur) {\n        func(prev, cur);\n    }\n}\nexport function isFastInside(point: number[], points: number[][]) {\n    const { minX, minY, maxX, maxY } = getMinMaxs(points);\n    const [x, y] = point;\n\n    return minX <= x && x <= maxX && minY <= y && y <= maxY;\n}\nexport function getFastOverlapPoints(points1: number[][], points2: number[][]) {\n    const {\n        minX: minX1,\n        minY: minY1,\n        maxX: maxX1,\n        maxY: maxY1,\n    } = getMinMaxs(points1);\n    const {\n        minX: minX2,\n        minY: minY2,\n        maxX: maxX2,\n        maxY: maxY2,\n    } = getMinMaxs(points2);\n\n    if (maxX2 < minX1 || maxX1 < minX2 || maxY2 < minY1 || maxY1 < minY2) {\n        return [];\n    }\n    const width = Math.min(maxX2 - minX1, maxX1 - minX2);\n    const height = Math.min(maxY2 - minY1, maxY1 - minY2);\n\n    return [\n        [0, 0],\n        [width, 0],\n        [width, height],\n        [0, height],\n    ];\n}\nexport function getRect(\n    e: any, ratio: number,\n    boundArea = e.datas.boundArea,\n): Rect {\n    let {\n        distX = 0,\n        distY = 0,\n    } = e;\n    const { startX, startY } = e.datas;\n\n    if (ratio > 0) {\n        const nextHeight = Math.sqrt((distX * distX + distY * distY) / (1 + ratio * ratio));\n        const nextWidth = ratio * nextHeight;\n\n        distX = (distX >= 0 ? 1 : -1) * nextWidth;\n        distY = (distY >= 0 ? 1 : -1) * nextHeight;\n    }\n    let width = Math.abs(distX);\n    let height = Math.abs(distY);\n\n    const maxWidth = distX < 0 ? startX - boundArea.left : boundArea.right - startX;\n    const maxHeight = distY < 0 ? startY - boundArea.top : boundArea.bottom - startY;\n\n    [width, height] = calculateBoundSize([width, height], [0, 0], [maxWidth, maxHeight], !!ratio);\n    distX = (distX >= 0 ? 1 : -1) * width;\n    distY = (distY >= 0 ? 1 : -1) * height;\n\n    const tx = Math.min(0, distX);\n    const ty = Math.min(0, distY);\n    const left = startX + tx;\n    const top = startY + ty;\n\n    return {\n        left,\n        top,\n        right: left + width,\n        bottom: top + height,\n        width,\n        height,\n    };\n}\n\nexport function getDefaultElementRect(el: HTMLElement | SVGElement) {\n    const rect = el.getBoundingClientRect();\n    const { left, top, width, height } = rect;\n\n    return {\n        pos1: [left, top],\n        pos2: [left + width, top],\n        pos3: [left, top + height],\n        pos4: [left + width, top + height],\n    };\n}\n\nexport function passTargets(\n    beforeTargets: Array<HTMLElement | SVGElement>,\n    afterTargets: Array<HTMLElement | SVGElement>,\n    continueSelectWithoutDeselect: boolean,\n) {\n    const {\n        list,\n        prevList,\n        added,\n        removed,\n        maintained,\n    } = diff(beforeTargets, afterTargets);\n\n    return [\n        ...added.map(index => list[index]),\n        ...removed.map(index => prevList[index]),\n        ...continueSelectWithoutDeselect ? maintained.map(([, nextIndex]) => list[nextIndex]) : [],\n    ];\n}\n","import styled from \"css-styled\";\nimport { SelectoOptions } from \"./types\";\n\nexport const injector = styled(`\n:host {\n    position: fixed;\n    display: none;\n    border: 1px solid #4af;\n    background: rgba(68, 170, 255, 0.5);\n    pointer-events: none;\n    will-change: transform;\n    z-index: 100;\n}\n`);\n\n/**\n * @memberof Selecto\n */\nexport const CLASS_NAME = `selecto-selection ${injector.className}`;\n\nexport const PROPERTIES = [\n    \"boundContainer\",\n    \"selectableTargets\",\n    \"selectByClick\",\n    \"selectFromInside\",\n    \"continueSelect\",\n    \"continueSelectWithoutDeselect\",\n    \"toggleContinueSelect\",\n    \"toggleContinueSelectWithoutDeselect\",\n    \"keyContainer\",\n    \"hitRate\",\n    \"scrollOptions\",\n    \"checkInput\",\n    \"preventDefault\",\n    \"ratio\",\n    \"getElementRect\",\n    \"preventDragFromInside\",\n    \"rootContainer\",\n    \"dragCondition\",\n    \"clickBySelectEnd\",\n] as const;\n/**\n * @memberof Selecto\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    \"dragContainer\",\n    \"cspNonce\",\n    \"preventClickEventOnDrag\",\n    \"preventClickEventOnDragStart\",\n    \"preventRightClick\",\n    ...PROPERTIES,\n] as const;\n\nexport const OPTION_TYPES: { [key in keyof SelectoOptions]: any } = {\n    boundContainer: null,\n    portalContainer: null,\n    container: null,\n    dragContainer: null,\n    selectableTargets: Array,\n    selectByClick: Boolean,\n    selectFromInside: Boolean,\n    continueSelect: Boolean,\n    toggleContinueSelect: Array,\n    toggleContinueSelectWithoutDeselect: Array,\n    keyContainer: null,\n    hitRate: Number,\n    scrollOptions: Object,\n    checkInput: Boolean,\n    preventDefault: Boolean,\n    cspNonce: String,\n    ratio: Number,\n    getElementRect: Function,\n    preventDragFromInside: Boolean,\n    rootContainer: Object,\n    dragCondition: Function,\n    clickBySelectEnd: Boolean,\n    continueSelectWithoutDeselect: Boolean,\n    preventClickEventOnDragStart: Boolean,\n    preventClickEventOnDrag: Boolean,\n};\n\n/**\n * @memberof Selecto\n */\nexport const EVENTS = [\n    \"dragStart\",\n    \"drag\",\n    \"dragEnd\",\n    \"selectStart\",\n    \"select\",\n    \"selectEnd\",\n    \"keydown\",\n    \"keyup\",\n    \"scroll\",\n] as const;\n\n/**\n * @memberof Selecto\n */\nexport const METHODS = [\n    \"clickTarget\",\n    \"getSelectableElements\",\n    \"setSelectedTargets\",\n    \"getElementPoints\",\n    \"getSelectedTargets\",\n    \"findSelectableTargets\",\n    \"triggerDragStart\",\n    \"checkScroll\",\n] as const;\n","import EventEmitter from \"@scena/event-emitter\";\nimport Gesto, { OnDrag, OnDragStart } from \"gesto\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport {\n    isObject,\n    camelize,\n    IObject,\n    addEvent,\n    removeEvent,\n    isArray,\n    isString,\n    between,\n    splitUnit,\n} from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport DragScroll from \"@scena/dragscroll\";\nimport KeyController, { getCombi } from \"keycon\";\nimport {\n    getAreaSize,\n    getOverlapPoints,\n    isInside,\n    fitPoints,\n} from \"overlap-area\";\nimport { getDistElementMatrix, calculateMatrixDist, createMatrix } from \"css-to-mat\";\nimport {\n    createElement,\n    h,\n    getClient,\n    diffValue,\n    getRect,\n    getDefaultElementRect,\n    passTargets,\n    elementFromPoint,\n    filterDuplicated,\n} from \"./utils\";\nimport {\n    SelectoOptions,\n    SelectoProperties,\n    OnDragEvent,\n    SelectoEvents,\n    Rect,\n    BoundContainer,\n    InnerGroup,\n} from \"./types\";\nimport { PROPERTIES, injector, CLASS_NAME } from \"./consts\";\n\n/**\n * Selecto.js is a component that allows you to select elements in the drag area using the mouse or touch.\n * @sort 1\n * @extends EventEmitter\n */\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const getter = camelize(`get ${property}`);\n    if (prototype[getter]) {\n        attributes.get = function get() {\n            return this[getter]();\n        };\n    } else {\n        attributes.get = function get() {\n            return this.options[property];\n        };\n    }\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function set(value) {\n            this[setter](value);\n        };\n    } else {\n        attributes.set = function set(value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\nclass Selecto extends EventEmitter<SelectoEvents> {\n    public options: SelectoOptions;\n    private target!: HTMLElement | SVGElement;\n    private dragContainer!: Element | Window | Element[];\n    private container!: HTMLElement;\n    private gesto!: Gesto;\n    private injectResult!: InjectResult;\n    private selectedTargets: Array<HTMLElement | SVGElement> = [];\n    private dragScroll: DragScroll = new DragScroll();\n    private keycon!: KeyController;\n    private _keydownContinueSelect: boolean;\n    private _keydownContinueSelectWithoutDeselection: boolean;\n    /**\n     *\n     */\n    constructor(options: Partial<SelectoOptions> = {}) {\n        super();\n        this.target = options.portalContainer;\n        this.container = options.container || document.body;\n        this.options = {\n            portalContainer: null,\n            container: null,\n            dragContainer: null,\n            selectableTargets: [],\n            selectByClick: true,\n            selectFromInside: true,\n            clickBySelectEnd: false,\n            hitRate: 100,\n            continueSelect: false,\n            continueSelectWithoutDeselect: false,\n            toggleContinueSelect: null,\n            toggleContinueSelectWithoutDeselect: null,\n            keyContainer: null,\n            scrollOptions: undefined,\n            checkInput: false,\n            preventDefault: false,\n            boundContainer: false,\n            preventDragFromInside: true,\n            dragCondition: null,\n            rootContainer: null,\n            getElementRect: getDefaultElementRect,\n            cspNonce: \"\",\n            ratio: 0,\n            ...options,\n        };\n        this.initElement();\n        this.initDragScroll();\n        this.setKeyController();\n    }\n    /**\n     * You can set the currently selected targets.\n     *\n     */\n    public setSelectedTargets(\n        selectedTargets: Array<HTMLElement | SVGElement>\n    ): this {\n        this.selectedTargets = selectedTargets;\n\n        return this;\n    }\n    /**\n     * You can get the currently selected targets.\n     */\n    public getSelectedTargets(): Array<HTMLElement | SVGElement> {\n        return this.selectedTargets;\n    }\n    /**\n     * `OnDragStart` is triggered by an external event.\n     * @param - external event\n     * @example\n     * import Selecto from \"selecto\";\n     *\n     * const selecto = new Selecto();\n     *\n     * window.addEventListener(\"mousedown\", e => {\n     *   selecto.triggerDragStart(e);\n     * });\n     */\n    public triggerDragStart(e: MouseEvent | TouchEvent) {\n        this.gesto.triggerDragStart(e);\n        return this;\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.keycon && this.keycon.destroy();\n        this.gesto.unset();\n        this.injectResult.destroy();\n        removeEvent(document, \"selectstart\", this._onDocumentSelectStart);\n\n        this.keycon = null;\n        this.gesto = null;\n        this.injectResult = null;\n        this.target = null;\n        this.container = null;\n        this.options = null;\n    }\n    public getElementPoints(target: HTMLElement | SVGElement) {\n        const getElementRect = this.getElementRect || getDefaultElementRect;\n        const info = getElementRect(target);\n        const points = [info.pos1, info.pos2, info.pos4, info.pos3];\n\n        if (getElementRect !== getDefaultElementRect) {\n            const rect = target.getBoundingClientRect();\n\n            return fitPoints(points, rect);\n        }\n        return points;\n    }\n    /**\n     * Get all elements set in `selectableTargets`.\n     */\n    public getSelectableElements() {\n        const selectableElements: Array<HTMLElement | SVGElement> = [];\n\n        this.options.selectableTargets.forEach((target) => {\n            if (isObject(target)) {\n                selectableElements.push(target);\n            } else {\n                const elements = [].slice.call(\n                    document.querySelectorAll(target)\n                );\n\n                elements.forEach((el) => {\n                    selectableElements.push(el);\n                });\n            }\n        });\n\n        return selectableElements;\n    }\n    /**\n     * If scroll occurs during dragging, you can manually call this method to check the position again.\n     */\n    public checkScroll() {\n        if (!this.gesto.isFlag()) {\n            return;\n        }\n        const scrollOptions = this.scrollOptions;\n\n        // If it is a scrolling position, pass drag\n        scrollOptions?.container && this.dragScroll.checkScroll({\n            inputEvent: this.gesto.getCurrentEvent(),\n            ...scrollOptions,\n        });\n    }\n    /**\n     * Find for selectableTargets again during drag event\n     */\n    public findSelectableTargets(data: any = this.gesto.getEventDatas()) {\n        const selectableTargets = this.getSelectableElements();\n        const selectablePoints = selectableTargets.map(\n            (target) => this.getElementPoints(target),\n        );\n        data.selectableTargets = selectableTargets;\n        data.selectablePoints = selectablePoints;\n        this._refreshGroups(data);\n    }\n    /**\n     * External click or mouse events can be applied to the selecto.\n     * @params - Extenal click or mouse event\n     * @params - Specify the clicked target directly.\n     */\n    public clickTarget(\n        e: MouseEvent | TouchEvent,\n        clickedTarget?: Element\n    ): this {\n        const { clientX, clientY } = getClient(e);\n        const dragEvent = {\n            data: {\n                selectFlag: false,\n            },\n            clientX,\n            clientY,\n            inputEvent: e,\n            isClick: true,\n            stop: () => {\n                return false;\n            },\n        } as any;\n        if (this._onDragStart(dragEvent, clickedTarget)) {\n            this._onDragEnd(dragEvent);\n        }\n        return this;\n    }\n    private setKeyController() {\n        const { keyContainer, toggleContinueSelect, toggleContinueSelectWithoutDeselect } = this.options;\n\n        if (this.keycon) {\n            this.keycon.destroy();\n            this.keycon = null;\n        }\n        if (toggleContinueSelect || toggleContinueSelectWithoutDeselect) {\n            this.keycon = new KeyController(keyContainer || window);\n            this.keycon\n                .keydown(this._onKeyDown)\n                .keyup(this._onKeyUp)\n                .on(\"blur\", this._onBlur);\n        }\n    }\n    private setKeyEvent() {\n        const { toggleContinueSelect, toggleContinueSelectWithoutDeselect } = this.options;\n        if ((!toggleContinueSelect && !toggleContinueSelectWithoutDeselect) || this.keycon) {\n            return;\n        }\n        this.setKeyController();\n    }\n    // with getter, setter property\n    private setKeyContainer(keyContainer: HTMLElement | Document | Window) {\n        const options = this.options;\n\n        diffValue(options.keyContainer, keyContainer, () => {\n            options.keyContainer = keyContainer;\n\n            this.setKeyController();\n        });\n    }\n    private getContinueSelect() {\n        const {\n            continueSelect,\n            toggleContinueSelect,\n        } = this.options;\n\n        if (!toggleContinueSelect || !this._keydownContinueSelect) {\n            return continueSelect;\n        }\n        return !continueSelect;\n    }\n    private getContinueSelectWithoutDeselect() {\n        const {\n            continueSelectWithoutDeselect,\n            toggleContinueSelectWithoutDeselect,\n        } = this.options;\n\n        if (!toggleContinueSelectWithoutDeselect || !this._keydownContinueSelectWithoutDeselection) {\n            return continueSelectWithoutDeselect;\n        }\n        return !continueSelectWithoutDeselect;\n    }\n    private setToggleContinueSelect(\n        toggleContinueSelect: string[][] | string[] | string\n    ) {\n        const options = this.options;\n\n        diffValue(options.toggleContinueSelect, toggleContinueSelect, () => {\n            options.toggleContinueSelect = toggleContinueSelect;\n\n            this.setKeyEvent();\n        });\n    }\n    private setToggleContinueSelectWithoutDeselect(\n        toggleContinueSelectWithoutDeselect: string[][] | string[] | string\n    ) {\n        const options = this.options;\n\n        diffValue(options.toggleContinueSelectWithoutDeselect, toggleContinueSelectWithoutDeselect, () => {\n            options.toggleContinueSelectWithoutDeselect = toggleContinueSelectWithoutDeselect;\n\n            this.setKeyEvent();\n        });\n    }\n    private setPreventDefault(value: boolean) {\n        this.gesto.options.preventDefault = value;\n    }\n    private setCheckInput(value: boolean) {\n        this.gesto.options.checkInput = value;\n    }\n    private initElement() {\n        this.target = createElement(\n            (<div className={CLASS_NAME}></div>) as any,\n            this.target,\n            this.container\n        );\n\n        const target = this.target;\n\n        const {\n            dragContainer,\n            checkInput,\n            preventDefault,\n            preventClickEventOnDragStart,\n            preventClickEventOnDrag,\n            preventRightClick = true,\n        } = this.options;\n        this.dragContainer =\n            typeof dragContainer === \"string\"\n                ? [].slice.call(document.querySelectorAll(dragContainer))\n                : dragContainer || (this.target.parentNode as any);\n        this.gesto = new Gesto(this.dragContainer, {\n            checkWindowBlur: true,\n            container: window,\n            checkInput,\n            preventDefault,\n            preventClickEventOnDragStart,\n            preventClickEventOnDrag,\n            preventRightClick,\n        }).on({\n            dragStart: this._onDragStart,\n            drag: this._onDrag,\n            dragEnd: this._onDragEnd,\n        });\n        addEvent(document, \"selectstart\", this._onDocumentSelectStart);\n\n        this.injectResult = injector.inject(target, {\n            nonce: this.options.cspNonce,\n        });\n    }\n    private hitTest(\n        selectRect: Rect,\n        clientX: number,\n        clientY: number,\n        data: any,\n    ) {\n        const { hitRate, selectByClick } = this.options;\n        const { left, top, right, bottom } = selectRect;\n        const innerGroups: Record<string | number, Record<string | number, InnerGroup>> = data.innerGroups;\n        const innerWidth = data.innerWidth;\n        const innerHeight = data.innerHeight;\n        const rectPoints = [\n            [left, top],\n            [right, top],\n            [right, bottom],\n            [left, bottom],\n        ];\n        const isHit = (points: number[][]) => {\n            const inArea = isInside([clientX, clientY], points);\n\n            if (selectByClick && inArea) {\n                return true;\n            }\n            const overlapPoints = getOverlapPoints(rectPoints, points);\n\n            if (!overlapPoints.length) {\n                return false;\n            }\n            const overlapSize = getAreaSize(overlapPoints);\n            const targetSize = getAreaSize(points);\n\n            const hitRateValue = splitUnit(`${hitRate}`);\n\n            if (hitRateValue.unit === \"px\") {\n                return overlapSize >= hitRateValue.value;\n            } else {\n                const rate = between(\n                    Math.round((overlapSize / targetSize) * 100),\n                    0,\n                    100\n                );\n\n                return rate >= Math.min(100, hitRateValue.value);\n            }\n        };\n        if (!innerGroups) {\n            const selectableTargets: Array<HTMLElement | SVGElement> = data.selectableTargets;\n            const selectablePoints: number[][][] = data.selectablePoints;\n\n            return selectableTargets.filter((_, i) => {\n                return isHit(selectablePoints[i]);\n            });\n        }\n        let selectedTargets: Array<HTMLElement | SVGElement> = [];\n        const minX = Math.floor(left / innerWidth);\n        const maxX = Math.floor(right / innerWidth);\n        const minY = Math.floor(top / innerHeight);\n        const maxY = Math.floor(bottom / innerHeight);\n\n        for (let x = minX; x <= maxX; ++x) {\n            const yGroups = innerGroups[x];\n\n            if (!yGroups) {\n                continue;\n            }\n            for (let y = minY; y <= maxY; ++y) {\n                const group = yGroups[y];\n\n                if (!group) {\n                    continue;\n                }\n                const { points, targets } = group;\n\n                points.forEach((nextPoints, i) => {\n                    if (isHit(nextPoints)) {\n                        selectedTargets.push(targets[i]);\n                    }\n                });\n            }\n        }\n        return filterDuplicated(selectedTargets);\n    }\n    private initDragScroll() {\n        this.dragScroll\n            .on(\"scroll\", ({ container, direction }) => {\n                this.emit(\"scroll\", {\n                    container,\n                    direction,\n                });\n            })\n            .on(\"move\", ({ offsetX, offsetY, inputEvent }) => {\n                const gesto = this.gesto;\n\n                if (!gesto || !gesto.isFlag()) {\n                    return;\n                }\n\n                const data = this.gesto.getEventDatas();\n                const boundArea = data.boundArea;\n\n                data.startX -= offsetX;\n                data.startY -= offsetY;\n                data.selectablePoints.forEach((points: number[][]) => {\n                    points.forEach((pos) => {\n                        pos[0] -= offsetX;\n                        pos[1] -= offsetY;\n                    });\n                });\n                this._refreshGroups(data);\n\n                boundArea.left -= offsetX;\n                boundArea.right -= offsetX;\n                boundArea.top -= offsetY;\n                boundArea.bottom -= offsetY;\n\n                this.gesto.scrollBy(\n                    offsetX,\n                    offsetY,\n                    inputEvent.inputEvent,\n                    false\n                );\n                this._checkSelected(this.gesto.getCurrentEvent());\n            });\n    }\n    private _select(\n        prevSelectedTargets: Array<HTMLElement | SVGElement>,\n        selectedTargets: Array<HTMLElement | SVGElement>,\n        rect: Rect,\n        e: OnDragEvent,\n        isStart?: boolean\n    ) {\n        const inputEvent = e.inputEvent;\n        const data = e.data;\n        const { added, removed, prevList, list } = diff(\n            prevSelectedTargets,\n            selectedTargets\n        );\n\n        this.selectedTargets = selectedTargets;\n\n        if (isStart) {\n            /**\n             * When the select(drag) starts, the selectStart event is called.\n             * @memberof Selecto\n             * @event selectStart\n             * @param {Selecto.OnSelect} - Parameters for the selectStart event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"selectStart\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * }).on(\"selectEnd\", e => {\n             *   e.afterAdded.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.afterRemoved.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.emit(\"selectStart\", {\n                selected: selectedTargets,\n                added: added.map((index) => list[index]),\n                removed: removed.map((index) => prevList[index]),\n                rect,\n                inputEvent,\n                data: data.data,\n            });\n        }\n        if (added.length || removed.length) {\n            /**\n             * When the select in real time, the select event is called.\n             * @memberof Selecto\n             * @event select\n             * @param {Selecto.OnSelect} - Parameters for the select event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"select\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.emit(\"select\", {\n                selected: selectedTargets,\n                added: added.map((index) => list[index]),\n                removed: removed.map((index) => prevList[index]),\n                rect,\n                inputEvent,\n                data: data.data,\n            });\n        }\n    }\n    private _selectEnd(\n        startSelectedTargets: Array<HTMLElement | SVGElement>,\n        startPassedTargets: Array<HTMLElement | SVGElement>,\n        rect: Rect,\n        e: OnDragEvent,\n    ) {\n        const { inputEvent, isDouble, data } = e;\n        const { added, removed, prevList, list } = diff(\n            startSelectedTargets,\n            this.selectedTargets\n        );\n        const {\n            added: afterAdded,\n            removed: afterRemoved,\n            prevList: afterPrevList,\n            list: afterList,\n        } = diff(startPassedTargets, this.selectedTargets);\n        const type = inputEvent && inputEvent.type;\n        const isDragStart = type === \"mousedown\" || type === \"touchstart\";\n\n        /**\n         * When the select(dragEnd or click) ends, the selectEnd event is called.\n         * @memberof Selecto\n         * @event selectEnd\n         * @param {Selecto.OnSelectEnd} - Parameters for the selectEnd event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"selectStart\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * }).on(\"selectEnd\", e => {\n         *   e.afterAdded.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.afterRemoved.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.emit(\"selectEnd\", {\n            selected: this.selectedTargets,\n            added: added.map((index) => list[index]),\n            removed: removed.map((index) => prevList[index]),\n            afterAdded: afterAdded.map((index) => afterList[index]),\n            afterRemoved: afterRemoved.map((index) => afterPrevList[index]),\n            isDragStart,\n            isClick: !!e.isClick,\n            isDouble: !!isDouble,\n            rect,\n            inputEvent,\n            data: data.data,\n        });\n    }\n    private _onDragStart = (e: OnDragStart, clickedTarget?: Element) => {\n        const { data, clientX, clientY, inputEvent } = e;\n        const {\n            selectFromInside,\n            selectByClick,\n            rootContainer,\n            boundContainer,\n            preventDragFromInside = true,\n            clickBySelectEnd,\n            dragCondition,\n        } = this.options;\n\n        if (dragCondition && !dragCondition(e)) {\n            e.stop();\n            return;\n        }\n        data.data = {};\n        data.innerWidth = window.innerWidth;\n        data.innerHeight = window.innerHeight;\n        this.findSelectableTargets(data);\n        data.startSelectedTargets = this.selectedTargets;\n        data.scaleMatrix = createMatrix();\n        data.containerX = 0;\n        data.containerY = 0;\n\n\n        let boundArea = {\n            left: -Infinity,\n            top: -Infinity,\n            right: Infinity,\n            bottom: Infinity,\n        };\n        if (rootContainer) {\n            const containerRect = this.container.getBoundingClientRect();\n\n            data.containerX = containerRect.left;\n            data.containerY = containerRect.top;\n            data.scaleMatrix = getDistElementMatrix(this.container, rootContainer);\n        }\n\n        if (boundContainer) {\n            const boundInfo: Required<BoundContainer> =\n                isObject(boundContainer) && \"element\" in boundContainer\n                    ? {\n                        left: true,\n                        top: true,\n                        bottom: true,\n                        right: true,\n                        ...boundContainer,\n                    }\n                    : {\n                        element: boundContainer,\n                        left: true,\n                        top: true,\n                        bottom: true,\n                        right: true,\n                    };\n            const boundElement = boundInfo.element;\n            let rectElement: HTMLElement;\n\n            if (boundElement) {\n                if (isString(boundElement)) {\n                    rectElement = document.querySelector(boundElement);\n                } else if (boundElement === true) {\n                    rectElement = this.container;\n                } else {\n                    rectElement = boundElement;\n                }\n                const rect = rectElement.getBoundingClientRect();\n\n                if (boundInfo.left) {\n                    boundArea.left = rect.left;\n                }\n                if (boundInfo.top) {\n                    boundArea.top = rect.top;\n                }\n                if (boundInfo.right) {\n                    boundArea.right = rect.right;\n                }\n                if (boundInfo.bottom) {\n                    boundArea.bottom = rect.bottom;\n                }\n            }\n        }\n\n        data.boundArea = boundArea;\n\n        const hitRect = {\n            left: clientX,\n            top: clientY,\n            right: clientX,\n            bottom: clientY,\n            width: 0,\n            height: 0,\n        };\n        let firstPassedTargets: Array<HTMLElement | SVGElement> = [];\n\n        if (!selectFromInside || (selectByClick && !clickBySelectEnd)) {\n            const pointTarget = this._findElement(\n                clickedTarget || elementFromPoint(clientX, clientY),\n                data.selectableTargets,\n            );\n            firstPassedTargets = pointTarget ? [pointTarget] : [];\n        }\n        const hasInsideTargets = firstPassedTargets.length > 0;\n        const isPreventSelect = !selectFromInside && hasInsideTargets;\n\n        // prevent drag from inside when selectByClick is false\n        if (isPreventSelect && !selectByClick) {\n            e.stop();\n            return false;\n        }\n\n        const type = inputEvent.type;\n        const isTrusted = type === \"mousedown\" || type === \"touchstart\";\n        /**\n         * When the drag starts (triggers on mousedown or touchstart), the dragStart event is called.\n         * Call the stop () function if you have a specific element or don't want to raise a select\n         * @memberof Selecto\n         * @event dragStart\n         * @param {OnDragStart} - Parameters for the dragStart event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"dragStart\", e => {\n         *   if (e.inputEvent.target.tagName === \"SPAN\") {\n         *     e.stop();\n         *   }\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        const result =\n            !(e as any).isClick && isTrusted\n                ? this.emit(\"dragStart\", { ...e, data: data.data })\n                : true;\n\n        if (!result) {\n            e.stop();\n            return false;\n        }\n\n        if (this.continueSelect) {\n            firstPassedTargets = passTargets(\n                this.selectedTargets,\n                firstPassedTargets,\n                this.continueSelectWithoutDeselect,\n            );\n            data.startPassedTargets = this.selectedTargets;\n        } else {\n            data.startPassedTargets = [];\n        }\n        this._select(\n            this.selectedTargets,\n            firstPassedTargets,\n            hitRect,\n            e,\n            true\n        );\n        data.startX = clientX;\n        data.startY = clientY;\n        data.selectFlag = false;\n        data.preventDragFromInside = false;\n\n        const offsetPos = calculateMatrixDist(data.scaleMatrix, [\n            clientX - data.containerX,\n            clientY - data.containerY,\n        ]);\n        data.boundsArea = this.target.style.cssText += `position: ${rootContainer ? \"absolute\" : \"fixed\"};`\n            + `left:0px;top:0px;`\n            + `transform: translate(${offsetPos[0]}px, ${offsetPos[1]}px)`;\n\n        if (isPreventSelect && selectByClick && !clickBySelectEnd) {\n            inputEvent.preventDefault();\n\n            // prevent drag from inside when selectByClick is true and force call `selectEnd`\n            if (preventDragFromInside) {\n                this._selectEnd(\n                    data.startSelectedTargets,\n                    data.startPassedTargets,\n                    hitRect,\n                    e\n                );\n                data.preventDragFromInside = true;\n            }\n        } else {\n            data.selectFlag = true;\n            if (type === \"touchstart\") {\n                inputEvent.preventDefault();\n            }\n            const { scrollOptions } = this.options;\n            if (scrollOptions && scrollOptions.container) {\n                this.dragScroll.dragStart(e, scrollOptions);\n            }\n            if (clickBySelectEnd) {\n                data.selectFlag = false;\n                e.preventDrag();\n            }\n        }\n        return true;\n    };\n    private _checkSelected(e: any, rect = getRect(e, this.options.ratio)) {\n        const { data, inputEvent } = e;\n        const { top, left, width, height } = rect;\n        const selectFlag = data.selectFlag;\n        const {\n            containerX,\n            containerY,\n            scaleMatrix,\n        } = data;\n        const offsetPos = calculateMatrixDist(scaleMatrix, [\n            left - containerX,\n            top - containerY,\n        ]);\n        const offsetSize = calculateMatrixDist(scaleMatrix, [\n            width,\n            height,\n        ]);\n        let prevSelectedTargets: Array<HTMLElement | SVGElement> = [];\n        let selectedTargets: Array<HTMLElement | SVGElement> = [];\n        if (selectFlag) {\n            this.target.style.cssText +=\n                `display: block;` +\n                `left:0px;top:0px;` +\n                `transform: translate(${offsetPos[0]}px, ${offsetPos[1]}px);` +\n                `width:${offsetSize[0]}px;height:${offsetSize[1]}px;`;\n\n            const passedTargets = this.hitTest(\n                rect,\n                data.startX,\n                data.startY,\n                data,\n            );\n            prevSelectedTargets = this.selectedTargets;\n            selectedTargets = passTargets(\n                data.startPassedTargets,\n                passedTargets,\n                this.continueSelect && this.continueSelectWithoutDeselect,\n            );\n\n            this.selectedTargets = selectedTargets;\n        }\n        /**\n         * When the drag, the drag event is called.\n         * Call the stop () function if you have a specific element or don't want to raise a select\n         * @memberof Selecto\n         * @event drag\n         * @param {OnDrag} - Parameters for the drag event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"drag\", e => {\n         *   e.stop();\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        const result = this.emit(\"drag\", {\n            ...e,\n            data: data.data,\n            isSelect: selectFlag,\n            rect,\n        });\n        if (result === false) {\n            this.target.style.cssText += \"display: none;\";\n            e.stop();\n            return;\n        }\n\n        if (selectFlag) {\n            this._select(prevSelectedTargets, selectedTargets, rect, e);\n        }\n    }\n    private _onDrag = (e: OnDrag) => {\n        if (e.data.selectFlag) {\n            const scrollOptions = this.scrollOptions;\n\n            // If it is a scrolling position, pass drag\n            if (scrollOptions?.container && this.dragScroll.drag(e, scrollOptions)) {\n                return;\n            }\n        }\n        this._checkSelected(e);\n    };\n    private _onDragEnd = (e: OnDragEvent) => {\n        const { data, inputEvent } = e;\n        const rect = getRect(e, this.options.ratio);\n        const selectFlag = data.selectFlag;\n\n        /**\n         * When the drag ends (triggers on mouseup or touchend after drag), the dragEnd event is called.\n         * @memberof Selecto\n         * @event dragEnd\n         * @param {OnDragEnd} - Parameters for the dragEnd event\n         */\n        if (inputEvent) {\n            this.emit(\"dragEnd\", {\n                isDouble: !!e.isDouble,\n                isClick: !!e.isClick,\n                isDrag: false,\n                isSelect: selectFlag,\n                ...e,\n                data: data.data,\n                rect,\n            });\n        }\n        this.target.style.cssText += \"display: none;\";   \n        if (selectFlag) {\n            data.selectFlag = false;\n            this.dragScroll.dragEnd();\n        } else if (this.selectByClick && this.clickBySelectEnd) {\n            // only clickBySelectEnd\n            const pointTarget = this._findElement(\n                elementFromPoint(e.clientX, e.clientY),\n                data.selectableTargets,\n            );\n            this._select(this.selectedTargets, pointTarget ? [pointTarget] : [], rect, e);\n        }\n        if (!data.preventDragFromInside) {\n            this._selectEnd(\n                data.startSelectedTargets,\n                data.startPassedTargets,\n                rect,\n                e\n            );\n        }\n    };\n    private _sameCombiKey(e: any, keys: string | string[] | string[][], isKeyup?: boolean) {\n        if (!keys) {\n            return false;\n        }\n        const combi = getCombi(e.inputEvent, e.key);\n        const nextKeys = [].concat(keys);\n        const toggleKeys = isArray(nextKeys[0]) ? nextKeys : [nextKeys];\n\n        if (isKeyup) {\n            const singleKey = e.key;\n\n            return toggleKeys.some((keys) =>\n                keys.some((key) => key === singleKey)\n            );\n        }\n        return toggleKeys.some((keys) =>\n            keys.every((key) => combi.indexOf(key) > -1)\n        );\n    }\n    private _onKeyDown = (e: any) => {\n        const options = this.options;\n        let isKeyDown = false;\n\n        if (!this._keydownContinueSelect) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelect);\n\n            this._keydownContinueSelect = result;\n            isKeyDown = result;\n        }\n        if (!this._keydownContinueSelectWithoutDeselection) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelectWithoutDeselect);\n\n            this._keydownContinueSelectWithoutDeselection = result;\n            isKeyDown = isKeyDown || result;\n        }\n        if (!isKeyDown) {\n            return;\n        }\n        /**\n         * When you keydown the key you specified in toggleContinueSelect, the keydown event is called.\n         * @memberof Selecto\n         * @event keydown\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.emit(\"keydown\", {\n            keydownContinueSelect: this._keydownContinueSelect,\n            keydownContinueSelectWithoutDeselection: this._keydownContinueSelectWithoutDeselection,\n        });\n    };\n    private _onKeyUp = (e: any) => {\n        const options = this.options;\n        let isKeyUp = false;\n\n        if (this._keydownContinueSelect) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelect, true);\n            this._keydownContinueSelect = !result;\n\n            isKeyUp = result;\n        }\n        if (this._keydownContinueSelectWithoutDeselection) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelectWithoutDeselect, true);\n            this._keydownContinueSelectWithoutDeselection = !result;\n\n            isKeyUp = isKeyUp || result;\n        }\n        if (!isKeyUp) {\n            return;\n        }\n\n        /**\n         * When you keyup the key you specified in toggleContinueSelect, the keyup event is called.\n         * @memberof Selecto\n         * @event keyup\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.emit(\"keyup\", {\n            keydownContinueSelect: this._keydownContinueSelect,\n            keydownContinueSelectWithoutDeselection: this._keydownContinueSelectWithoutDeselection,\n        });\n    };\n    private _onBlur = () => {\n        if (this._keydownContinueSelect || this._keydownContinueSelectWithoutDeselection) {\n            this._keydownContinueSelect = false;\n            this._keydownContinueSelectWithoutDeselection = false;\n            this.emit(\"keyup\", {\n                keydownContinueSelect: this._keydownContinueSelect,\n                keydownContinueSelectWithoutDeselection: this._keydownContinueSelectWithoutDeselection,\n            });\n        }\n    };\n    private _onDocumentSelectStart = (e: any) => {\n        if (!this.gesto.isFlag()) {\n            return;\n        }\n        let dragContainer = this.dragContainer;\n\n        if (dragContainer === window) {\n            dragContainer = document.documentElement;\n        }\n        const containers =\n            dragContainer instanceof Element\n                ? [dragContainer]\n                : ([].slice.call(dragContainer) as Element[]);\n        const target = e.target;\n\n        containers.some((container) => {\n            if (container === target || container.contains(target)) {\n                e.preventDefault();\n                return true;\n            }\n        });\n    };\n    private _findElement(clickedTarget: Element | null, selectableTargets: Array<Element>): HTMLElement | SVGElement {\n        let pointTarget = clickedTarget;\n\n        while (pointTarget) {\n            if (selectableTargets.indexOf(pointTarget) > -1) {\n                break;\n            }\n            pointTarget = pointTarget.parentElement;\n        }\n        return pointTarget as any;\n    }\n    private _refreshGroups(data: any) {\n        const innerWidth = data.innerWidth;\n        const innerHeight = data.innerHeight;\n\n        if (!innerWidth || !innerHeight) {\n            data.innerGroups = null;\n        } else {\n            const selectableTargets: Array<HTMLElement | SVGElement> = data.selectableTargets;\n            const selectablePoints: number[][][] = data.selectablePoints;\n            const groups: Record<string | number, Record<string | number, InnerGroup>> = {};\n\n            selectablePoints.forEach((points, i) => {\n                let minX = Infinity;\n                let maxX = -Infinity;\n                let minY = Infinity;\n                let maxY = -Infinity;\n\n                points.forEach(pos => {\n                    const x = Math.floor(pos[0] / innerWidth);\n                    const y = Math.floor(pos[1] / innerHeight);\n    \n                    minX = Math.min(x, minX);\n                    maxX = Math.max(x, maxX);\n                    minY = Math.min(y, minY);\n                    maxY = Math.max(y, maxY);\n                });\n\n                for (let x = minX; x <= maxX; ++x) {\n                    for (let y = minY; y <= maxY; ++y) {\n                        groups[x] = groups[x] || {};\n                        groups[x][y] = groups[x][y] || {\n                            points: [],\n                            targets: [],\n                        };\n        \n                        const { targets, points: groupPoints } = groups[x][y];\n        \n                        targets.push(selectableTargets[i]);\n                        groupPoints.push(points);\n                    }\n                }\n            });\n\n            data.innerGroups = groups;\n        }\n    }\n}\n\ninterface Selecto extends SelectoProperties { }\n\nexport default Selecto;\n","import SelectoManager from \"./SelectoManager\";\n\nclass Selecto extends SelectoManager {\n\n}\nexport default Selecto;\n"],"names":["getClient","e","touch","touches","changedTouches","clientX","clientY","filterDuplicated","arr","Map","filter","value","index","indexOf","map","has","set","elementFromPoint","document","createElement","jsx","prevTarget","container","tag","children","attributes","className","style","el","name","setAttribute","elChildren","forEach","child","i","split","hasClass","addClass","elStyle","appendChild","h","attrs","_i","_a","_b","_c","diffValue","prev","cur","func","getRect","ratio","boundArea","datas","distX","distY","_d","startX","startY","nextHeight","Math","sqrt","nextWidth","width","abs","height","maxWidth","left","right","maxHeight","top","bottom","calculateBoundSize","tx","min","ty","getDefaultElementRect","rect","getBoundingClientRect","pos1","pos2","pos3","pos4","passTargets","beforeTargets","afterTargets","continueSelectWithoutDeselect","diff","list","prevList","added","removed","maintained","nextIndex","injector","styled","CLASS_NAME","PROPERTIES","OPTIONS","__spreadArray","OPTION_TYPES","boundContainer","portalContainer","dragContainer","selectableTargets","Array","selectByClick","Boolean","selectFromInside","continueSelect","toggleContinueSelect","toggleContinueSelectWithoutDeselect","keyContainer","hitRate","Number","scrollOptions","Object","checkInput","preventDefault","cspNonce","String","getElementRect","Function","preventDragFromInside","rootContainer","dragCondition","clickBySelectEnd","preventClickEventOnDragStart","preventClickEventOnDrag","EVENTS","METHODS","__extends","options","_super","_this","DragScroll","clickedTarget","data","inputEvent","stop","innerWidth","window","innerHeight","findSelectableTargets","startSelectedTargets","selectedTargets","scaleMatrix","createMatrix","containerX","containerY","Infinity","containerRect","getDistElementMatrix","boundInfo","isObject","element","boundElement","rectElement","isString","querySelector","hitRect","firstPassedTargets","pointTarget","_findElement","hasInsideTargets","length","isPreventSelect","type","isTrusted","result","isClick","emit","startPassedTargets","_select","selectFlag","offsetPos","calculateMatrixDist","boundsArea","target","cssText","_selectEnd","dragScroll","dragStart","preventDrag","drag","_checkSelected","isDouble","isDrag","isSelect","dragEnd","isKeyDown","_keydownContinueSelect","_sameCombiKey","_keydownContinueSelectWithoutDeselection","keydownContinueSelect","keydownContinueSelectWithoutDeselection","isKeyUp","gesto","isFlag","documentElement","containers","Element","slice","call","some","contains","body","undefined","initElement","initDragScroll","setKeyController","triggerDragStart","off","keycon","destroy","unset","injectResult","removeEvent","_onDocumentSelectStart","info","points","fitPoints","selectableElements","push","elements","querySelectorAll","checkScroll","getCurrentEvent","getEventDatas","getSelectableElements","selectablePoints","getElementPoints","_refreshGroups","dragEvent","_onDragStart","_onDragEnd","KeyController","keydown","_onKeyDown","keyup","_onKeyUp","on","_onBlur","setKeyEvent","preventRightClick","parentNode","Gesto","checkWindowBlur","_onDrag","addEvent","inject","nonce","selectRect","innerGroups","rectPoints","isHit","inArea","isInside","overlapPoints","getOverlapPoints","overlapSize","getAreaSize","targetSize","hitRateValue","splitUnit","unit","rate","between","round","selectablePoints_1","_","minX","floor","maxX","minY","maxY","x","yGroups","y","group","targets","nextPoints","direction","offsetX","offsetY","pos","scrollBy","prevSelectedTargets","isStart","selected","afterAdded","afterRemoved","afterPrevList","afterList","isDragStart","offsetSize","passedTargets","hitTest","keys","isKeyup","combi","getCombi","key","nextKeys","concat","toggleKeys","isArray","singleKey_1","every","parentElement","selectableTargets_1","groups_1","max","groupPoints","Selecto","Properties","prototype","property","enumerable","configurable","get","getter","camelize","setter","defineProperty","EventEmitter","SelectoManager"],"mappings":"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"}