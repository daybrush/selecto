{"version":3,"file":"selecto.cjs.js","sources":["../src/utils.ts","../src/consts.ts","../src/SelectoManager.tsx","../src/Selecto.tsx","../src/index.cjs.ts"],"sourcesContent":["import type { Hypertext, Point, Rect } from \"./types\";\nimport { IObject, addClass, hasClass, calculateBoundSize, getDist } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport { getMinMaxs } from \"overlap-area\";\n\nexport function getClient(e: MouseEvent | TouchEvent) {\n    if (\"touches\" in e) {\n        const touch = e.touches[0] || e.changedTouches[0];\n\n        return {\n            clientX: touch.clientX,\n            clientY: touch.clientY,\n        };\n    } else {\n        return {\n            clientX: e.clientX,\n            clientY: e.clientY,\n        };\n    }\n}\nexport function filterDuplicated<T>(arr: T[]): T[] {\n    if (typeof Map === \"undefined\") {\n        return arr.filter((value, index) => {\n            return arr.indexOf(value) === index;\n        });\n    }\n    const map = new Map<T, true>();\n    return arr.filter(value => {\n        if (map.has(value)) {\n            return false;\n        }\n        map.set(value, true);\n        return true;\n    });\n}\nexport function elementFromPoint(clientX: number, clientY: number): HTMLElement | SVGElement | null {\n    return (document.elementFromPoint && document.elementFromPoint(clientX, clientY)) as any || null;\n}\nexport function createElement(\n    jsx: Hypertext,\n    prevTarget?: HTMLElement | SVGElement,\n    container?: HTMLElement | SVGElement,\n) {\n    const { tag, children, attributes, className, style } = jsx;\n    const el = prevTarget || document.createElement(tag) as HTMLElement | SVGElement;\n\n    for (const name in attributes) {\n        el.setAttribute(name, attributes[name]);\n    }\n    const elChildren = el.children;\n    children.forEach((child, i) => {\n        createElement(child, elChildren[i] as HTMLElement | SVGElement, el);\n    });\n    if (className) {\n        className.split(\" \").forEach(name => {\n            if (!hasClass(el, name)) {\n                addClass(el, name);\n            }\n        });\n    }\n    if (style) {\n        const elStyle = el.style;\n        for (const name in style) {\n            elStyle[name] = style[name];\n        }\n    }\n    if (!prevTarget && container) {\n        container.appendChild(el);\n    }\n    return el;\n}\nexport function h(\n    tag: string,\n    attrs: IObject<any>,\n    ...children: Hypertext[]\n): Hypertext {\n    const {\n        className = \"\",\n        style = {},\n        ...attributes\n    } = attrs || {};\n    return {\n        tag,\n        className,\n        style,\n        attributes,\n        children,\n    };\n}\n\nexport function diffValue<T>(prev: T, cur: T, func: (prev: T, cur: T) => void) {\n    if (prev !== cur) {\n        func(prev, cur);\n    }\n}\nexport function isFastInside(point: number[], points: number[][]) {\n    const { minX, minY, maxX, maxY } = getMinMaxs(points);\n    const [x, y] = point;\n\n    return minX <= x && x <= maxX && minY <= y && y <= maxY;\n}\nexport function getFastOverlapPoints(points1: number[][], points2: number[][]) {\n    const {\n        minX: minX1,\n        minY: minY1,\n        maxX: maxX1,\n        maxY: maxY1,\n    } = getMinMaxs(points1);\n    const {\n        minX: minX2,\n        minY: minY2,\n        maxX: maxX2,\n        maxY: maxY2,\n    } = getMinMaxs(points2);\n\n    if (maxX2 < minX1 || maxX1 < minX2 || maxY2 < minY1 || maxY1 < minY2) {\n        return [];\n    }\n    const width = Math.min(maxX2 - minX1, maxX1 - minX2);\n    const height = Math.min(maxY2 - minY1, maxY1 - minY2);\n\n    return [\n        [0, 0],\n        [width, 0],\n        [width, height],\n        [0, height],\n    ];\n}\nexport function getRect(\n    e: any, ratio: number,\n    boundArea = e.data.boundArea,\n): Rect {\n    let {\n        distX = 0,\n        distY = 0,\n    } = e;\n    const { startX, startY } = e.data;\n\n    if (ratio > 0) {\n        const nextHeight = Math.sqrt((distX * distX + distY * distY) / (1 + ratio * ratio));\n        const nextWidth = ratio * nextHeight;\n\n        distX = (distX >= 0 ? 1 : -1) * nextWidth;\n        distY = (distY >= 0 ? 1 : -1) * nextHeight;\n    }\n    let width = Math.abs(distX);\n    let height = Math.abs(distY);\n\n    const maxWidth = distX < 0 ? startX - boundArea.left : boundArea.right - startX;\n    const maxHeight = distY < 0 ? startY - boundArea.top : boundArea.bottom - startY;\n\n    [width, height] = calculateBoundSize([width, height], [0, 0], [maxWidth, maxHeight], !!ratio);\n    distX = (distX >= 0 ? 1 : -1) * width;\n    distY = (distY >= 0 ? 1 : -1) * height;\n\n    const tx = Math.min(0, distX);\n    const ty = Math.min(0, distY);\n    const left = startX + tx;\n    const top = startY + ty;\n\n    return {\n        left,\n        top,\n        right: left + width,\n        bottom: top + height,\n        width,\n        height,\n    };\n}\n\nexport function getDefaultElementRect(el: HTMLElement | SVGElement): Point {\n    const rect = el.getBoundingClientRect();\n    const { left, top, width, height } = rect;\n\n    return {\n        pos1: [left, top],\n        pos2: [left + width, top],\n        pos3: [left, top + height],\n        pos4: [left + width, top + height],\n    };\n}\n\nexport function passTargets(\n    beforeTargets: Array<HTMLElement | SVGElement>,\n    afterTargets: Array<HTMLElement | SVGElement>,\n    continueSelectWithoutDeselect: boolean,\n) {\n    const {\n        list,\n        prevList,\n        added,\n        removed,\n        maintained,\n    } = diff(beforeTargets, afterTargets);\n\n    return [\n        ...added.map(index => list[index]),\n        ...removed.map(index => prevList[index]),\n        ...continueSelectWithoutDeselect ? maintained.map(([, nextIndex]) => list[nextIndex]) : [],\n    ];\n}\n\nexport function getLineSize(points: number[][]) {\n    let size = 0;\n    const length = points.length;\n\n    for (let i = 1; i < length; ++i) {\n        size = Math.max(getDist(points[i], points[i - 1]), size);\n    }\n\n    return size;\n}\n","import styled from \"css-styled\";\nimport { SelectoOptions } from \"./types\";\n\nexport const injector = styled(`\n:host {\n    position: fixed;\n    display: none;\n    border: 1px solid #4af;\n    background: rgba(68, 170, 255, 0.5);\n    pointer-events: none;\n    will-change: transform;\n    z-index: 100;\n}\n`);\n\n/**\n * @memberof Selecto\n */\nexport const CLASS_NAME = `selecto-selection ${injector.className}`;\n\nexport const PROPERTIES = [\n    \"boundContainer\",\n    \"selectableTargets\",\n    \"selectByClick\",\n    \"selectFromInside\",\n    \"continueSelect\",\n    \"continueSelectWithoutDeselect\",\n    \"toggleContinueSelect\",\n    \"toggleContinueSelectWithoutDeselect\",\n    \"keyContainer\",\n    \"hitRate\",\n    \"scrollOptions\",\n    \"checkInput\",\n    \"preventDefault\",\n    \"ratio\",\n    \"getElementRect\",\n    \"preventDragFromInside\",\n    \"rootContainer\",\n    \"dragCondition\",\n    \"clickBySelectEnd\",\n    \"checkOverflow\",\n    \"innerScrollOptions\",\n] as const;\n/**\n * @memberof Selecto\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    \"dragContainer\",\n    \"cspNonce\",\n    \"preventClickEventOnDrag\",\n    \"preventClickEventOnDragStart\",\n    \"preventRightClick\",\n    ...PROPERTIES,\n] as const;\n\nexport const OPTION_TYPES: { [key in keyof SelectoOptions]: any } = {\n    boundContainer: null,\n    portalContainer: null,\n    container: null,\n    dragContainer: null,\n    selectableTargets: Array,\n    selectByClick: Boolean,\n    selectFromInside: Boolean,\n    continueSelect: Boolean,\n    toggleContinueSelect: Array,\n    toggleContinueSelectWithoutDeselect: Array,\n    keyContainer: null,\n    hitRate: Number,\n    scrollOptions: Object,\n    checkInput: Boolean,\n    preventDefault: Boolean,\n    cspNonce: String,\n    ratio: Number,\n    getElementRect: Function,\n    preventDragFromInside: Boolean,\n    rootContainer: Object,\n    dragCondition: Function,\n    clickBySelectEnd: Boolean,\n    continueSelectWithoutDeselect: Boolean,\n    preventClickEventOnDragStart: Boolean,\n    preventClickEventOnDrag: Boolean,\n    checkOverflow: Boolean,\n    innerScrollOptions: Object,\n};\n\n/**\n * @memberof Selecto\n */\nexport const EVENTS = [\n    \"dragStart\",\n    \"drag\",\n    \"dragEnd\",\n    \"selectStart\",\n    \"select\",\n    \"selectEnd\",\n    \"keydown\",\n    \"keyup\",\n    \"scroll\",\n    \"innerScroll\",\n] as const;\n\n/**\n * @memberof Selecto\n */\nexport const METHODS = [\n    \"clickTarget\",\n    \"getSelectableElements\",\n    \"setSelectedTargets\",\n    \"getElementPoints\",\n    \"getSelectedTargets\",\n    \"findSelectableTargets\",\n    \"triggerDragStart\",\n    \"checkScroll\",\n    \"selectTargetsByPoints\",\n    \"setSelectedTargetsByPoints\",\n] as const;\n","import EventEmitter from \"@scena/event-emitter\";\nimport Gesto, { OnDrag, OnDragStart } from \"gesto\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport {\n    isObject,\n    camelize,\n    IObject,\n    addEvent,\n    removeEvent,\n    isArray,\n    isString,\n    between,\n    splitUnit,\n    isFunction,\n} from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport DragScroll from \"@scena/dragscroll\";\nimport KeyController, { getCombi } from \"keycon\";\nimport {\n    getAreaSize,\n    getOverlapPoints,\n    isInside,\n    fitPoints,\n} from \"overlap-area\";\nimport { getDistElementMatrix, calculateMatrixDist, createMatrix } from \"css-to-mat\";\nimport {\n    createElement,\n    h,\n    getClient,\n    diffValue,\n    getRect,\n    getDefaultElementRect,\n    passTargets,\n    elementFromPoint,\n    filterDuplicated,\n    getLineSize,\n} from \"./utils\";\nimport {\n    SelectoOptions,\n    SelectoProperties,\n    OnDragEvent,\n    SelectoEvents,\n    Rect,\n    BoundContainer,\n    SelectedTargets,\n    SelectedTargetsWithRect,\n    InnerParentInfo,\n} from \"./types\";\nimport { PROPERTIES, injector, CLASS_NAME } from \"./consts\";\n\n/**\n * Selecto.js is a component that allows you to select elements in the drag area using the mouse or touch.\n * @sort 1\n * @extends EventEmitter\n */\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const getter = camelize(`get ${property}`);\n    if (prototype[getter]) {\n        attributes.get = function get() {\n            return this[getter]();\n        };\n    } else {\n        attributes.get = function get() {\n            return this.options[property];\n        };\n    }\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function set(value) {\n            this[setter](value);\n        };\n    } else {\n        attributes.set = function set(value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\nclass Selecto extends EventEmitter<SelectoEvents> {\n    public options: SelectoOptions;\n    private target!: HTMLElement | SVGElement;\n    private dragContainer!: Element | Window | Element[];\n    private container!: HTMLElement;\n    private gesto!: Gesto;\n    private injectResult!: InjectResult;\n    private selectedTargets: Array<HTMLElement | SVGElement> = [];\n    private dragScroll: DragScroll = new DragScroll();\n    private keycon!: KeyController;\n    private _keydownContinueSelect: boolean;\n    private _keydownContinueSelectWithoutDeselection: boolean;\n    /**\n     *\n     */\n    constructor(options: Partial<SelectoOptions> = {}) {\n        super();\n        this.target = options.portalContainer;\n        let container = options.container;\n        this.options = {\n            portalContainer: null,\n            container: null,\n            dragContainer: null,\n            selectableTargets: [],\n            selectByClick: true,\n            selectFromInside: true,\n            clickBySelectEnd: false,\n            hitRate: 100,\n            continueSelect: false,\n            continueSelectWithoutDeselect: false,\n            toggleContinueSelect: null,\n            toggleContinueSelectWithoutDeselect: null,\n            keyContainer: null,\n            scrollOptions: undefined,\n            checkInput: false,\n            preventDefault: false,\n            boundContainer: false,\n            preventDragFromInside: true,\n            dragCondition: null,\n            rootContainer: null,\n            checkOverflow: false,\n            innerScrollOptions: false,\n            getElementRect: getDefaultElementRect,\n            cspNonce: \"\",\n            ratio: 0,\n            ...options,\n        };\n        const portalContainer = this.options.portalContainer;\n\n        if (portalContainer) {\n            container = portalContainer.parentElement;\n        }\n        this.container = container || document.body;\n        this.initElement();\n        this.initDragScroll();\n        this.setKeyController();\n    }\n    /**\n     * You can set the currently selected targets.\n     * selectByClick, continueSelect, and continueSelectWithoutDeselect are not applied.\n     */\n    public setSelectedTargets(\n        selectedTargets: Array<HTMLElement | SVGElement>\n    ): SelectedTargets {\n        const beforeSelected = this.selectedTargets;\n        const { added, removed, prevList, list } = diff(\n            beforeSelected,\n            selectedTargets\n        );\n        this.selectedTargets = selectedTargets;\n\n        return {\n            added: added.map(index => list[index]),\n            removed: removed.map(index => prevList[index]),\n            beforeSelected,\n            selected: selectedTargets,\n        };\n    }\n    /**\n     * You can set the currently selected targets by points\n     * selectByClick, continueSelect, and continueSelectWithoutDeselect are not applied.\n     */\n    public setSelectedTargetsByPoints(\n        point1: number[],\n        point2: number[],\n    ): SelectedTargetsWithRect {\n        const left = Math.min(point1[0], point2[0]);\n        const top = Math.min(point1[1], point2[1]);\n        const right = Math.max(point1[0], point2[0]);\n        const bottom = Math.max(point1[1], point2[1]);\n        const rect: Rect = {\n            left,\n            top,\n            right,\n            bottom,\n            width: right - left,\n            height: bottom - top,\n        };\n        const data = { ignoreClick: true };\n\n        this.findSelectableTargets(data);\n        const selectedElements = this.hitTest(rect, data);\n        const result = this.setSelectedTargets(selectedElements);\n\n        return {\n            ...result,\n            rect,\n        };\n    }\n    /**\n     * Select target by virtual drag from startPoint to endPoint.\n     * The target of inputEvent is null.\n     */\n    public selectTargetsByPoints(\n        startPoint: number[],\n        endPoint: number[],\n    ) {\n        const mousedown = new MouseEvent(\"mousedown\", {\n            clientX: startPoint[0],\n            clientY: startPoint[1],\n            cancelable: true,\n            bubbles: true,\n        });\n        const mousemove = new MouseEvent(\"mousemove\", {\n            clientX: endPoint[0],\n            clientY: endPoint[1],\n            cancelable: true,\n            bubbles: true,\n        });\n        const mouseup = new MouseEvent(\"mousemove\", {\n            clientX: endPoint[0],\n            clientY: endPoint[1],\n            cancelable: true,\n            bubbles: true,\n        });\n        const gesto = this.gesto;\n        const result = gesto.onDragStart(mousedown);\n\n        if (result !== false) {\n            gesto.onDrag(mousemove);\n            gesto.onDragEnd(mouseup);\n        }\n    }\n    /**\n     * You can get the currently selected targets.\n     */\n    public getSelectedTargets(): Array<HTMLElement | SVGElement> {\n        return this.selectedTargets;\n    }\n    /**\n     * `OnDragStart` is triggered by an external event.\n     * @param - external event\n     * @example\n     * import Selecto from \"selecto\";\n     *\n     * const selecto = new Selecto();\n     *\n     * window.addEventListener(\"mousedown\", e => {\n     *   selecto.triggerDragStart(e);\n     * });\n     */\n    public triggerDragStart(e: MouseEvent | TouchEvent) {\n        this.gesto.triggerDragStart(e);\n        return this;\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.keycon && this.keycon.destroy();\n        this.gesto.unset();\n        this.injectResult.destroy();\n        this.dragScroll.dragEnd();\n        removeEvent(document, \"selectstart\", this._onDocumentSelectStart);\n\n        if (!this.options.portalContainer) {\n            this.target.parentElement?.removeChild(this.target);\n        }\n\n\n        this.keycon = null;\n        this.gesto = null;\n        this.injectResult = null;\n        this.target = null;\n        this.container = null;\n        this.options = null;\n    }\n    public getElementPoints(target: HTMLElement | SVGElement) {\n        const getElementRect = this.getElementRect || getDefaultElementRect;\n        const info = getElementRect(target);\n        const points = [info.pos1, info.pos2, info.pos4, info.pos3];\n\n        if (getElementRect !== getDefaultElementRect) {\n            const rect = target.getBoundingClientRect();\n\n            return fitPoints(points, rect);\n        }\n        return points;\n    }\n    /**\n     * Get all elements set in `selectableTargets`.\n     */\n    public getSelectableElements() {\n        const selectableElements: Array<HTMLElement | SVGElement> = [];\n\n        this.options.selectableTargets.forEach((target) => {\n            if (isFunction(target)) {\n                const result = target();\n\n                if (result) {\n                    selectableElements.push(...[].slice.call(result));\n                }\n            } else if (target instanceof Node) {\n                selectableElements.push(target);\n            } else if (isObject(target)) {\n                selectableElements.push(target.value || target.current);\n            } else {\n                const elements = [].slice.call(\n                    document.querySelectorAll(target)\n                );\n\n                selectableElements.push(...elements);\n            }\n        });\n\n        return selectableElements;\n    }\n    /**\n     * If scroll occurs during dragging, you can manually call this method to check the position again.\n     */\n    public checkScroll() {\n        if (!this.gesto.isFlag()) {\n            return;\n        }\n        const scrollOptions = this.scrollOptions;\n        const innerScrollOptions = this.gesto.getEventData().innerScrollOptions;\n        const hasScrollOptions = innerScrollOptions || scrollOptions?.container;\n\n        // If it is a scrolling position, pass drag\n        if (hasScrollOptions) {\n            this.dragScroll.checkScroll({\n                inputEvent: this.gesto.getCurrentEvent(),\n                ...(innerScrollOptions || scrollOptions),\n            });\n        }\n    }\n    /**\n     * Find for selectableTargets again during drag event\n     * You can update selectable targets during an event.\n     */\n    public findSelectableTargets(data: any = this.gesto.getEventData()): Array<HTMLElement | SVGElement> {\n        const selectableTargets = this.getSelectableElements();\n        const selectablePoints = selectableTargets.map(\n            (target) => this.getElementPoints(target),\n        );\n\n        data.selectableTargets = selectableTargets;\n        data.selectablePoints = selectablePoints;\n        data.selectableParentMap = null;\n\n        const options = this.options;\n        const hasIndexesMap = options.checkOverflow || options.innerScrollOptions;\n\n        if (hasIndexesMap) {\n            const parentMap = new Map<Element, InnerParentInfo>();\n\n            data.selectableInnerScrollParentMap = parentMap;\n            data.selectableInnerScrollPathsList = selectableTargets.map((target, index) => {\n                let parentElement = target.parentElement;\n\n                let parents: Element[] = [];\n                const paths: Element[] = [];\n\n                while (parentElement && parentElement !== document.body) {\n                    let info: InnerParentInfo = parentMap.get(parentElement);\n\n                    if (!info) {\n                        const overflow = getComputedStyle(parentElement).overflow !== \"visible\";\n\n                        if (overflow) {\n                            const rect = getDefaultElementRect(parentElement);\n\n                            info = {\n                                parentElement,\n                                indexes: [],\n                                points: [rect.pos1, rect.pos2, rect.pos4, rect.pos3],\n                                paths: [...paths],\n                            };\n\n                            parents.push(parentElement);\n                            parents.forEach(prevParentElement => {\n                                parentMap.set(prevParentElement, info);\n                            });\n                            parents = [];\n                        }\n                    }\n                    if (info) {\n                        parentElement = info.parentElement;\n\n                        parentMap.get(parentElement).indexes.push(index);\n                        paths.push(parentElement);\n                    } else {\n                        parents.push(parentElement);\n                    }\n                    parentElement = parentElement.parentElement;\n                }\n\n                return paths;\n            });\n        }\n\n        if (!options.checkOverflow) {\n            data.selectableInners = selectableTargets.map(() => true);\n        }\n\n        this._refreshGroups(data);\n\n        return selectableTargets;\n    }\n    /**\n     * External click or mouse events can be applied to the selecto.\n     * @params - Extenal click or mouse event\n     * @params - Specify the clicked target directly.\n     */\n    public clickTarget(\n        e: MouseEvent | TouchEvent,\n        clickedTarget?: Element\n    ): this {\n        const { clientX, clientY } = getClient(e);\n        const dragEvent = {\n            data: {\n                selectFlag: false,\n            },\n            clientX,\n            clientY,\n            inputEvent: e,\n            isClick: true,\n            isTrusted: false,\n            stop: () => {\n                return false;\n            },\n        } as any;\n        if (this._onDragStart(dragEvent, clickedTarget)) {\n            this._onDragEnd(dragEvent);\n        }\n        return this;\n    }\n    private setKeyController() {\n        const { keyContainer, toggleContinueSelect, toggleContinueSelectWithoutDeselect } = this.options;\n\n        if (this.keycon) {\n            this.keycon.destroy();\n            this.keycon = null;\n        }\n        if (toggleContinueSelect || toggleContinueSelectWithoutDeselect) {\n            this.keycon = new KeyController(keyContainer || window);\n            this.keycon\n                .keydown(this._onKeyDown)\n                .keyup(this._onKeyUp)\n                .on(\"blur\", this._onBlur);\n        }\n    }\n    private setKeyEvent() {\n        const { toggleContinueSelect, toggleContinueSelectWithoutDeselect } = this.options;\n        if ((!toggleContinueSelect && !toggleContinueSelectWithoutDeselect) || this.keycon) {\n            return;\n        }\n        this.setKeyController();\n    }\n    // with getter, setter property\n    private setKeyContainer(keyContainer: HTMLElement | Document | Window) {\n        const options = this.options;\n\n        diffValue(options.keyContainer, keyContainer, () => {\n            options.keyContainer = keyContainer;\n\n            this.setKeyController();\n        });\n    }\n    private getContinueSelect() {\n        const {\n            continueSelect,\n            toggleContinueSelect,\n        } = this.options;\n\n        if (!toggleContinueSelect || !this._keydownContinueSelect) {\n            return continueSelect;\n        }\n        return !continueSelect;\n    }\n    private getContinueSelectWithoutDeselect() {\n        const {\n            continueSelectWithoutDeselect,\n            toggleContinueSelectWithoutDeselect,\n        } = this.options;\n\n        if (!toggleContinueSelectWithoutDeselect || !this._keydownContinueSelectWithoutDeselection) {\n            return continueSelectWithoutDeselect;\n        }\n        return !continueSelectWithoutDeselect;\n    }\n    private setToggleContinueSelect(\n        toggleContinueSelect: string[][] | string[] | string\n    ) {\n        const options = this.options;\n\n        diffValue(options.toggleContinueSelect, toggleContinueSelect, () => {\n            options.toggleContinueSelect = toggleContinueSelect;\n\n            this.setKeyEvent();\n        });\n    }\n    private setToggleContinueSelectWithoutDeselect(\n        toggleContinueSelectWithoutDeselect: string[][] | string[] | string\n    ) {\n        const options = this.options;\n\n        diffValue(options.toggleContinueSelectWithoutDeselect, toggleContinueSelectWithoutDeselect, () => {\n            options.toggleContinueSelectWithoutDeselect = toggleContinueSelectWithoutDeselect;\n\n            this.setKeyEvent();\n        });\n    }\n    private setPreventDefault(value: boolean) {\n        this.gesto.options.preventDefault = value;\n    }\n    private setCheckInput(value: boolean) {\n        this.gesto.options.checkInput = value;\n    }\n    private initElement() {\n        this.target = createElement(\n            (<div className={CLASS_NAME}></div>) as any,\n            this.target,\n            this.container\n        );\n\n        const target = this.target;\n\n        const {\n            dragContainer,\n            checkInput,\n            preventDefault,\n            preventClickEventOnDragStart,\n            preventClickEventOnDrag,\n            preventClickEventByCondition,\n            preventRightClick = true,\n        } = this.options;\n        this.dragContainer =\n            typeof dragContainer === \"string\"\n                ? [].slice.call(document.querySelectorAll(dragContainer))\n                : dragContainer || (this.target.parentNode as any);\n        this.gesto = new Gesto(this.dragContainer, {\n            checkWindowBlur: true,\n            container: window,\n            checkInput,\n            preventDefault,\n            preventClickEventOnDragStart,\n            preventClickEventOnDrag,\n            preventClickEventByCondition,\n            preventRightClick,\n        }).on({\n            dragStart: this._onDragStart,\n            drag: this._onDrag,\n            dragEnd: this._onDragEnd,\n        });\n        addEvent(document, \"selectstart\", this._onDocumentSelectStart);\n\n        this.injectResult = injector.inject(target, {\n            nonce: this.options.cspNonce,\n        });\n    }\n    private hitTest(\n        selectRect: Rect,\n        data: any,\n        gestoEvent?: any,\n    ) {\n        const { hitRate, selectByClick } = this.options;\n        const { left, top, right, bottom } = selectRect;\n        const innerGroups: Record<string | number, Record<string | number, number[]>> = data.innerGroups;\n        const innerWidth = data.innerWidth;\n        const innerHeight = data.innerHeight;\n        const clientX = gestoEvent?.clientX;\n        const clientY = gestoEvent?.clientY;\n        const ignoreClick = data.ignoreClick;\n        const rectPoints = [\n            [left, top],\n            [right, top],\n            [right, bottom],\n            [left, bottom],\n        ];\n        const hitRateValue = splitUnit(`${hitRate}`);\n\n        const isHit = (points: number[][], el: Element) => {\n            const inArea = ignoreClick ? false : isInside([clientX, clientY], points);\n\n            if (selectByClick && inArea) {\n                return true;\n            }\n            const overlapPoints = getOverlapPoints(rectPoints, points);\n\n            if (!overlapPoints.length) {\n                return false;\n            }\n            let overlapSize = getAreaSize(overlapPoints);\n\n            // Line\n            let targetSize = 0;\n\n            if (overlapSize === 0 && getAreaSize(points) === 0) {\n                targetSize = getLineSize(points);\n                overlapSize = getLineSize(overlapPoints);\n            } else {\n                targetSize = getAreaSize(points);\n            }\n\n\n            if (hitRateValue.unit === \"px\") {\n                return overlapSize >= hitRateValue.value;\n            } else {\n                const rate = between(\n                    Math.round((overlapSize / targetSize) * 100),\n                    0,\n                    100\n                );\n\n                return rate >= Math.min(100, hitRateValue.value);\n            }\n        };\n        const selectableTargets: Array<HTMLElement | SVGElement> = data.selectableTargets;\n        const selectablePoints: number[][][] = data.selectablePoints;\n        const selectableInners: boolean[] = data.selectableInners;\n\n        if (!innerGroups) {\n            return selectableTargets.filter((_, i) => {\n                if (!selectableInners[i]) {\n                    return false;\n                }\n                return isHit(selectablePoints[i], selectableTargets[i]);\n            });\n        }\n        let selectedTargets: Array<HTMLElement | SVGElement> = [];\n        const minX = Math.floor(left / innerWidth);\n        const maxX = Math.floor(right / innerWidth);\n        const minY = Math.floor(top / innerHeight);\n        const maxY = Math.floor(bottom / innerHeight);\n\n        for (let x = minX; x <= maxX; ++x) {\n            const yGroups = innerGroups[x];\n\n            if (!yGroups) {\n                continue;\n            }\n            for (let y = minY; y <= maxY; ++y) {\n                const group = yGroups[y];\n\n                if (!group) {\n                    continue;\n                }\n                group.forEach(index => {\n                    const points = selectablePoints[index];\n                    const inner = selectableInners[index];\n                    const target = selectableTargets[index];\n\n                    if (inner && isHit(points, target)) {\n                        selectedTargets.push(target);\n                    }\n                });\n            }\n        }\n        return filterDuplicated(selectedTargets);\n    }\n    private initDragScroll() {\n        this.dragScroll\n            .on(\"scrollDrag\", ({ next }) => {\n                next(this.gesto.getCurrentEvent());\n            })\n            .on(\"scroll\", ({ container, direction }) => {\n                const innerScrollOptions = this.gesto.getEventData().innerScrollOptions;\n\n                if (innerScrollOptions) {\n                    this.emit(\"innerScroll\", {\n                        container,\n                        direction,\n                    });\n                } else {\n                    this.emit(\"scroll\", {\n                        container,\n                        direction,\n                    });\n                }\n            })\n            .on(\"move\", ({ offsetX, offsetY, inputEvent }) => {\n                const gesto = this.gesto;\n\n                if (!gesto || !gesto.isFlag()) {\n                    return;\n                }\n\n                const data = this.gesto.getEventData();\n                const boundArea = data.boundArea;\n\n                data.startX -= offsetX;\n                data.startY -= offsetY;\n\n                const innerScrollOptions = this.gesto.getEventData().innerScrollOptions;\n                const container = innerScrollOptions?.container;\n                let isMoveInnerScroll = false;\n\n                if (container) {\n                    const parentMap: Map<Element, InnerParentInfo> = data.selectableInnerScrollParentMap;\n                    const parentInfo = parentMap.get(container);\n\n                    if (parentInfo) {\n                        parentInfo.paths.forEach(scrollContainer => {\n                            const containerInfo = parentMap.get(scrollContainer);\n\n                            containerInfo.points.forEach(pos => {\n                                pos[0] -= offsetX;\n                                pos[1] -= offsetY;\n                            });\n                        });\n                        parentInfo.indexes.forEach(index => {\n                            data.selectablePoints[index].forEach((pos) => {\n                                pos[0] -= offsetX;\n                                pos[1] -= offsetY;\n                            });\n                        });\n                        isMoveInnerScroll = true;\n                    }\n                }\n                if (!isMoveInnerScroll) {\n                    data.selectablePoints.forEach((points: number[][]) => {\n                        points.forEach((pos) => {\n                            pos[0] -= offsetX;\n                            pos[1] -= offsetY;\n                        });\n                    });\n                }\n                this._refreshGroups(data);\n\n                boundArea.left -= offsetX;\n                boundArea.right -= offsetX;\n                boundArea.top -= offsetY;\n                boundArea.bottom -= offsetY;\n\n                this.gesto.scrollBy(\n                    offsetX,\n                    offsetY,\n                    inputEvent.inputEvent,\n                    // false\n                );\n                this._checkSelected(this.gesto.getCurrentEvent());\n            });\n    }\n    private _select(\n        selectedTargets: Array<HTMLElement | SVGElement>,\n        rect: Rect,\n        e: OnDragEvent,\n        isStart?: boolean\n    ) {\n        const inputEvent = e.inputEvent;\n        const data = e.data;\n        const result = this.setSelectedTargets(selectedTargets);\n\n        if (isStart) {\n            /**\n             * When the select(drag) starts, the selectStart event is called.\n             * @memberof Selecto\n             * @event selectStart\n             * @param {Selecto.OnSelect} - Parameters for the selectStart event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"selectStart\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * }).on(\"selectEnd\", e => {\n             *   e.afterAdded.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.afterRemoved.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.emit(\"selectStart\", {\n                ...result,\n                rect,\n                inputEvent,\n                data: data.data,\n                isTrusted: e.isTrusted,\n            });\n        }\n        if (result.added.length || result.removed.length) {\n            /**\n             * When the select in real time, the select event is called.\n             * @memberof Selecto\n             * @event select\n             * @param {Selecto.OnSelect} - Parameters for the select event\n             * @example\n             * import Selecto from \"selecto\";\n             *\n             * const selecto = new Selecto({\n             *   container: document.body,\n             *   selectByClick: true,\n             *   selectFromInside: false,\n             * });\n             *\n             * selecto.on(\"select\", e => {\n             *   e.added.forEach(el => {\n             *     el.classList.add(\"selected\");\n             *   });\n             *   e.removed.forEach(el => {\n             *     el.classList.remove(\"selected\");\n             *   });\n             * });\n             */\n            this.emit(\"select\", {\n                ...result,\n                rect,\n                inputEvent,\n                data: data.data,\n                isTrusted: e.isTrusted,\n            });\n        }\n    }\n    private _selectEnd(\n        startSelectedTargets: Array<HTMLElement | SVGElement>,\n        startPassedTargets: Array<HTMLElement | SVGElement>,\n        rect: Rect,\n        e: OnDragEvent,\n    ) {\n        const { inputEvent, isDouble, data } = e;\n        const { added, removed, prevList, list } = diff(\n            startSelectedTargets,\n            this.selectedTargets\n        );\n        const {\n            added: afterAdded,\n            removed: afterRemoved,\n            prevList: afterPrevList,\n            list: afterList,\n        } = diff(startPassedTargets, this.selectedTargets);\n        const type = inputEvent && inputEvent.type;\n        const isDragStart = type === \"mousedown\" || type === \"touchstart\";\n\n        /**\n         * When the select(dragEnd or click) ends, the selectEnd event is called.\n         * @memberof Selecto\n         * @event selectEnd\n         * @param {Selecto.OnSelectEnd} - Parameters for the selectEnd event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"selectStart\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * }).on(\"selectEnd\", e => {\n         *   e.afterAdded.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.afterRemoved.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.emit(\"selectEnd\", {\n            startSelected: startSelectedTargets,\n            beforeSelected: startPassedTargets,\n            selected: this.selectedTargets,\n            added: added.map((index) => list[index]),\n            removed: removed.map((index) => prevList[index]),\n            afterAdded: afterAdded.map((index) => afterList[index]),\n            afterRemoved: afterRemoved.map((index) => afterPrevList[index]),\n            isDragStart,\n            isClick: !!e.isClick,\n            isDouble: !!isDouble,\n            rect,\n            inputEvent,\n            data: data.data,\n            isTrusted: e.isTrusted,\n        });\n    }\n    private _onDragStart = (e: OnDragStart, clickedTarget?: Element) => {\n        const { data, clientX, clientY, inputEvent } = e;\n        const {\n            selectFromInside,\n            selectByClick,\n            rootContainer,\n            boundContainer,\n            preventDragFromInside = true,\n            clickBySelectEnd,\n            dragCondition,\n        } = this.options;\n\n        if (dragCondition && !dragCondition(e)) {\n            e.stop();\n            return;\n        }\n        data.data = {};\n        data.innerWidth = window.innerWidth;\n        data.innerHeight = window.innerHeight;\n        this.findSelectableTargets(data);\n        data.startSelectedTargets = this.selectedTargets;\n        data.scaleMatrix = createMatrix();\n        data.containerX = 0;\n        data.containerY = 0;\n\n\n        let boundArea = {\n            left: -Infinity,\n            top: -Infinity,\n            right: Infinity,\n            bottom: Infinity,\n        };\n        if (rootContainer) {\n            const containerRect = this.container.getBoundingClientRect();\n\n            data.containerX = containerRect.left;\n            data.containerY = containerRect.top;\n            data.scaleMatrix = getDistElementMatrix(this.container, rootContainer);\n        }\n\n        if (boundContainer) {\n            const boundInfo: Required<BoundContainer> =\n                isObject(boundContainer) && \"element\" in boundContainer\n                    ? {\n                        left: true,\n                        top: true,\n                        bottom: true,\n                        right: true,\n                        ...boundContainer,\n                    }\n                    : {\n                        element: boundContainer,\n                        left: true,\n                        top: true,\n                        bottom: true,\n                        right: true,\n                    };\n            const boundElement = boundInfo.element;\n            let rectElement: HTMLElement;\n\n            if (boundElement) {\n                if (isString(boundElement)) {\n                    rectElement = document.querySelector(boundElement);\n                } else if (boundElement === true) {\n                    rectElement = this.container;\n                } else {\n                    rectElement = boundElement;\n                }\n                const rect = rectElement.getBoundingClientRect();\n\n                if (boundInfo.left) {\n                    boundArea.left = rect.left;\n                }\n                if (boundInfo.top) {\n                    boundArea.top = rect.top;\n                }\n                if (boundInfo.right) {\n                    boundArea.right = rect.right;\n                }\n                if (boundInfo.bottom) {\n                    boundArea.bottom = rect.bottom;\n                }\n            }\n        }\n\n        data.boundArea = boundArea;\n\n        const hitRect = {\n            left: clientX,\n            top: clientY,\n            right: clientX,\n            bottom: clientY,\n            width: 0,\n            height: 0,\n        };\n        let firstPassedTargets: Array<HTMLElement | SVGElement> = [];\n\n        if (!selectFromInside || (selectByClick && !clickBySelectEnd)) {\n            const pointTarget = this._findElement(\n                clickedTarget || inputEvent.target, // elementFromPoint(clientX, clientY),\n                data.selectableTargets,\n            );\n            firstPassedTargets = pointTarget ? [pointTarget] : [];\n        }\n        const hasInsideTargets = firstPassedTargets.length > 0;\n        const isPreventSelect = !selectFromInside && hasInsideTargets;\n\n        // prevent drag from inside when selectByClick is false\n        if (isPreventSelect && !selectByClick) {\n            e.stop();\n            return false;\n        }\n\n        const type = inputEvent.type;\n        const isTrusted = type === \"mousedown\" || type === \"touchstart\";\n        /**\n         * When the drag starts (triggers on mousedown or touchstart), the dragStart event is called.\n         * Call the stop () function if you have a specific element or don't want to raise a select\n         * @memberof Selecto\n         * @event dragStart\n         * @param {OnDragStart} - Parameters for the dragStart event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"dragStart\", e => {\n         *   if (e.inputEvent.target.tagName === \"SPAN\") {\n         *     e.stop();\n         *   }\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        const result =\n            !(e as any).isClick && isTrusted\n                ? this.emit(\"dragStart\", { ...e, data: data.data })\n                : true;\n\n        if (!result) {\n            e.stop();\n            return false;\n        }\n\n        if (this.continueSelect) {\n            firstPassedTargets = passTargets(\n                this.selectedTargets,\n                firstPassedTargets,\n                this.continueSelectWithoutDeselect,\n            );\n            data.startPassedTargets = this.selectedTargets;\n        } else {\n            data.startPassedTargets = [];\n        }\n        this._select(\n            firstPassedTargets,\n            hitRect,\n            e,\n            true\n        );\n        data.startX = clientX;\n        data.startY = clientY;\n        data.selectFlag = false;\n        data.preventDragFromInside = false;\n\n        if (inputEvent.target) {\n            const offsetPos = calculateMatrixDist(data.scaleMatrix, [\n                clientX - data.containerX,\n                clientY - data.containerY,\n            ]);\n            this.target.style.cssText += `position: ${rootContainer ? \"absolute\" : \"fixed\"};`\n                + `left:0px;top:0px;`\n                + `transform: translate(${offsetPos[0]}px, ${offsetPos[1]}px)`;\n        }\n\n        if (isPreventSelect && selectByClick && !clickBySelectEnd) {\n            inputEvent.preventDefault();\n\n            // prevent drag from inside when selectByClick is true and force call `selectEnd`\n            if (preventDragFromInside) {\n                this._selectEnd(\n                    data.startSelectedTargets,\n                    data.startPassedTargets,\n                    hitRect,\n                    e\n                );\n                data.preventDragFromInside = true;\n            }\n        } else {\n            data.selectFlag = true;\n            // why?\n            // if (type === \"touchstart\") {\n            //     inputEvent.preventDefault();\n            // }\n            const { scrollOptions, innerScrollOptions } = this.options;\n\n            let isInnerScroll = false\n\n            if (innerScrollOptions) {\n                const inputEvent = e.inputEvent;\n                const target = inputEvent.target;\n\n                let innerScrollElement: HTMLElement | null = null;\n                let parentElement = target;\n\n                while (parentElement && parentElement !== document.body) {\n\n                    const overflow = getComputedStyle(parentElement).overflow !== \"visible\";\n\n                    if (overflow) {\n                        innerScrollElement = parentElement;\n                        break;\n                    }\n                    parentElement = parentElement.parentElement;\n                }\n                if (innerScrollElement) {\n                    data.innerScrollOptions = {\n                        container: innerScrollElement,\n                        checkScrollEvent: true,\n                        ...(innerScrollOptions === true ? {} : innerScrollOptions),\n                    };\n                    this.dragScroll.dragStart(e, data.innerScrollOptions);\n\n                    isInnerScroll = true;\n                }\n            }\n            if (!isInnerScroll && scrollOptions && scrollOptions.container) {\n                this.dragScroll.dragStart(e, scrollOptions);\n            }\n            if (clickBySelectEnd) {\n                data.selectFlag = false;\n                e.preventDrag();\n            }\n        }\n        return true;\n    };\n    private _checkSelected(e: any, rect = getRect(e, this.options.ratio)) {\n        const { data } = e;\n        const { top, left, width, height } = rect;\n        const selectFlag = data.selectFlag;\n        const {\n            containerX,\n            containerY,\n            scaleMatrix,\n        } = data;\n        const offsetPos = calculateMatrixDist(scaleMatrix, [\n            left - containerX,\n            top - containerY,\n        ]);\n        const offsetSize = calculateMatrixDist(scaleMatrix, [\n            width,\n            height,\n        ]);\n        let selectedTargets: Array<HTMLElement | SVGElement> = [];\n        if (selectFlag) {\n            this.target.style.cssText +=\n                `display: block;` +\n                `left:0px;top:0px;` +\n                `transform: translate(${offsetPos[0]}px, ${offsetPos[1]}px);` +\n                `width:${offsetSize[0]}px;height:${offsetSize[1]}px;`;\n\n            const passedTargets = this.hitTest(\n                rect,\n                data,\n                e,\n            );\n            selectedTargets = passTargets(\n                data.startPassedTargets,\n                passedTargets,\n                this.continueSelect && this.continueSelectWithoutDeselect,\n            );\n        }\n        /**\n         * When the drag, the drag event is called.\n         * Call the stop () function if you have a specific element or don't want to raise a select\n         * @memberof Selecto\n         * @event drag\n         * @param {OnDrag} - Parameters for the drag event\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   selectByClick: true,\n         *   selectFromInside: false,\n         * });\n         *\n         * selecto.on(\"drag\", e => {\n         *   e.stop();\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        const result = this.emit(\"drag\", {\n            ...e,\n            data: data.data,\n            isSelect: selectFlag,\n            rect,\n        });\n        if (result === false) {\n            this.target.style.cssText += \"display: none;\";\n            e.stop();\n            return;\n        }\n\n        if (selectFlag) {\n            this._select(selectedTargets, rect, e);\n        }\n    }\n    private _onDrag = (e: OnDrag) => {\n        if (e.data.selectFlag) {\n            const scrollOptions = this.scrollOptions;\n            const innerScrollOptions = e.data.innerScrollOptions;\n            const hasScrollOptions = innerScrollOptions || scrollOptions?.container;\n\n            // If it is a scrolling position, pass drag\n            if (hasScrollOptions && !e.isScroll && this.dragScroll.drag(e, innerScrollOptions || scrollOptions)) {\n                return;\n            }\n        }\n        this._checkSelected(e);\n    };\n    private _onDragEnd = (e: OnDragEvent) => {\n        const { data, inputEvent } = e;\n        const rect = getRect(e, this.options.ratio);\n        const selectFlag = data.selectFlag;\n\n        /**\n         * When the drag ends (triggers on mouseup or touchend after drag), the dragEnd event is called.\n         * @memberof Selecto\n         * @event dragEnd\n         * @param {OnDragEnd} - Parameters for the dragEnd event\n         */\n        if (inputEvent) {\n            this.emit(\"dragEnd\", {\n                isDouble: !!e.isDouble,\n                isClick: !!e.isClick,\n                isDrag: false,\n                isSelect: selectFlag,\n                ...e,\n                data: data.data,\n                rect,\n            });\n        }\n        this.target.style.cssText += \"display: none;\";\n\n        if (selectFlag) {\n            data.selectFlag = false;\n            this.dragScroll.dragEnd();\n        } else if (this.selectByClick && this.clickBySelectEnd) {\n            // only clickBySelectEnd\n            const pointTarget = this._findElement(\n                inputEvent?.target || elementFromPoint(e.clientX, e.clientY),\n                data.selectableTargets,\n            );\n            this._select(pointTarget ? [pointTarget] : [], rect, e);\n        }\n        if (!data.preventDragFromInside) {\n            this._selectEnd(\n                data.startSelectedTargets,\n                data.startPassedTargets,\n                rect,\n                e\n            );\n        }\n    };\n    private _sameCombiKey(e: any, keys: string | string[] | string[][], isKeyup?: boolean) {\n        if (!keys) {\n            return false;\n        }\n        const combi = getCombi(e.inputEvent, e.key);\n        const nextKeys = [].concat(keys);\n        const toggleKeys = isArray(nextKeys[0]) ? nextKeys : [nextKeys];\n\n        if (isKeyup) {\n            const singleKey = e.key;\n\n            return toggleKeys.some((keys) =>\n                keys.some((key) => key === singleKey)\n            );\n        }\n        return toggleKeys.some((keys) =>\n            keys.every((key) => combi.indexOf(key) > -1)\n        );\n    }\n    private _onKeyDown = (e: any) => {\n        const options = this.options;\n        let isKeyDown = false;\n\n        if (!this._keydownContinueSelect) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelect);\n\n            this._keydownContinueSelect = result;\n            isKeyDown ||= result;\n        }\n        if (!this._keydownContinueSelectWithoutDeselection) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelectWithoutDeselect);\n\n            this._keydownContinueSelectWithoutDeselection = result;\n            isKeyDown ||= result;\n        }\n        if (!isKeyDown) {\n            return;\n        }\n        /**\n         * When you keydown the key you specified in toggleContinueSelect, the keydown event is called.\n         * @memberof Selecto\n         * @event keydown\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.emit(\"keydown\", {\n            keydownContinueSelect: this._keydownContinueSelect,\n            keydownContinueSelectWithoutDeselection: this._keydownContinueSelectWithoutDeselection,\n        });\n    };\n    private _onKeyUp = (e: any) => {\n        const options = this.options;\n        let isKeyUp = false;\n\n        if (this._keydownContinueSelect) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelect, true);\n            this._keydownContinueSelect = !result;\n\n            isKeyUp ||= result;\n        }\n        if (this._keydownContinueSelectWithoutDeselection) {\n            const result = this._sameCombiKey(e, options.toggleContinueSelectWithoutDeselect, true);\n            this._keydownContinueSelectWithoutDeselection = !result;\n\n            isKeyUp ||= result;\n        }\n        if (!isKeyUp) {\n            return;\n        }\n\n        /**\n         * When you keyup the key you specified in toggleContinueSelect, the keyup event is called.\n         * @memberof Selecto\n         * @event keyup\n         * @example\n         * import Selecto from \"selecto\";\n         *\n         * const selecto = new Selecto({\n         *   container: document.body,\n         *   toggleContinueSelect: \"shift\";\n         *   keyContainer: window,\n         * });\n         *\n         * selecto.on(\"keydown\", () => {\n         *   document.querySelector(\".button\").classList.add(\"selected\");\n         * }).on(\"keyup\", () => {\n         *   document.querySelector(\".button\").classList.remove(\"selected\");\n         * }).on(\"select\", e => {\n         *   e.added.forEach(el => {\n         *     el.classList.add(\"selected\");\n         *   });\n         *   e.removed.forEach(el => {\n         *     el.classList.remove(\"selected\");\n         *   });\n         * });\n         */\n        this.emit(\"keyup\", {\n            keydownContinueSelect: this._keydownContinueSelect,\n            keydownContinueSelectWithoutDeselection: this._keydownContinueSelectWithoutDeselection,\n        });\n    };\n    private _onBlur = () => {\n        if (this._keydownContinueSelect || this._keydownContinueSelectWithoutDeselection) {\n            this._keydownContinueSelect = false;\n            this._keydownContinueSelectWithoutDeselection = false;\n            this.emit(\"keyup\", {\n                keydownContinueSelect: this._keydownContinueSelect,\n                keydownContinueSelectWithoutDeselection: this._keydownContinueSelectWithoutDeselection,\n            });\n        }\n    };\n    private _onDocumentSelectStart = (e: any) => {\n        if (!this.gesto.isFlag()) {\n            return;\n        }\n        let dragContainer = this.dragContainer;\n\n        if (dragContainer === window) {\n            dragContainer = document.documentElement;\n        }\n        const containers =\n            dragContainer instanceof Element\n                ? [dragContainer]\n                : ([].slice.call(dragContainer) as Element[]);\n        const target = e.target;\n\n        containers.some((container) => {\n            if (container === target || container.contains(target)) {\n                e.preventDefault();\n                return true;\n            }\n        });\n    };\n    private _findElement(clickedTarget: Element | null, selectableTargets: Array<Element>): HTMLElement | SVGElement {\n        let pointTarget = clickedTarget;\n\n        while (pointTarget) {\n            if (selectableTargets.indexOf(pointTarget) > -1) {\n                break;\n            }\n            pointTarget = pointTarget.parentElement;\n        }\n        return pointTarget as any;\n    }\n    private _refreshGroups(data: any) {\n        const innerWidth = data.innerWidth;\n        const innerHeight = data.innerHeight;\n        const selectablePoints: number[][][] = data.selectablePoints;\n\n        if (this.options.checkOverflow) {\n            const innerScrollContainer = this.gesto.getEventData().innerScrollOptions?.container;\n            const parentMap: Map<Element, InnerParentInfo> = data.selectableInnerScrollParentMap;\n            const innerScrollPathsList: Element[][] = data.selectableInnerScrollPathsList;\n\n            data.selectableInners = innerScrollPathsList.map((innerScrollPaths, i) => {\n                let isAlwaysTrue = false;\n                return innerScrollPaths.every(target => {\n                    if (isAlwaysTrue) {\n                        return true;\n                    }\n                    if (target === innerScrollContainer) {\n                        isAlwaysTrue = true;\n                        return true;\n                    }\n\n                    const rect = parentMap.get(target);\n\n                    if (rect) {\n                        const points1 = selectablePoints[i];\n                        const points2 = rect.points;\n                        const overlapPoints = getOverlapPoints(points1, points2);\n\n                        if (!overlapPoints.length) {\n                            return false;\n                        }\n                    }\n                    return true;\n                });\n            });\n        }\n        if (!innerWidth || !innerHeight) {\n            data.innerGroups = null;\n        } else {\n            const selectablePoints: number[][][] = data.selectablePoints;\n\n            const groups: Record<string | number, Record<string | number, number[]>> = {};\n\n            selectablePoints.forEach((points, i) => {\n                let minX = Infinity;\n                let maxX = -Infinity;\n                let minY = Infinity;\n                let maxY = -Infinity;\n\n                points.forEach(pos => {\n                    const x = Math.floor(pos[0] / innerWidth);\n                    const y = Math.floor(pos[1] / innerHeight);\n\n                    minX = Math.min(x, minX);\n                    maxX = Math.max(x, maxX);\n                    minY = Math.min(y, minY);\n                    maxY = Math.max(y, maxY);\n                });\n\n                for (let x = minX; x <= maxX; ++x) {\n                    for (let y = minY; y <= maxY; ++y) {\n                        groups[x] = groups[x] || {};\n                        groups[x][y] = groups[x][y] || [];\n\n                        groups[x][y].push(i);\n                    }\n                }\n            });\n\n            data.innerGroups = groups;\n        }\n    }\n}\n\ninterface Selecto extends SelectoProperties { }\n\nexport default Selecto;\n","import SelectoManager from \"./SelectoManager\";\n\nclass Selecto extends SelectoManager {\n\n}\nexport default Selecto;\n","import Selecto, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (Selecto as any)[name] = (modules as any)[name];\n}\n\nmodule.exports = Selecto;\nexport * from \"./index\";\nexport default Selecto;\n"],"names":["getClient","e","touch","touches","changedTouches","clientX","clientY","filterDuplicated","arr","Map","filter","value","index","indexOf","map","has","set","elementFromPoint","document","createElement","jsx","prevTarget","container","tag","children","attributes","className","style","el","name","setAttribute","elChildren","forEach","child","i","split","hasClass","addClass","elStyle","appendChild","h","attrs","_i","_a","_b","_c","diffValue","prev","cur","func","getRect","ratio","boundArea","data","distX","distY","_d","startX","startY","nextHeight","Math","sqrt","nextWidth","width","abs","height","maxWidth","left","right","maxHeight","top","bottom","calculateBoundSize","tx","min","ty","getDefaultElementRect","rect","getBoundingClientRect","pos1","pos2","pos3","pos4","passTargets","beforeTargets","afterTargets","continueSelectWithoutDeselect","diff","list","prevList","added","removed","maintained","nextIndex","getLineSize","points","size","length","max","getDist","injector","styled","CLASS_NAME","PROPERTIES","OPTIONS","__spreadArray","OPTION_TYPES","boundContainer","portalContainer","dragContainer","selectableTargets","Array","selectByClick","Boolean","selectFromInside","continueSelect","toggleContinueSelect","toggleContinueSelectWithoutDeselect","keyContainer","hitRate","Number","scrollOptions","Object","checkInput","preventDefault","cspNonce","String","getElementRect","Function","preventDragFromInside","rootContainer","dragCondition","clickBySelectEnd","preventClickEventOnDragStart","preventClickEventOnDrag","checkOverflow","innerScrollOptions","EVENTS","METHODS","__extends","options","_super","_this","DragScroll","clickedTarget","inputEvent","stop","innerWidth","window","innerHeight","findSelectableTargets","startSelectedTargets","selectedTargets","scaleMatrix","createMatrix","containerX","containerY","Infinity","containerRect","getDistElementMatrix","boundInfo","isObject","element","boundElement","rectElement","isString","querySelector","hitRect","firstPassedTargets","pointTarget","_findElement","target","hasInsideTargets","isPreventSelect","type","isTrusted","result","isClick","emit","startPassedTargets","_select","selectFlag","offsetPos","calculateMatrixDist","cssText","_selectEnd","isInnerScroll","inputEvent_1","innerScrollElement","parentElement","body","overflow","getComputedStyle","checkScrollEvent","dragScroll","dragStart","preventDrag","hasScrollOptions","isScroll","drag","_checkSelected","isDouble","isDrag","isSelect","dragEnd","isKeyDown","_keydownContinueSelect","_sameCombiKey","_keydownContinueSelectWithoutDeselection","keydownContinueSelect","keydownContinueSelectWithoutDeselection","isKeyUp","gesto","isFlag","documentElement","containers","Element","slice","call","some","contains","undefined","initElement","initDragScroll","setKeyController","beforeSelected","selected","point1","point2","ignoreClick","selectedElements","hitTest","setSelectedTargets","startPoint","endPoint","mousedown","MouseEvent","cancelable","bubbles","mousemove","mouseup","onDragStart","onDrag","onDragEnd","triggerDragStart","off","keycon","destroy","unset","injectResult","removeEvent","_onDocumentSelectStart","removeChild","info","fitPoints","selectableElements","isFunction","push","Node","current","elements","querySelectorAll","getEventData","checkScroll","getCurrentEvent","getSelectableElements","selectablePoints","getElementPoints","selectableParentMap","hasIndexesMap","parentMap_1","selectableInnerScrollParentMap","selectableInnerScrollPathsList","parents","paths","get","indexes","prevParentElement","selectableInners","_refreshGroups","dragEvent","_onDragStart","_onDragEnd","KeyController","keydown","_onKeyDown","keyup","_onKeyUp","on","_onBlur","setKeyEvent","preventClickEventByCondition","preventRightClick","parentNode","Gesto","checkWindowBlur","_onDrag","addEvent","inject","nonce","selectRect","gestoEvent","innerGroups","rectPoints","hitRateValue","splitUnit","isHit","inArea","isInside","overlapPoints","getOverlapPoints","overlapSize","getAreaSize","targetSize","unit","rate","between","round","_","minX","floor","maxX","minY","maxY","x","yGroups","y","group","inner","next","direction","offsetX","offsetY","isMoveInnerScroll","parentMap_2","parentInfo","scrollContainer","containerInfo","pos","scrollBy","isStart","afterAdded","afterRemoved","afterPrevList","afterList","isDragStart","startSelected","offsetSize","passedTargets","keys","isKeyup","combi","getCombi","key","nextKeys","concat","toggleKeys","isArray","singleKey_1","every","innerScrollContainer_1","parentMap_3","innerScrollPathsList","innerScrollPaths","isAlwaysTrue","points1","points2","selectablePoints_1","groups_1","Selecto","Properties","prototype","property","enumerable","configurable","getter","camelize","setter","defineProperty","EventEmitter","SelectoManager","modules","module","exports"],"mappings":"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"}